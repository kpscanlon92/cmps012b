head	1.5;
access;
symbols;
locks;
comment	@ * @;


1.5
date	2013.09.25.21.19.56;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.09.25.21.18.05;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.09.25.21.17.27;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.09.25.21.05.51;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.01.23.01.16.07;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: hello.c,v 1.4 2013-09-25 14:18:05-07 - - $

//
// NAME
//    hello - the canonical hello world program
//
// SYNOPSIS
//    hello
//
// DESCRIPTION
//    Prints the message "Hello, world!"
//

#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>

int main (int argc, char **argv) {
   if (argc != 1) {
      fprintf (stderr, "Usage: %s\n", basename (argv[0]));
      exit (EXIT_FAILURE);
   }
   printf ("Hello, World!\n");
   return EXIT_SUCCESS;
}

/*
//TEST// ./hello >hello.out1 2>hello.err1; echo status = $? >hello.exit1
//TEST// morecat hello.out1 hello.err1 hello.exit1 >hello.lis1
//TEST// rm hello.out1 hello.err1 hello.exit1
//TEST// ./hello goodbye >hello.out2 2>hello.err2; \
//TEST//       echo status = $? >hello.exit2
//TEST// morecat hello.out2 hello.err2 hello.exit2 >hello.lis2
//TEST// rm hello.out2 hello.err2 hello.exit2
//TEST// mkpspdf hello.ps hello.c* hello*.lis*
*/

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hello.c,v 1.3 2013-09-25 14:17:27-07 - - $
d27 1
d36 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hello.c,v 1.2 2013-09-25 14:05:51-07 - - $
d30 2
a31 1
//TEST// ./hello >hello.out2 2>hello.err2; echo status = $? >hello.exit2
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hello.c,v 1.1 2013-01-22 17:16:07-08 - - $
d27 6
a32 2
//TEST// runlistcat hello1 ./hello 
//TEST// runlistcat hello2 ./hello goodbye 
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hello.c,v 1.1 2012-01-25 13:22:18-08 - - $
d27 3
a29 3
//TEST// runprog -x hello.lis1 ./hello 
//TEST// runprog -x hello.lis2 ./hello goodbye 
//TEST// mkpspdf hello.ps hello.c* hello.lis?
@

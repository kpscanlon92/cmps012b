head	1.4;
access;
symbols;
locks;
comment	@# @;


1.4
date	2013.05.01.01.35.00;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.02.26.23.09.41;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.11.15.21.08.50;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.10.31.00.09.23;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@#!/bin/sh
# $Id: mk.tests,v 1.3 2013/02/26 23:09:41 - - $

export PATH=$PATH:/afs/cats.ucsc.edu/courses/cmps012b-wm/bin
export LC_COLLATE=C

function runtest {
   test=$1
   shift
   echo $0: Running $test "$@@"
   "$@@" 1>test.$test.out 2>test.$test.err
   echo status = $? >test.$test.status
   ls -goa test.$test.*
}

grind='valgrind --leak-check=full'

runtest nsort.good  nsort        <data.nsort.good.in
runtest nsort.bad   nsort        <data.nsort.bad.in
runtest nsort.debug nsort -d     <data.nsort.good.in
runtest nsort.grind $grind nsort <data.nsort.good.in

runtest lsort.good  lsort        <data.lsort.good.in
runtest lsort.bad   lsort        <data.lsort.bad.in
runtest lsort.debug lsort -d     <data.lsort.good.in
runtest lsort.grind $grind lsort <data.lsort.good.in

@


1.3
log
@-
@
text
@d2 3
a4 3
# $Id: mk.tests,v 1.2 2012-11-15 13:08:50-08 - - $
PATH=$PATH:/afs/cats.ucsc.edu/courses/cmps012b-wm/bin
export PATH
d6 10
a15 1
runprog=runprogram.perl
d17 11
a27 7
for sort in nsort lsort
do
   $runprog -otest.$sort.good   -0data.$sort.good.in    $sort
   $runprog -otest.$sort.bad    -0data.$sort.bad.in     $sort
   $runprog -otest.$sort.debug  -0data.$sort.good.in    $sort -d
   $grind $sort <data.$sort.good.in >grind.$sort.out 2>grind.$sort.err
done
@


1.2
log
@-
@
text
@d2 1
a2 1
# $Id: mk.tests,v 1.1 2012-10-30 17:09:23-07 - - $
d7 1
d13 1
a13 1
   $runprog -otest.$sort.bcheck -0data.$sort.good.in -B $sort
@


1.1
log
@-
@
text
@d2 1
a2 1
# $Id: mk.tests,v 1.1 2011-04-26 18:40:34-07 - - $
d5 1
@

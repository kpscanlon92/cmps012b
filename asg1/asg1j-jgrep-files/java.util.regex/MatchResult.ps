%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: MatchResult.pdf
%%Creator: Adobe Acrobat 9.5.3
%%For: wmackey
%%CreationDate: 03/24/2014, 07:48:09 PM
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612 792
%%CropBox: 0 0 612 792
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq{pop}{setblackgeneration}ifelse
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq{pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 454 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-13:18:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:CreatorTool="cairo 1.9.5 (http://cairographics.org)"
   pdf:Producer="cairo 1.9.5 (http://cairographics.org)"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
<</PageSize [612 792 ] >> setpagedevice
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_CoolType_Core/ps get exec
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IDTBAA+LiberationSans def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-203 -303 1050 910} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6E3FA47E2CCDBCC55E94BFDE371D21BECBB2BD8DA34
6464F806CAE80624> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans /IDTBAA+LiberationSans findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: KFXAAA+LiberationSans-BoldItalic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /KFXAAA+LiberationSans-BoldItalic def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-209 -303 1128 1030} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6E3FAA6> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZQVJYM+LiberationSans-BoldItalic /KFXAAA+LiberationSans-BoldItalic findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: ZPCBAA+LiberationSans-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ZPCBAA+LiberationSans-Bold def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-184 -303 1062 1033} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6E3FA47E2CCDBCC55E94BFDE371D21BECBB2BD8DA34
6464F806CAE80624> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZQVJYN+LiberationSans-Bold /ZPCBAA+LiberationSans-Bold findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /JBTAAA+DejaVuLGCSansMono def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-344 -403 718 1058} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C12A5277DF0DB850BEDCA3CE762D74A5C75005622C
EA4955F5DAC48452FB83D2> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono /JBTAAA+DejaVuLGCSansMono findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: ZAYAAA+DejaVuLGCSansMono-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ZAYAAA+DejaVuLGCSansMono-Bold def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-447 -401 721 1102} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C12A5277DF0DB850BEDCA3CE762D74A5C75005622C
EA4955F5DAC48452FB83D2> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZQVJYP+DejaVuLGCSansMono-Bold /ZAYAAA+DejaVuLGCSansMono-Bold findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: GJMAAA+DejaVuLGCSerif Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /GJMAAA+DejaVuLGCSerif def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-770 -401 1679 1242} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED9313AFF691AF9DEA7EFE9F59246D6675CBE2
23F5D9796E7E2CD60A70D0> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZQVJYQ+DejaVuLGCSerif /GJMAAA+DejaVuLGCSerif findfont ct_VMDictPut
Adobe_CoolType_Core/pt get exec
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
[1 0 0 1 0 0 ]ct
72 72 mo
540 72 li
540 720 li
72 720 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
72 142.812 mo
539.5 142.812 li
539.5 719.5 li
72 719.5 li
cp
f
72 72 mo
540 72 li
540 105.312 li
72 105.312 li
cp
gsave
grestore
/198794680.0 
<<
/ID /198794680.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 500 37 ] 
/XStep 2035 
/YStep 2035 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
500 0 li
500 37 li
0 37 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[500 0 0 -37 0 792 ]ct
snap_to_device
<<
/T 1
/W 500 
/H 37 
/M[500 0 0 -37 0 37 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J2<V_-?L"+c\+RAE(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:9&*UN+GN`CG'Pno>@r[p
/^ZXc`nP-]>V(#EXA[#U[8Usdl4('!-,!]iQs7!?-&K0AkkNhS!pPTbj"K)UIKq*fY@dCXSK1c:Gfa7Z
3_[8;9:XO3mCPNYf58"PDKf<uk4a;=i,EpG4sq/+a5h8d>eUD+\#Z@gCH%\U2CgKF:\mqkV+8/Jm*3._
Y4#+Sf^!^gS]Jj@YI!CaI"!.2TAe\u>()r[giq-?XNt,Ar]kDnm\.@59</%Wn&)HC]W^Xn"[5`rkl3+D
_`J;p0\eXS_iX1U&%q6rY7a7n*&S9qd0s4o`3E9M'Z1MnAHPCV]L*W+;=&]I`j*a5+2cM8Bd(Q<"E>[,
1*guda_3E%BGpB:We\aFUp>YGdcA(lTebE>/kU0f]/*.p*7H^f;e4'+9CgTm/5C6plS;46<4=d2P>(:$
:GZOp5#0T!f.9Yer9$CBoBbEcd50;X44*UO+">PnFXor0e5[Yce$N[F;:?49pI\Cb9*i3`bVKIJ[+0dk
[8j<']YN+KRd"#,:??J%eTIV.>h@35M."qY*J%["b_:`$5#.YuBXP9pdqV"2SQTRVf&_e+=SDE5Cg!)6
O(DR]mC[$K[pb\J)7PUaG[7e$l#tobXlFfbpXT"^?Pi,0I,7r4pO$@-^(#X#Qqe0;htT)7LL>>o)1^_6
-0^=r=6;T)@JIhqLg[^c23VJ%*^u+J(Y2TFjZ*6JP%E<Y-')US#&f0)H/9^0A/MI^JnDP'LS3V:p5,SX
REg_Jh>3/.JSKM6UO)4ZcF']\]&#HNC`:U2YA5'ec)^3BhUAgt4!)q\DB!c,[I+u7l)np9539%f4#ZiG
Dn?5RWp]`jQc&=T;3f)i*+p50ESQ$ZAb(58,Kk+tD_oUX]LO-io:4DGan*1N8'CQ'2cJ/tI+M$;oppk,
flhck?.X8Ua&1!'4kE]cpUp6Qf(QdIJ_g$j%u]?>h2d?JGCG=8ja*L7UZD4,J$J!THrjbF)*D9>nb^'C
^[lgP0@"-V4m1)_I%PW1ec#N7g[oT[a7K4XT9%"jhja1cYNbu"#Km)i)u>!oH2bV"m.d4^"G(Kg!C+'H
"<^A8K!79.^:4aSTMuk^O@AY)Ld;6<PL>,E.M'A:6OI0Saa>ar(.!1Z$R)#dL2c8D6b"cY@I-45d0]M6
aG11u,Y3bgQ6=(iEt.+[6Ab4N.)`WH%O.-)M6Q7p^\E3jU@_TGO]j!L356+N`*ePOMCuj"N>*T_:Q.$.
2TD-A*9-$uNq&]"7@:On@pF,7O]FQapl?IA"EffgA7S%UOX";=a;GMo7`aPR,U&\CHno/$8SKn*,j^kS
nk)_Mksm1s/=huFSlA:L-8K,]X-,6H<D+bs-tN7[Q1Dpl90"((j]&pZo!V.`\T',G['c9!Q=%`ONA2`4
[$WW2?;4"`1M.WKRWBZW9NdcBArPB1;c7,Ll+]":%,.5XAoL@6dlV0+l\Mi=7aG4I4_<.<P#?IOcY7Md
kOae+P=BuI.LA=Pr;rTiqLh[IAO,Gg&"rPIISi]674;.QU/Td*:^R4j-qt5GZegPcH7MRc]dBL2Wf>>n
=\#Gc,GMPgL!rXG818U5U,3LR;Art2.CD".[-j>\)LY"'4[Z1?hOhrj&O.\/4fT5\O\tD;<N%b5W>/0U
:o^d"C8G=6<Ha!q)N@b_%9fiS^6DNAdj8dX@'2AUOB.7\=K7WtY4\Bff,D&%leQ]e[GJ;mRQ"VhrI:r7
_R7Q*gK1HKOg2;TYLgob1$llI)&?u2g"ST#m)>X(p3P%g.4&[[25IUfEn/mE6Y<G8X;LZNeQSGHCTTJ$
[W]gK>K^AhXkf\[<ncJ:97:[E4ik,KrnuKlMejt6a157-g>*.7F7*Vf[T=g=>haUKD["4lGA?O$)mO5!
+N51aVY+9=ehM)Cn@c<JpYS'uIIBo*^6cS4?T[:sn-/O!fFIpgMt;KR/b6Zco)rIF"+'H#&&$UG#2pO0
Ks3HO_>$q8@B9WcYf7-iQtllb)u#2n:*%7IP7$<-mtgG`-,\A&)<!\XK<]#2`jaD6?qb-g7Ms%V\3OL3
4<]f,(.-*/Y9RH!M3>),:W]"l.:kW*ORbRlaa"['AR'kR11j&"q,8j*m#RKS/mleI2^7BH_3&ch9?J-e
-K_DkR'OGAc8e*GAfTQr1VguRRJSDpI*J:i[T1S_k<%mT\YHL6K?b?=6"g]NT6-Z]bdoH"kH-D517jf\
RS,PO9ehi$(9,hfXC2N#;ld26XOVX/=_h;YXYmPhebZa[CFsn9Fgf':g@&/1*J(Kh(9H)U_dr)HO03YD
WnD^iBPdXJYVr)lf)&Z]D2jCZG)jo(3pU'gXbXAE51eJW?Z^'HOgk'smFPhJ@#P\O]m$oah](I#Df,6_
\)./A]CUJiSaJ2@VZ,M$",1\8(Vt?7!8s@HKCGH?Wjm6jiuDiknK%;>3$/jp4GS^\hClop58E7L)j0[Y
+j'O-.GiiaO`J0;`qd@tjBR>(Eo(BJ3KH8aS<o^dhLWPSQTXI/2k9I<"k#FJ:$:<`SFdjp0?+",lWn#%
N"3PPqZg?krHkX>%`d4Jf441GMluaPdG$_FAaUS^ZZb3;h0Y3$mX;^XpAWUuqqlM_*WNA;^C/l/a*?sA
la6GJ(#QYoFRYkXanOZtjEt$Vnf?o6q0qqr]Q\\m^,O"+mhb1MkG%T4PJMRk%G*a=S+1rO_tT:@0?*[p
(ZP2Dqp0?7rP-,AIeVat06u-_0=prY+5m(#M=A4!\G>"mk4Pp=oY/A`qd3FlHgc+LIQ,UM5@<LMDi+6Q
TAK>bO7@Z@OnV%H_>U!)n,EpQo_uo!q4H"+I#n(#YI+<_df*&7pFkh3n*L#Arr!AOrf>Y2YS."5)ZOb"
!:V-1E$Y=b#lnn;!AAj'&-2\QHN[c#(P-`GYYPDK7MhbD"eg2F&6/lf:BZbh"d!-s&5NL,<sK:6"d!@#
OBi*QFU!qK#1-!K:jiRf9*hb%"E7WMn<XBaRgBY"$F#p'n>QZ^T*m>S$8>B_n@],^]*>L;$ZNujE6eq(
aU8[+$W)HbYf@'3eI(f2%<,AWd-V+#V%.I@%?U/e&6fO(oaC8M%M7Y2YjW%jrs^[j&+Kf7&?QNV#7/^%
#>g^&E(^>\>8%T/'+dkOd5;U-3tlTm'<s>-nN@PJ8JG#l'i@=4d8(I]7htPm'G41Vd7"di@2Dd\(6L6c
0j,5g>o)sc(/]u+0om(^Ii"5[(m/YN;0*Q$>8cs`(_Ls.dA%T,CDtTI)c<"B0o[#IW>b<?)\J8MER,N-
_]+`))H"HoOjb</F;I5a*jOlLZ0W8]miN//*g,t7dJG#K"Wqa]+;+u&;=u%Druk8X+]8OgZ4.t?'-L1#
+7].LnfK(H#pAd&,8)LK1)D-t6QpIp,4[rDE^:g'73qEd,dK!HdQ&OM=!a"g,#Vhn;GeX$3@;%+-LskY
1,C2=F!It2-'DgcEd&hWo-_s<-k_R^_/L1KC_kHq.Y2CP'!WqWZRU!t.akO;'"KKtV(<7k/5il+'$VrT
ZRbUW/@*SQ18c[Dj">B&/J@;!En;g^mk+,)/<\I8'(%:!fe&BG0!bp<;V`t2UG&qE/<^r+d`jGo+#.g?
0s]Oh1A*CXpG#SG/b99'o+*>B2_Ymo1D7M[o.)R/k;#t71p^7=dmGq_2)-mY1U@<>;c>S17kEV4(3=j=
F*fkiBfK%@2tMY]'8JQRO#OD'3"qiBF-AT4T/e^&3E)h9PC5H4RlU)&3jZ@X'9P@tQTN[(3O?agPHR))
brmkZ3:k`];pdcBeN21@4gU\Bo=I't^H.SO4#>PSe(m3Oo0?6j44F9mZjAinY<Pt35'-*R'H]V>iB`[V
5h#HoPQO5D+[GZ-5I<(01\!L,@mja7(-uM"Zq3\#9gmK$7?gS9P[?l/;arT>7J'MIZti-Q91<rB7200#
Zu&=_AOc<C7oWPZP^Q!-Mb!D`8Mk?VFHoDhQUt/G82QH"1hT<8InE\@7o[)lPbC\@[7W9$9D#2W1p9H7
VaXS.9bc2R1t>=M\P:Su86!W'<1QLcgJ7D"9_@dH2"O4Z=\c@$:=Ph&JRB6-;c-O-(,Zb&<?4sO7o>O#
;0=*]oat'O&Q2Ud;7.KDFZE@-)cJUW<&HO4'eNCm+]NS3;Y=0k[4>4A2cV^a<HV#8[:rPS>>eI.<)lFi
[9Zi+@omec<0_6!'oc9p@9HSJ=LE?TopJo>F''0&=B-SHeYcU$WEIc<;tZne'pDjEO]h@\>]mY_<GiPf
>SX[!'t)Y![FJQJhd*YG?BsPW($T'_lWt=p?<-Aup#fZsq-MVE@$UOq2A'=3ojK`f@(#`8<Vp4th-j=T
@?q(*ee;I,s'O>-@s0M5[PM@#-Y&H2@Q"<sFoPrP#@^_*A9L1K((Xra.:uULAelP$<Zu%_>@c;*B6JQ3
G#)RJIq'6m?iaLIJQZ[Zj(UE:@MY)?<UX3oT44+_Bf;Ao2NMV(QYKQ\C%e`EesU$6X(iETCY#t/[O5nB
bA9'1Cj*!t[^BCaR;"RqCmOC%QEtCniG&BtDKbbip=!lEs'8[WDjL?>[fL;gnSM>8Cc;lD2XPN$(N)/N
D"d+6(DC^G-Z<&uEn:P8[l80u4)S*0FE[D#2NAMr<G;J:F]Vjk[paFQO`f8WFa%JAQWb,J=a$-SG#ra-
pNq,YGBXj?GP>ls=)W="Mg(LtGZU)RpP4#qUNlNqGh7Rl\!M?+X*L&<GuqJ"QXbBOTm?C;H?ZW@pOR]N
d<p/?G;mclf@tWG`I,/:IFme/f=?<2hgTe:IQ.(O=4_nfrI9%kIol)h2u@fM;AEV?JX@6r5u\RY(P-fL
'f[.a2dM"p.=p,-K(q!Mp`4rg)2";"KNL0bfL^`U7tVX%K@j+T=>tr$<J:-3K/c;S\6FNOEJ-;]KGZN\
G\Mm,Dh[slL0.l<G^Y7t7the>Lj4o8\<Dd%UPKbRLNn<+fV+&PV2JHTK".q@G]FO$^Pj"BMR\@q\3#IJ
c]&c7Jp>Os\CljD`Jo,)MjT-W)!d,?`YB=9'fc#Mf_LUP;36&"O4Yb?R0/QH&!-MqOgu'd\K-em#EY>M
O80l\fb]g^'p':BOdRea=XT<A5EiW:P*m>S3>7Xf6'U%IPaPa?\P\M-8!$kVQ?c8iR:2;I;jFn-OdUK\
q+[%jFd?0?P'MJAfnGeR<L)6eR+Xoq\X/XC09]OoRG"R.H!cpV-(=X2R/*GF3KoRK9p/p\S=rfMH-`$A
c4p'ZS@R=D):0*9h47^1S[m":)<7<6iLN8/SXJT2q$3NQ!M-dgSb`G]=q.#_iLefrTK1,eH0_+!&es%3
T:,MKRKoRto:WYiUKS\3H9%UD6_'T8SGGCB=p(N<-_^AMU,j6hg0(0(6)%O7Uq0j,3_u8lB;PH#VYV[<
3\R;?H_jn-VE+CKH8DMR8Z%pMOJ,UC\0MdaWN'(tWZ%M/g7PC6Z)]p\OrC*qR^J4Q[B#b"WS4JTHEF2M
IB8mTX1G@5)R6C?j/s<PXZEAA]'ZTQa0/[YY.ESUHH33MnZR9EYIaP2\Jqb6s00)DXdZr.gB"RK$*IJC
X]m<YqVSF0)6FhAZMPlQ3t\h=3O%6aZPpTb>=G]A8[KDjZo\H!4"mel26:"TYkpqjqdm#OBsjF1Z+B>3
4'Sso;7-4KZb("X4--fh9=Pp8Z5Ya3].LPiGIX+iYa]pKRm4KRHa`gH\!s_7gQfAI4h2NF\be!%+9~>
/LZWDecode filter
<~J0e+?,chaaQ@qN]E(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:9&*SQQ_qWuQAR_,fd;DW
+kCFOVQY$PdUIEY<Q=DY^09u,k`sU!%)H.bp+,8Ds,!pgn.JuJK+WI'g$j9g/jcUe_IR_3>jc)RT[%5J
)B?Jh5C(4]n[[nudh?]P,uXI#7dVk@hXEJ:4o@Nq^>Eo(S6-j\Qbqm*\K#K74-+:;DRZ/2:IhnCme(r+
/oQfGhWt##?%1t'e'R'!^-;Q=\$bkdof]u@a4J-(]T;BqrOu)""TUc*<!`=`O8H$[64b[Pl+sSd*qR*b
$k!EQKVUaATVS83&O_`N/J#cs**!\A0e?H=`Gp9,(m:"D5oI[>FAWlF;"T#O7a^jJ*QF6f8J/uu*,?ci
Z##OJa0KfJ&'-MjT-6f^ZrntPnuR<h960s(+A%^^Gqd?;]VdC+ZFm"j8oktX0246MjZ-&!<1>\fA<A-/
ckHd65L;4arBX8e71hj`<!<Rqd8XZ^6./_,)b3fu`@4:)<&H1#;Y9nk8(:N*2b;CSSMO/BPoWXheMS'n
86-F!Bie;WN?(pIe\*P2f2[6=9NTaJ>?of\r?l()<X"Ut<7ZbUB2%h%-PFBqNNI"i(;,cJ`-1gSE8-]s
.;q`-mC="f<n5<1c1]uPG$T<Wc#cMNFjGBipJ'k(>8Q\uJDYRAjaUUgea[J6QsJ6p?2)%UKjU3"&W#G5
L*_XbfPFKFh)O7ENnbI(7=jO0FoRT[(CCOcP&c"\9'/&r?^jJ%Smdstfqrb2k?7e2Rclc55GI>06p[O1
=k6lNB[HI<U1X7^T:P3AI]oGZR\m\El["S^YNIsLPI"tL<i)p7Ra.V5mJBZ+[H<qeYGpsEQK,PkS)3t2
Dn<r>\`eCch5kQV(Ce7K]DfLO=ghTP?Vo;WA]i\2`='h/2=E,*nl6blbO`-N6-WJQY>NVG[5Uh-F^6SU
cgs9crRgb5cVN;;IAKfmG(#'Qh0$Eg<SmMb9o[]srZ?RO:]uaUkn61`Ue,n3YA`]PhOhLIHTqJAm!M#&
^%-N"-ai;g?XM"HrSL\ooR4KH\bQ,q2sL5=hS8XZ+04RSO%oA`LXuL`1\-&m.K.'&ZN$R:m"#]$#=)Ae
qHq_fJT,315q!6H@-f%i0G4dZ#U]i6KHkr-Se"*M!qlbE0npl;8-o!)%:QV(LCi/X_g#`$iTrX\:spCQ
."Mt=S2uIG"sZN,M%AS+8;\!?-c=SX&`N@HMNL4R`L+%H,"u$q&O%M[(oJ2q4Aq'`mOCWWK,5bKE/bI4
1<&It*28[)NDV/[`otYgUU5H.0jZKP8FII-%#'HKdQpD0N?Y.9=cnk67nFPR,D:#q&b9ZRaakBYjS4e"
129QV.7Ydt/=r&GOr6jM)_.[XVj&rs:!2.#/S+49Q#bk_8bldHV$+,i'*;!'a^H\GbeBEA`aHofBeq(e
ba3B;?d+pj.&J!8Rkj\ObXnigB"ZHWPAXmSBh(,DFN'bKC1L&\aZ8Kgj-WcRFO*OF4f23RS27lpbpiH=
kD\bqe,FejfrQElLl@Qt.YW]T'I+mB$)+^aLXA-p6RYckTp0:h;(=Rp.!6,qe67aWRQ!e%*?V&@,*^Kd
91Z$=SYWVrPZ&J>9.@7gU%H3b;EAknC$dmX[-jVcWb4r("\,8o[[C(ZGuCTC8>?n(O&G86;/3L9V"IKZ
<Jm8C.]m'WP]j30C;!.dKkI;`Nf2I,Dd08JBs&0lXk,9K,/e/RY<k'7Lrhn,"C68V($`KagAbMr/Ujl]
'#`FL(LO7#T<K(<`)tb?AS^CbZ'JS+fIJsmm-Tb<2BK_=4!/0QNLd?JRa0SZ7;?WZQEta$`EK<>D/BH]
Zh@kLgH/PG/R>Tb2MTu?94_`&rLUH`*nOY$06=8g_RMM`iS1E"F7)2p\sH1S>YB9_/k+4!f!b$QHbF-r
NRSPAX@7rGgO$"2mClZ)pKq.`?uKWM^%^sn?Q86Wn%J>+pX]<#lj8,Zec!6!k5sP"!J0_M%)EbO#2hTE
HuKi#_,sVBi@H4/Yf76k(l&^^gae,a4qGO*)[kY@fn$CKrl%uX&7XujN,Wq5`u&k#j1J6In]hoiR$Rs8
HpN^regnR][j'lAQ[hJ+Lp/m4.,`<(Pd7_n^mSOWiJaOrnt'".)2f/>bUJscTSUfpIkkP>c'n6!@EWl8
/8%'?S[/6-cC';7kD\_SZ"@su\YD/u%/664epPhIk;?o>':EpuM:%b.-tiHBUp?kUbrQ5#BY?:"1A7$P
RUAL=ND6C*2PnpWX&Nh^;6)QdYLV@Q<9eH6X@,OceU"_mCJA6@[@Y%^)WP*/NFT/8(:Mj7#?bfTM6HS9
aP&^CC$a*6Z*o,(g,grtD9[^<FhZY`qhoB1/[MVRhT=Rm=)2[_caS*nm+r])DsTX/]QV$XhR_HcmQK+5
p:gFS@Ltk^5mSUC0*L5X'L<!g)8^Vg"q\F#K5hqI`H\QoiB.d4nLbWqG^ganr,[M\Xte%CpBK]K>D_l&
6,gBI']g<n6#nS^`4<?!iS;>7EkZnFH(R%Ygo#aErZTU65=F]Ta-Cb<8&I@E:?MLJLi]/We[dD2lQ&of
oZhI'H.O5+*Ik87^3e6'In&aPA$^8PdFA%pA*s4r\HkCd_RPte&:?"?GM`)NGb9KS?/r`prrq8,2g=a4
&&S)0$0+.'M"'7c`;"fah`LRunfDScH-Q`RI&EA%hCl]jcR7s>s,-:eQd#:J0BkVaX7\Z'`qg3Clht1q
nK-$.GHY6<r/ZR'rk$p305Kjdhmi5a&)7"hPOH1,`qVapk'V*<mQAh&qL3YJE7"k4Hahr$gb_9P0?s7+
(ZH!UHggqTrVD"fj8FJJomT]_qEL&4rh$t(s"Em?YN5VbcMt*@!"[T[cgp%urr0+8rpU3lO5TK2,6<lA
n#u*YE"N"F#m2k1!Uq$1&0h1Z6N`E$s%l&an'(s]2Zdqk!jDb-cnbf#o)t-Q"4.2T0Ok.qB*FB4#;A@I
&5N@(G6-Y&&&A8Pn<"#2PmMDt$*]s,0T?D.V$_1@#k4SrYd"QiXU@t9$F$]AYe^X-^C2g<$ZO8tn;@_e
cO=dC$]s$NYcnYRq@A\P%T)9uYj`0bj:BW5%Zp>o0_#Wlr=6X=&5`<9nF$l!jUcD4%l!_gYj2n+%1s0[
&FgtW+Suaj0+bB/'/:XCOTQ0b#nh5:&2?$V&N^MRr=P/H'N"lDd8:Q3%2<e\'CfcLECUcVD\V_[&+NX7
OZ=3i?P:b1(3(W:d;9`jJJ=5V(QjajnQ-F/o,2Oj&lG27Z(W%TV\HD:'+qDb0p*A/@hmAZ)mOu*@.k+.
cjrD6%l)NRdFTD$diL7"*O43;Ojb=Jk8uGE*YJ,eOo$.2o,U^$+;*KPnbF7^&KoKg+`ZlmZ3MKB+!)%&
+n?!_&g8I)"!03(,8)FM&hbC`1F(<O*KiK0;ElF)6QqTj,>o$sOsM>n>olmR-1Ygr1$'a&;^%<*,'$=%
P$o_9*?MM5,B@]KZ?%E,B.1'&-rP[H;F)^O%M(=n%cHq.d]G"iW@N"u.h]6?o!L!rX"8;1.l,3so$&\J
_^uM5/TSl`EjI>Q]e2(j/[EPPd_RQ!mk5=<0!aFfo)C<4k:dPO/MajjEq:m2fe7Bl0='mu'$W-E(G1gG
0U!#!dj$SFoeM^M1=Ia.1;u"i*AFet1m:!T;_^'!)(ec11\4$d@-eC(m5AAB2R@0WP@HLLAN#`h2fj1%
1Mo$kKfB`a2\UHr1Li@"P;r/l2tMATo7]3rUH12X2\U*ie#PKMM)l<<3Rarf'6Q64^H&X@4-R-7F1XK^
`B?#b3`Cero8PpI_`b?43tm`9F59$D_)YH]4HnG_'=0o%aZB%:4u;dqZjf4*q*>\k4O`mfZdh<>I6ePJ
3<87QJE@>LlU(5"6QkV\F>6.i2+*Ti6hE0&'LbAg:ILF17$LP:ZsQ2-@LdKS7!(dc<*)Q]BgpNS7[.OT
e3uj6IL``+82PT^<'Nm[JOU?36r]"7FB_-iB1Xq&8ec\FZuJ^f01o2j8sE7HFIu*GYt&oH8JHqQ[)5I7
dn(7782SXdeAk!W[8"#:9iTM81tP:Jb>$LR:)'g*<2W(@j:4H>:j!.=FU:lE#>gZp;)J_Y[2Dj7,uM%Y
;,nu@'bO;c02Y^e;DfUrFYcu3*Dpr@;"ZhHofl?>.oeG];jC!TF]h^%,?8kn<OEoKPtt;CAQ72I<E4<D
Psn_2?WM;r=I!;r'lR(eLKB`m=4N@4[<#9sQVl;&=Of31'fB&mVc'oM>1Hn\2/?99*"Du)>a<K;i8Is!
b?[!I>h.S7Fl-I>ed^0U?<,Zb2;_])iEm>I>uf]f[HV&kgL!tb?5<3@[I[bV"(2lV?a^\UebrmA(LVC]
@!3>q(*?sC.:T^p@("Nn[Pq_44(;5FA6(p)ek'@P%qQM:AG.B^G$eXC;dn6O?hQ3c[Nf9?Bk8&5@odS[
2HaY#HXX_@%CV3)JCk=(fk@gPBm,PO2O.u7SS>O)Bi^.*p8_q9gM6GWC=]k0f"5_+[;$J>C_i:O2OS@S
d;/HHCc9IQG1ULF`GINDD>)Fq[``Q3fkr^oDcY>(G+37?o5<.RDcYt=QN(mS_/ORoDYEmBQQ'`6lZ+od
C:=pu(<pn9[;pH(EjjeEQMYWf%s/UJCj-&(<ul836ZeWREq`@K(KYZ:?k%<n%=luPQYCX$eS02hG2Utq
f5M1CFa'1#G;k"ppORN)Fa"XcGh7.`pQKm3Km6[UGW1b2pT8acCO!=dH1uZ4GI)YJ\U,-hH$@)M=/gK^
I=/NQI@#M5Q]$;/H$VEiICJNjpZm8eo6to8Is6s#2t;8SR=Ei'J+q?<=93ac%tJlAJ!\K,f;j<:"+b\=
Hak)HfHGk`Vh0,`JX?t"pZ7$/aaYG[%04k1i6i&7c4)a7KV6U!pf3#m;2&+TKfDe]GZTW%;2"^YKt'd2
G^G1t?\UOkLH'.,\8-kEH&1*GLA7*i\6Xh+?\oVJMO9ZcpjJ"O;i-lOLmW1>(q#/ZYD>0-MV+\^fWg8-
^P>q9L\TJW=J_"Eac&3=N-MmnR)+T'ViCK-NB$<a)"EC6oo<.bMV.re389O>gQ:'QNd1_e(t"7d_3(,>
M7B%9=YGK^/W7,IPBa^'f[#bl4d-a@Kip@!R89&M7uCG8PF44kfe&I,A!L1qQ5NbiffPLfAWlk'Q?d>5
\ODiFJWq",Q+;+*R;nJ%OdEUCR$h*Ffoqcu?'b;GRJCcg3L,ghTpiNgR<`/+=fn%D\XAk`Q5RN.\XT&G
cj\U\S[mMaJB//Pj.2V$S_<8!\a?"Lo:?imS[nQf\ac6e"/!-sT:-(Yq>Hqs%A9.#TR$d5=qdR?*MJo"
U3Z4%)<mhu/Y\[MU09:Hq<arg.AT!`Tc,_^g..tX25C!qUfp]kqAZ9"=/GabTpe]O)BYiF":S\\%%tZM
\p:3bJ.,i-W&fj7g4?2+LSsuuW&fX1qN7c2LT&pjW'JD%RZ456S#KSpWLBleqKo8hXfD68X880`3hraE
M6/h(WZ&jS]!&-&V5q2TXnnBdR_c0GVl[JmWuAmV>0X+Zor/l&XucB\>*#T9!O')JW`oe4gC:BurNTQQ
Z+?4*qZEph/$?K?ZJ+';qT#aC&[RrEY^5-34%65t'<(dOXa9B@)]>]fMl<'%$p_f@5fK<6B:^&Q%%D+B
gNg5rMmo1.[p+El>C3jVF1Ai+[_$IdRsV^cRCCnT\f6@6>BRIqYIXP.\m(Z8S"$rMDn154]6f+@qn9XH
bIH<I]0!..S'SZ-M7`YG^&+A0)r8)PJ%jZm^Ur%.>N*5b!P\I,]fW^:HgeaSq7h9g^3fmrHeZ*#`P+Ef
^t[PY)l^Rl-+r"@_:uC,)f`eXEPqjr`#M@eS41B/8&[Sl`LK<6r)(C;:W6RQ`B7ePS7BSZ8&m_r`8"S:
gjd=K?,c_c`S>+Gr.2l#KueXT$ljQ7]V3ANQ,oJ``Z0uWI$)NuT?7#1akX)=>dMVd^W:f)b$9A;I!a(b
^WYEWaukm2I$r*hiQN9obZq!gSEn,+_oZ0:a.1i(h"T-"o>Woi`uMY:>g^q=rPi+:ci"=!4Vc9@,KAOM
d(LOG*=:-,/'pF2aaB#q*B2Ce43F*YceUt94\*RV;pcTde6O$@SHm[B\(1C`dp/s&SS?Te0@da5f0(M4
*6HeQ#M:%kf)8n,I;@CsNRtk+f3KiYI:q6HJ(Zu;f_mPWSTiN\UY>[GfY+?=S[mG0J_-I%d=&X]4eK\[
!W~>
/LZWDecode filter
<~J/ZZd,?tueBnSb0E(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:9&*SQC8SkHQAR]"fd;DW
+kCFOVQY$PdUIEY<Q=DY^09u,k`sU!%)H.bp+,8Ds,!pgn.JuJK+WI'g$j9g/jcUe_IR_3>jc)RT[%5J
)B?Jh5C(4]n[[nudh?]P)GM0L7dSO7hXEJ:4o@Nq^>Eo(S6dQVL!8Y!38Eoa=/F1'oCuU.f5H`+mWN#$
T,.a1jllJ$rf8F6_;jg.4C5dH\)6rJF?`!.BCEk/4tfQdqEFAST`$tA6`C,Pn+4d!4jWa;kJ>K_'*(48
'7c+@W8\`#UeQ4rf:oM7OUsp\UJDH>Lr<.#78Ym7(;oJ9@$eiPRXlBt0t^X)a3aDc*j3m/JKVo$[#62"
;A=Bo8J3k6-:Q?^=",U3KV'AZnmKs)/dl\A0MD!G_(_Pr4OGt/X+]"X9rTu,2barZdlG^p9Z]Cj;lodX
:@g<^[ni4co/4lNV#`R&F7ec^d?FeN6IGE_+\GXS'cg#s1d'_j;&&+X:X`;Q6Vbt6[8BRsLd9*<N:hm7
=]Qb1CKK)pSS_W_<Q/f]fCbtI=BDpGIpH0ah18j6p#Um4=Z1,R@TYNgV.3ZZ<M=0]<^jQ*>P;?N=k]0Q
_/7uZ'sVH-QHd$`>^'2MG?q[hJTtIE%BjVR[uHGr??`gO@,JH=!H-^Q*UA,SpauZ'?Ig.1@G5lnWJY/p
c80KM<o,9`@X.l8NFB@5095+ZSl(7')-0h*A[t!3R,kfL9pXh,h4^BL)%Lk\B=T(7T]TBPMk4U-^1!Yp
H+$YAkF-"XVIl6>WMO?U7^#mPK.tENlamYCY)M*.a00=6*l#(!>6`ciD#5"(ZL(kFgUh@8QM%n,RnhSK
DEIRp\F(=PbJS9=0&+/0gi!52mlVC$`U=dj%D$M+V\@'hSEA/AEdPP[YjpNZf?eTp(F@T"I",#AEIEU"
de0*u,M;IU#g+l\IGQF0GCAq4hY:*#J`HM(-]-pZhHbospg*'Rk4h+6TB1CUVlShSIZKWWqgN1mm<jBO
S*Bk-kFq8=^CS0=G^jAXom7dYWV_,cQf\)A?Us\eT#:)J&-;Mh8-o7R4:-LUh>Y-5(AV=,b^cmc!C59B
!o$Yd%$*u`L,_*si9VM;NK+H6W&"^Q1aIbdH4Rk>_$OOD+bOa>'gjrp$fP>2Ks9PU6?m+s@>$Ro:lZ>Z
8:qGHN'iFUrZX_>Pn9XB5_h'<'1>rJ#i`K`M30D8_mk[?ilk;UYu2?+BV-"a'Ng8JQ7#,2TaE#<>`*Ni
2b&VE)$:FZNtLA6a-]F?UYL9Z%=UH2.17:DjF*,Q*^`HmocRcYA!!uc8'*b++!cN+K<bPO83&IJUo]E:
OtoSFq)Kk!I#*ojL.9:A4"=XnVj4Qf8kV`/-m_9AQI:(\a14D\AL*_119sg$\IU@S>f`/Y&n+GdR4.2s
S!iiaB2!$'04nJ?C_Ki\"sC\u!si9C;hf9e)9j47r8F/eIW`qMb<%'Sl(.F[Dbh8&46Ja!SPt\pcY<2;
BCtP];p'I5d).mm%/?MPH?)fm"ZWG+r12=YI8;m57ApA"Ss2^"c^Hj\W7;<Oo<*tt=slWc%25KN2N(Bm
(J3jC&tUq7N7-E'9BhuqVUN,.dooI?ktO181j4T%l=EfV"ZiRRnpf*1IM`.]@B)VBE!?*?3@^!GW^2B>
<Q_LGWo[6\2/]DE.^N7C%:6(m6??/<]2blUDQHj$ZIZ"m=t>#.Xd+LFf*^8>CIN9HeZud<l+^J>'o&tO
#/\penQDm2J$9\4^fO/V?0kj4ZBeh$=.:dJCH\)k2=f*qq`S4:/VLHqm]p#c(ME)gWjOajd952dC+YF+
Y]eI7fh5+VCk,i]iI^#n.u5"E7Du`8IcB/+O`@O@bISK^kM/.oF7*nb\Q;,_h7K)!me+W22h(1"S"k4G
`T4ZJ:@d5AYB=bHn%<jNp"`9]H7suq^DG2[?X)9-YI3'!(]O&6l^`ImQ3+a$MY:C]pNs+RiPG:Al/=`R
IW1#E^6eQq@6<M&E%W-GiG^CQd(>-S-7Qn.UCuR&=c0J%0?,u`(#o^8MK'sna&pe1@Z5SiYs(ClfaAe\
>[*;0mQnr4!up9ZGDre=43;`b,%F<EOg6<2a#RcY@k=aH14D+()/h%cm&ucI(/`;clS<&\S!NYp=Nu-7
3TXMXRWAs1cC):+B,oHkZW;4mq;4==XUUtUhBWJ4.mrNk%MlEB>g[jj8*M$9V0#`ede[0;BT4I=[$I94
)IGtuSOK>32OMr3LJR1u8ZFX[Xk"Cd<GGfBVY*-]dX')3C>Bo5[6Bo,qY+<2SP-!UVT@D9Rpt]3O0CN[
YL\#8A83]GW:g_3gDad<C$ht.G$_H*)g>7urPu:QkZnR@]63PDgSApdm0fDuGOE[K(AF-gh:S3>DlrQC
nL!e`gXd,-9Y\EQ^B<C5c[##^qn[Kjq;N@^K^h5*]!r7[inP3,EI;953.Dt)r+C:oN_@<85:GO(MhUXQ
2p1nc+6?a_PB'D=anVbhigeJ_D[nYJ3TiE]h$8l0mW$X!G<4a^'9Ve0O2j8A%ab;n/G3>MUcQ5GdN)8e
"eMq6GK4"Th1r6-hQbT-(LPS'Dm]2_bLO4;DsI:"[!$>tgA@4HlFlAjp!2OP4(ia&3^^^WrqG<^T2b9N
"3($h\)D\+L[Df+`-8BMiO\ben\'RtpYOZeI,B2?]t;\f:I!t=O.#L/DoMQk"mS2$Wq$(pdeV3bj?8Qu
oD[LVHLD7W6F^#&Tj-K':PJ:)YZLX-#N>SfL%%9U`q\FQk5AY\o0/Meq&_9VI8?R05+gC&59K@n5G@Xs
?f:fg8+1m[^$pL>f)'rppO5ogq`h:9rr8VYJ%qBN0C&CPi;_,Xs0)"nn'(hcf)@?,!3bVack-/Z`rWC]
rGU'Y:^I)?'`=%Br/`Q6YJ1&K-NS/m"7S)L:]1!<W!\'W"`RQNcs$Zm@g14l"qYDNOD+nQFU'U)"]01C
:gjQi>m=,N#]OPaE.8&\H4$m5#S:bWE0CLQN<_/,#k4/eYa#JjV[:_Z"n8PuY^Hl*[1%#N%$6S[:r<RC
YmV,d%?SmE&=EkZK+2e]#4RZ]n@8u^\IO_?%++MP0_Gf-q$g0V&+HD,0\Zg$lO0r[#nXBLE8h4e+UO4%
&jWH(EA7XE-45kc'2O;qOJ*<7./6X_'@B;VOWbA<V\IN='Cf3<0jbWW,85&I'eqKJEG608E>.kN(NE4b
Z$d@l;%iD;'N'PiEG6+AEt\"U(Qgotd8q/>3uUt]):=if0o$K@Yo+.!)R4c0Ytl"[[2Mnb(t![Md:F8:
Tc7uY)ps?V&^_OPM]$NF&s:uFn_kOOf,To])).a%@&+,pV][]o+ArFeOYItV&Kl*-+]8amOq/`l'-XY%
+L3F?dMF%S#pV2E,#TR,1+OPh%jCL2,P"JP;GSM-3@&W",a(58E]5;m=XFbA-B^M<&oT'oAL%mm,17\_
dV1!_=X%m;-ZXngP(P-f74'd<.?^#HdS2%9M^brm.M>T.;N3%ZIj\Wq$6Z&M!1teT_(7@S$1c=ld_@=g
eLZls/5k(O1=Ii'aXa[W/RY8'ZHk&,h(3U8/[EnXEoAZlbqASO0N-RW1A*<l#:n6g0G;2VZPP=%'eo4M
1(r7qdfV@H#qs`g0=)6Gdebg6+#)/&1_T=0o1_$(h_]C2$8WtaZVN.d8MQD<1G`Gso'J=k'/gM(1"1>*
1N>(3FYtsD2tM__1D_pt.lMHq2H,Si@%7ORSN:/H3`E(?F0RciYr_K[4#<Wme"o.T\ND[C4*/5"e$V6#
cTG.X4#=o=F3Qf<d6+bc5#^,ue(m0naZ]7C5BGRC1V5k-nNYLm4k'KpPRg!bog(D26'MO<1`\iG+[-S*
6?D6Te+l1l00p:$6Za&.Zn"@_*C/+A6hE*!FA"p,;aL%96bo2u@$V+lRmn*$$']!jP[d0^Daj_r7au'@
1hfIeF\!3l8(</]oP6s=Gt1hr85t(1<1QL#Th*\"82R;;FGEDoG=lt499bo;[')tVZUm!G9GG*4eA"W*
PtY/j9!kuqo\3*ia[[&59bc\]1l4tLmn>S(9iT;3e>5pipJ#c,:%\`d'a7AiSPGE;:XotP2'#Nd),,/h
;,hsA'atC6OpP,G;jB:?Ps&(=5u[GF<#%JoofZ;4;,pUf<7Nj*[80g<=]EpU<HVeO<C^()CK8o/<qU<1
[<5PNEE8?[=;?*^F_OrXD-7U9=]KfKooE6uI9EtQ=l>KHeQl=CI9RG9>Eu6kQ)@fNP?[^d=1+#m's1]j
d9Ulq#iLhNe_a[UO'Z4V>4q,d(#<4SmKjWi?1m_pQ1JA5pKt>k?.J=M2@3c7"(%8Q@5\j,<U!ob)e!n3
?WI2:p%;e&"^[jc@o`tHFs1>g*FT^4@+IDMQ6BfT/S#VQAQCa!<W?Pe=^T`KA@>cRp0hGH2eFs^Ap+Po
p*4,AI:Lh-A9N`=eqn&UCLoDTBbm1OG*c\s:'gO[C::*Pp((oH4)9!%CK:gY(:S(FVeal$CUV&op8Mme
d9u[uCmNUgG/\:kiGCL!D3jL(<kiIZbAA$XCR4.![`rZ4hegrNDYE=62XPK"nSqUoDH@-aQN;$6#B*Z=
E46!if->;0)/j^NC=b1W[jc-;6ZL^FEYh#^p@E>!8TbgKFS;dAi/.f5L^:EOFuO,Y5`Q,:B6H4HG.1t)
(M@s$@<U7HGZSa*(Pd7eIs2]OGaE,hGAh^bT6AgtGF,4QGE[@IUN\Y@HFJ<K2naMRX*cjeG5'+(@#95s
SU:*^I.sakf9(C2fm/prGuqh2f>i?lj*hg/I<VB5\++^P[=<DnJ%+NhpT&g(%t(jmIWs7d\/0Q0h1%Bh
I+SgXpZmF?V0htdIWuf_(bpNlbCb#XJ61k=^l<P>F9pM4Kbn6QQXtkQ=a2o'Kg:KLG[lK\DhY]:L0/_T
pN_PHBn\O#LH'.+(iP2>=,5^lL)>u,R%JU_Fbb3sLmXNbG_(\'Obm2>LtIWB33A+KPD_DqG$);3(oN::
c\\$[Mtkn]=ETU*_i7d?NS*EF37EYMmu&$PLcDSsf_:<Vs,7f<N-P5X=J:ZJo8:'dL"R!!\H@_6`!F/5
#[&\a5_kO`23PL)P.<T:\Mo`J6'F;^P5.J/=\G"T3L#prQ!%%LGtX=R<KpWlPIWE4fh[n/;3j4TQW[a_
fise'EL1s!Qhb3[=]q,;NKe]WR/)H(fmfDMTpV79Q8tA%R;86oYEkTCRX)0+)*OBj^RCS(PaTL\fsR-V
Vjc:cSG?6V3Qmf#fp(EGStLXtg$AtEJd<KP#W_4C\c)k;o:L=4T)&he3X_Ptm@S\:T_\8QRJi`R,GA9+
TUGtT3WGiM(SWrJU:MM?qBquj/YLfPT)(OBqAZ)R5GD=WUj=J]g(U8c3M`*&TGgt1RQ[N/9;brPV)iCd
H:+N4H(c-\VKuUBRXqEKLSbuJVqQ3k3cUkiQ_QU:TpfDe>&C<$Z)%5qW;;LS)PO4cVki%IT>5m\i.;3l
JZS^oU:SsY)V;)PhlXH^XW#`lRa8)smB1ccT"=NrqUr")o<(.UY+!hB>4JcLpTGJ%YPS(!>2c`5"0T6J
Y8[)>]'6?o0sA15Z9(">]-XSK0<i%bZWg#,)U5Vc.C>QZ[9HA1q=V'u$+:c`[@9[p)dfk>A$C;IZ^Z<L
]2,WbHaOf*[p*XORt8$f*Osj8\9h;f)fN2iF0^-S[6'#Nq\-P&-3r5h#MZ`o)nil\]=Zh<]R.W1)o'$I
dCjnS]fXEN\b!L=ftL\J]j&UkS)M"!lb=C`^O+;A)st8-!PfZQ^,uY8\a@1["i5Qu]f[=Mr"$P)$blN\
]=\Nf4<qS0kJE`J^"b]bg`=3N-c);D`&o?a]IUl=qnnps_Yb@l4@d<dou:6D`*>OGS)ahP(VH8[#MSXY
gi^<B\];;Y]KCtcS;jXuJ]Ks;aIJO9gipj;ID"?r]mQ<kI&"g]J'&abb?V$g>ck\EM92:,a;hV24Is[.
aj"(qc((]QSC,R9fuuR(c+L7)r.3-UVp9Z=cFeSLSGgWZ!QnZ*be32eSHm?niQ^0dcFjb3>nb?9(XDsu
b.RW!*;.Za1X#^Jd[^31]T'oN'?'h5e/W\^gZ?=X/_+,kUE*RW*#6sD8_*`=eQdgX?!"e1bLYK`b+3Oe
?!5\U?.`FkfDUQXI<F3^ce$rhf0,JP]h@"+;qX<bffc%_r0,X$X4dH4fj.J+4^HWe]@oE+ftFlIIC7fM
VqHLE^tmJpI7)fG]A"@`h0ike4l>,0_7i(Oh`Z8>4aGqus5.+Ai*E><?2)isn_eiqhVH*.ILk9V!T<qd
h1>\~>
/LZWDecode filter
<~J.77;+g`!f22"6QE(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:9&*T=<J=O'nC]Y4)-!tC
j0pL4_UEClg8i]7[@/UcSD*FuMtPBeG-tOjpO$4e"+.W<03AXS#8Ma.AhhtD9oBI7VVU\YgjQq-VU<^F
pG&&ZCTc:Tp)>E/_d0Cu_D_:>f(X0kgMJlR4c[R4^#O#j]=o@?L!Sq%qE1njs)HTBoXc'6:HQ2(hfa78
\5.$qhs:&b^->\ce`Z(>48f[;,FS&[H@C:GDqj@D5>R4$rjm"=irHXYj6$KY%[1Ya3D4/9i]]pj-OE*L
/26*Nd#9%V6a5W"ou%Ff7drfb]MB500g%*)`3FtDrC0W=1:G/`r*:8^;2fi>_pL:u+\4@6@2haTCj?r>
Z:%V"`Gp9Z-T.T^XXf,lS?XY<ZG`js9@DV50hX;*]e`;;/B9S@1M"fbc-o@i/l"3]k:t9R<80-#Z[D:'
:D3m.1/%5grBS^#Pm9FuZs=&(cI@7_5YX)+,>(aR2$ln#ZqW2>;mX.h:K3S/),<nK/J&d'iHSj6<V:KF
(tJ;=CKjh^]j"[k(%#X7f/;B:>ZR.*F^itr/Wj@Aeg5ZP=k6TJ?!$`:NG$tr9rVH&<kYhW=dIm!C"LpI
K5FXj4i)0oG4jBog\5R4A_f:nO*K=O-0\Ogf#@N(hKF&3Ip?("YCK]*FqbbO@<NNB@G#HBLuJ,`+,48"
Q8+2)fPW3rj#EnrOCXb+5E0,t7ST$*3=]8Uj`p2dNT6FUB9_O]VH'*u3PIqJA(e#/S7Xd)M4!LPrd1DS
>$coPjS?6DPN`tYFd-U/^9OU$H3Sl%iB_-^(@7M+c*H\?%ahQJHUc2eD;0NcZ>I4NkIPM7QKu"t)ii1V
n/K*j^$kjm$bpVl[e7@Q41>O8nJf4F_I=JI"itRD:F3ht]3d53E89%m`c@UL&'XWm`pqLIr<FR_oirRj
f(Ap54kTA>O*0&jJRDRqp\QUli-7EZJ)L(85EE0rIW(Y6q0j-FjSD&9M;W[Y^QIjZ?I+DdHG8"Kk59[`
Z0?V,2p^f8hacGeHbXcuo):jdl2(<aVq:kDIjasahg>0H&,kb-fF%=Z_u>1*)?dj"d0!`L!IrHO#sN#N
r88h3K!0a_!jG]5+S6b/&<7>h#X8T$1`_8=Q/b0o9a`+D08$Kl(;dRi$__YkK[@j^6\odii>aS+&>gO:
W-8g4,W:Bs![0puCC]=i8r>=n+@91Y%H1P]MXbF179H/p,&CM>OX;PF8=LA=KOg#RSgD;lNt\8s;iPe2
&Okp:)PMh+N):'H8#Yr!iG^1K!3/?+.1?QZ7"gY",!s@b#9m\pLQV-s7EDG7,,@>_P-RtUaN6.\jIDj*
EY_MCR5$(bFIeTcVG#(B*?ujUXHQP:=\=NX/L>e1PEMA.bIJcFA]29J1?M\4)(R;7PfT&0%SY)LPq&Wc
`ftMTB$,Cu1$6-ERkhitb;l1J-3W4m;O25qftTA>5UQ]MQkG!Y:HN32m@HS7F\^'=3p1naS[7I&:MK2\
-d;7UF2E=N3X%\0]^ha0Wd%?#nNQ,A%\Y\aH;PRs6E$.XU=97#:\kAe.'4PaoBM%Ul8(qE4Skj1VM.hR
9h"74,,/J2Q.$(E5q.4%VDPT9:jR7YkJ]HVo^82Ig,Djn"T>%$_OjebND-9&:oI?RVU@L7;<kPeWH@>:
!^KC[lKBOp[<f+/._f(9-"3k)U9Rb1cWb1%Brq!-\lMG\?#)<6X>R`%<a,6)CW11q(#$?'.goU`4`RY`
-F[&Kq-`NBN3-+:[+J"PA*aYaZF27!=;p@3/>\lC<f5('$V+RjrM$\WqT7I'>@m-^RC1U`cJ(utAhBjW
Ze!F@f^!$Z_$D6p<sIT7+@C/:--!Gr.cT6ARrYZccagM/jkQ>bFY:)G\9Cj<>oSQ@DWT]bf66[ibH5jS
/]YH3K(WE=cZu\dhR[p2n)$3jEGnS"]D'J8hb3Qd07EK*p[8+>N!k.hAbs,#*r=dKms=H2%Dd9:#[m!2
KPqV/_O*schX!1On)`.(+FF]O!'uH]-7Qo9V\<Nu=,Co\-cMIn(ukHbMfG%@`d#*1j,?uu0s3FTf]sR<
S:?W?^,3ltpEX9CLQaK"5fn9n.HE%LO`I<par)-=AZW/!EkYo%R):E99T>:Bk$lHcLGNM3fpd%(E6EO=
1?U4?R<$kl`SbtNkM5t?ZfZeag%R[D4U%Lc(`h!B-UMJe(SC>CM9rh$7;4n6UGQkRdb8>(kcH/,FT.ZV
RWhBh>n*`T-D](Y"&8&d4/VX6XjpU9=_\BFW\prRe_6p*BMEKA24hG33ko%e*C[&Q*jF;.)cl7;H)\3c
bh<tB9PY2##;bQ`gDaL:mB+(2G6ZaT4,7V>4jCLFk3(LrCNXLMgU]=Ul/!ACFmi&\]XNppceIc'D>iA&
GK0C74)]Xg4ib=I%eJL\s+9]W&](tq$fO2uJFNO%^\?n'ik'PrES`(_\/uLG>XOJ=c0NE\-N=05BFTO,
=3LDP0]kL,R<'EPbINrrk+(V$o=eYY3U\oh]]5W*hHeNS?U3iqgS"2QM9n:B6KameW-"VVe%2GEkl"S[
FcLt$])Q1'4aXGVDSOf7G?a9Z8#c.;\^UE,Aa@%EX7oBNcF^Q0m_,g9p9*0'3k&eirVNdLE%hIn7u?b"
+2\,?*TF_eN:J#cb'7hVja:^$nc!%@q;2qGr0NW=5&8I?+$J^K#Gpr3CX[S/:ZoDeSFO=3e9_-pl[3'?
oUa7\H7pr=I@n%BIeVRo0/)WS=2aYns5/2GPOcE5`q4`/k5>fk"b<f0q]BJZIBY6r^=V'8s*+!]s2Fdu
2sL6iA++m(dJCTgh#&8+q#9a8q>W\Jr#`!-s$-)RYO_\]ir*fbr3,Jfci3ks%fNU6!3dICYRp\n!<,di
!O)e/E$58N[f^Rg!K\`3n+ckN6NV35"4.>W&.\k>8HKGt"#&U90DtrK'a(Zt"OJk+:[&(&-j!d)!cWPm
OEptiKa5tO#Om3KE.nS%NsIG!$#kG%OIZ\3M$^DC#V_#>d#eZsJI1gk$P9EGYa#UC\I;<P$8Adpd(p)d
OUCTQ%8aeIYgEesW=<gi%.K_rOPpPN`sf3F$;ehRd('Q=nII=q%?UGu&>]q7h[kn0&+J`knJ)RS&J3<u
&!8@Pd4Yq`*t3,C'6'*95U6DN5mPe-'G3hLO[Ts=;\_#S'_,HDYuMLC9bhYL'[]np;/$eC@2+i6(NF4+
EF0HCD\pfD(GU7Rd=iGMD$TTf((m#POd-aqNu;q7(bqj*&Ut]2QQ"7a)R61U;6_)QIiM=.(ic;gnZs3T
T,Ni3)j/MfOe!M4],e/k*V&54&X+0][3$"0(-iuD+<gk""X%gh+;+u&ndcj`!?a-2+d*]dZ2Z!<%j9:,
,#Tp8Os_BX'-gC0,'#7ZdM4"4'dHU8+>QA21,C2]:E^?R+qds$1/f@%=!?!N+VJ--;F)G2B-`XG-Sf*S
Z>1V(9.,lY-LsAL13Y%MM^Qqm.2$\KP(tI6@jBEo.$?%\o!']#[4?:./$ci=o"ck4`@Q&O/@*MOo$K$E
eLbgp/[F1ao&22VjXtT<0!_hbJ/A<[)_Viq0/E8TP4^Lb!ADmk02i*0;[kFe#r&[b0=)<HP6E[>'/B(P
0bYK]ZS+**(GZXQ0loE3dgn5j6SFW$1,Bq(o04qX;_SkB1%S$qF#Plg0f3qh2Np-YZV`XpB/3CS2j6fe
1LW-sG;Sno2Uc"l'5KOjLH0F<23U`nF+lM.@l^l62Nsmn?krcN'EM.?4-R3:1VZ#X[l^q(4#=i<PJ'+8
d6,mo4]B6]o=$m3bs!r84EKmOe(HktnN7KJ5*P@uZfOCBf0,?%4nJb=;qjPnh*5uX5]b+71_DkAs$3q/
4gZ4n'FR/>lToV76*pSUPT`Bc1I@<f6I\4eZf=A.rBCuf4>]buPVGU+7miMH5?(KFoL2&FD*/pQ8$m\7
oR$Z^'1`go8@4@IoT;[$LIj=j8[O[P<1QW<V+FXa9!k'['Wk"bNCstn9=1ZkeA4eB_+RbH9Q[C1[*;<%
eP1/=9si_No\iP%j\Bp^::0C`5S$X5%nF#!!>P-$eFcVF!Ddh?:NZn=[1,p>#uFV:;0<7BPlFVR%oQCB
;"Yu/FXKuX#?#[t;&(`[eLa^B,?*,]:c1=4Pp96c)cJU-<-9'U'fAms9iSN';tX!g'l?rN7om#j<V:?2
<HV4TIo3V%<0_#reH&a:M,lKB<OE-823V-b?!3Gh;:V.>os%^Y[9Ida>ID.Kotalj`E[Q->d_g]p!I&&
eQm=N?+&;be_sglj^*)o?FB0,p$lBHoj;k;?a]i>p&SPZ"^lK[@($MPp(:^k'k)8'@C>.r[NT*<-";$H
@^[jtp+^&82.LeiA%"O1p-E4I7:^R5A@>3Cp/,BZ<Fp>VA[YlUp0hPkAS-+"B!uPgp2O_'F^kCX@K6^I
TF5E+IqU`oBGQA:QA9+]O(_RNBss.<<deZ4R:s%*C,V8ieu*4_V/#_/CGqSr[]aCgPA=4$C)4X$<kiHO
_eXFbD-"nuet6]cT4g.!D76ojp?ulWUMRC'D-$%BQK;egoka@!D3i4](AD]iWGsj#CmL3%pD%\6]kga^
Dq>M?2[OJJ1N'ZTEOMifpH`m[7<E`FFLOtdpJH&l<HWLgFgkY!pL/5(ATi93G.2=3pMkC9Fa&%TGIN!E
pORQJKm7fuGdiZWpQ9_[Q$ISAH+0>ipL56f~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/198794680.0 /Pattern get_res
[.9375 0 0 -.9375 72 106.688 ]make_pattern set_pattern
f
2 vmreclaim
false sop
0 0 0 0 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1 <1C60D8A8C9B6FF86FB9D7FD04C28B02E30AC495A2841889E8D4CC78F40B
4CFB09BF9FDDF046DC6185F95DF62251FCE236D02E728271B8A9A334B40349D5
9AA7BFC6401778F30687C0D23E5E0AD6259610D5CEE5F6DE551E68A34F3DF890
5628AF3D84545AD23658DA3D8A54EA7591701A35D2B230B7DE70F45F6F526C43
D5545DE82769107AF391DB58FA1F0DFD678609F09CDDB3C5182C42EA783B67A1
B9DB26DE55B630566429B8D4E88B27196167E7C3ADAD7E7B00566E5C0CB3E60D
BC2FF1D00CBB9E2E8036CFAA073BAFBC113E1554946DB28A1EFA92B7A94F2BE2
FA6CE36403F5EEA57ED88A837F1DE9032BA101828CA35> |-
/g2 <1C60D8A8C9B7A73DB63F1FDA6600A663079DD5EAD0FDA181C4868FC701B
675ABF0C4F564F5BB143985C38B980590C4D25FE86817797B2B0333972DE2DCE
F3F76BA413F13E730554D0BF243AE4D2C1F765A9D242959DFC2137A50FD3D> |-
/g3 <1C60D8A8C9B7EF3224E4F3B8A15DF6A93A4D47A6619BF4961B721774779
AC89965E6D669F44F41E7556FE857896307876BC9161808A88AAC70F74B05B3A
C3A137EFDA3A0AFB15CFC7134B5D3541716E6CFB266DFBED5F9C150903A3DEBC
40B7F5CD277C2AFC977CF67865CEB0F9257951ECCFDA898C6D4833CFE176E2D0
0A79888DC7FE3809F414165C1B074ADC4F78CB1825D0641D221EAFB3EE680699
F3B907EAD582D0F142560C9818AFC2FD66D8C9D72708B25F4A6E34A715878F24
666404FC31CDCCD60713A3513CBE987D1> |-
/g4 <1C60D8A8C9B81F2C3A8AC3EFF2CD5B6CFBF08BF1DC487B0368F1D3703A2
7DDEAB4B08CFFFD603A8F5FA8E691953097962DB0B62997B96402FF31D8FA334
22B96C07A214BCE39EE2F0AB72A3F1D8E91F3C673CC2192C0CD403ABF8DF64A5
BD302F680BD67CD64F5F094BC4B6D0A7B8D2E6A264012837BA74CA959642834F
FD6E6632014098FEADB1E4412C0F349F64FE7C42A6D672D9344D8A9382E960AC
51405B23010A876> |-
/g5 <1C60D8A8C9B88C0872290F0883B9567556744AB94A6FEE54D838BEF83E4
E5612FB9E> |-
/g6 <1C60D8A8C9B6079F6CD2203438062D6697C1CEBA639C131347F08D474E7
F8AF1ED10F927BAF948091839CA815CA68DA40B3DD6FBDF6D2CEFFC99DAB99D3
19CBBE4EC055D50BA1F8B7D303F630491E1AB2A04B9DD92A823CD765DDD1FC88
1033655E56510980E6EFEFD36B1AE58494EC75E4E832463265FE254228E6BA45
ABCBF15D9C02DF2B784216DAAF5110AA5B83AF3FDE5A2E94550DCE96A222F7E0
CAF14164C93CB95BBFAFD1F06B9542EE31337F512F7D3> |-
/g7 <1C60D8A8C9B64EDFFB96DA5B10AB2647B104936F6978BA812B0D36F699D
179C9D863A77B92321AD1D53B17D80B736A2DF5AA2EF66C4079A71E8F8922625
211AC17AB6C5A83BD56BA54B45D2E0600060AE90C71822A2CC02C5A4F28D4FD4
9BCCF7AD8F6EC86E19A9D88927F28F1C76C30268BD0EC5B3FF06C5C7CBEB71DC
5E246> |-
/g8 <1C60D8A8C9B7EF322BB5DE869312FFA73F92F966C0EB2AD304C3E332833
29F032FBFC7CE76CD0C23E579DEE2BD02A11C6E167AE60BF43320297F1D31EF3
9793018F9CC52F7319F0AE5C94EF5FDF26DEF253ABDA26D3AE5FCD6019ABEC15
86705E83FD01201A7718AE88C51232F5F687279178D808B2EC679F97580DA506
E1FF5F7954C9DE86135996EFFE6DAF9DA956C8DA49E311AD94F83016D2BFA6E7
00153B25A3E4B3A4FDB88C8FB32F49D19E02BFCCF8474E2CA16DAEFB6E2FA689
5D898F17B67FE36069DDF0ECF53C366FD812D7305E54419530DEDD3E675EB129
820362BE5A2B520B857D37171DE0BBE012CE40B098E0A39FA8E30D15F6397DBB
551CBBBA55248B22CD79D78FE153F709E56BCB85EDD137CDFC47ED15C3CCFCDD
B9417595F555F8F4EA408B8ED5FDC5991119B0DF850F5BE9F7559287552D987A
E92261F9E9DBD63A12BBE5F5A524B606DD636132975F771A2173EF189277E> |-
/g9 <1C60D8A8C9B7A73DB904D469146C8AF4667E8CDE65653932C72ADFDEA67
232D389885B0445BC22837AB23B9F940E6BE17AF4949FC8F5F9E36E05F59EABE
9A5F3B9D5EFE80A626EC11208557EEB5266FCE1148942647057FF8377622B6BE
BC27FC9545725BEE36D22172DEE790FCDD9C42994223176C8AD4AE06C90407FC
4278B3DBB8B8BF3918B41568BA9B79AC401C62D2A3449B671F2066967961B043
320B4698E5AC8C709CB88A3B1B9D15E1D04A9CCFDB1A9598A22CAD06CB2E08FF
680F5B88821F2BA8AA8D7A4F6227720FCE02508B882374006A2FE06CE8FFA8E6
37798E2EB3B31EAF3CD> |-
/g10 <1C60D8A8C9B7A73DB6332C479F6DDADB11F048780048C85A053C25CF18
93D9B0B150F132ED3B3822814D62259F3D85EC4AF49A> |-
/g11 <1C60D8A8C9B7EF3224364D481460F34141B324443E884E51E9A5C03C65
70B0CBF90AED7B96D6572D16883A2CB5141ED3D8C3955D303A6107EA55682345
655598D418046A2084E2FB98A10312692A03C4190654D6FB7C01D0FB31C18D58
620D193C4444090F03600BCD6010E85EEE1C8B2ADC03D2666C4F4416F18176E2
E917F6688E36C6C8C869FDDAB75ADA228E8957B7A0869DB3C6F1E97F70522554
3B3623299CB665BE62B79D37D879D33BD7EF5A3B04DF00670E4CE5196F83DA54
6AB1157B37A0749265BA83CB346DE6C1C01B16FA12EC82F04990C891DBB3C63D
4AAA3256524C0533CD1841DC750F7F04F582A9D9771E948A101929D8B768D494
BC04C865EC73A57F2DC950D62BCB200932D4ACA2AE5125DF5FAE87E14F51673A
8EB7B74676A8A29BEC426BA79A02211C780289EE101AE4164DE1A049E76A04C6
CEF5481D7D887B5968F72A964DEB4353D28E18D993057CD94481D7458B091F0A
5368F5DFFDE08865BC76C01EB4C3923F73749E456848855A9CD47A57A36ABF35
C931D6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 244{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
77.625 92.9375 mo
(\001\002\003\004\002\005\003\006\007\010\011\012\010\013\003)
[6.64947 4.28204 4.74345 2.84605 4.28204 1.90601 4.75207 17.4185 5.69222 4.75206 4.28204 4.28204 
4.74345 4.75206 0 ]xsh
169.344 82.625 mo
201.985 82.625 li
201.985 99.5 li
169.344 99.5 li
cp
gsave
grestore
/198794484.0 
<<
/ID /198794484.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 36 20 ] 
/XStep 1554 
/YStep 1554 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
36 0 li
36 20 li
0 20 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[36 0 0 -20 0 792 ]ct
snap_to_device
<<
/T 1
/W 36 
/H 20 
/M[36 0 0 -20 0 20 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J-$ii3$]7K#D>EP:q/21((,gb+n6DF:+[*;76s2S?nOG\NlU3Y)'jf.,6`_];Rp>H>q_QJ66QZ"dUtG-
:$5GhjQ%EtTMT<$3[GQ$5RPpg5tXj,QVFDWklI6L<ioH)<bk"Dj`\=EYZP^-q^%QQB=(iZ66Qnpfl"7Q
mT1@(_X2CUM6C!mjnAY&^^>$_4=1jRLVsPi=M/6)*KS8LE`kN%="Tc_$q;HMeoNd@ctDuRm3[Ko1t68_
>.nOW>W:;OG$@,,f58"PDK_*Q~>
/LZWDecode filter
<~J/Vfl3$]7K#D>EP:q/fk"V*B-,#J'17Oo..RZ0eHe8dJgO@SA/kp1r5Cm7P';Rp>H>])J>jqB2&c>>G/
9d`k\H,=toTMT<$3[FL^7\h"PoVtV<SP>k!c=\Vl;Q!Nr<U3Y"j^dFq3uojf.h.N`A[GSl<catsh/Bf.
DHAonm.Pb;?7tuAjmN(n^gBl-ga3gHLW!YA8)s.>)32_snlZs06S4KdTJK``k'&t\clf]!4XQLiVplk$
LcneF=0:+jp0-j\a'=ALD@i;>k3%0)hsYc&DC66[a5h8d>eXi0OT>~>
/LZWDecode filter
<~J2gq53$]7K#D>EP:q/<Hb2\7F+n6DF:+[*;79j_S4-hlJNlU3Y)'jf.,DSm&;Rp>H>n2lTVDC.nb%ii'
:1k52jS"!dTMT;SMBs$t8#0$s:7>`PSPQ1`C/2@:<ioH)<bkIaj`\=EYZP^:kB")RB!U+W<h!Zph.q2H
/lt-2f'R[o4J#>1eaiH_^gHS4lm;nuou(<Z=M/6)*;FnEnej!=:G%jUAM[J5]C#=gcY,-2*@?hAU=<ma
:[Mc'?*DmsG#/(6f58"PDKf<uk4`ir~>
/LZWDecode filter
<~J,g]g3$]7K#D>EP:q1$o*=mro@So+\(]tS57Uo<*jE<[.O@Wn[35>kq-^757;Rp>H>q_HC^gJUUdUtG-
:$5GhjQ:;7TMT<$3[G=D8#0$s<4ZWt%8Wp%C/m<k<"E'3<bk^Hj`D/CYZP^B4!g+-B=(iZ<kDqM)/m#i
DHAorf'R[o>i6_~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/198794484.0 /Pattern get_res
[.9375 0 0 -.9375 168.406 100.438 ]make_pattern set_pattern
f
2 vmreclaim
168.094 81.375 mo
201.985 81.375 li
201.985 82.625 li
168.094 82.625 li
cp
false sop
.230381 .296971 .881865 .00735485 cmyk
f
201.984 81.375 mo
203.234 81.375 li
203.234 99.5 li
201.984 99.5 li
cp
f
169.344 99.5 mo
203.235 99.5 li
203.235 100.75 li
169.344 100.75 li
cp
f
168.094 82.625 mo
169.344 82.625 li
169.344 100.75 li
168.094 100.75 li
cp
f
0 0 0 0 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g12 <1C60D8A8C9B6079F6DEA349089D3B4FE3BF004DA98D955DB94C2FB8F42
F8BE639156DAB1C4BA0AE80875F772D47F8480342EB7A507413D0FDFC2657681
9017DB995ACC42EC394D1FC22BC4B1C93FA6A3330248EDE8248146686FA03062
4817E41A2B3A625D78F40804C140CD3EA0239AB785B887BED9B3EE5C0ACF88B4
B6B212EA12D180AD7ABB912E64D7705DE0D06179049261B51541B9E0B4664929
DCA4E380AF4029A82DB545765E1A7DA36D8B370838E4BE06EB05789309A77FEA
AB93B1782F197F38CB9009D87703ABDE61CF84C1B7963BB418A4E1EBF19FDF53
EF463008666DB535A5A5> |-
/g13 <1C60D8A8C9B88C087229E05D595A75AB813E675244> |-
/g14 <1C60D8A8C9B7A73DB6E17FC5C328C598A04F26274F91061C7983431EFE
E391C35200F7557CA40224CDB923226D5CF5070B304C40FBABBBAD830D24130A
3F0C778DB7F7324E2691B5149AD55806AF8E5B3B9585351EF071776A32DFAEA4
09E613B2F50AC75FA161A15EFF84120DA0898630E2214D3442DF380D2C1E4416
BBEEBE5D857D1727CC2262A84D36C6FF4D599E5596B59F9B425B6681DE5AB8EF
5B1606BF3328B21CFBAF66590AA8698179F3718E28CA4AC6D3AF33E5647FE6B7
51A09B2BE0B996F4D9791AF592106778D045CB642207EFACE4CB6A944F6DFCEE
A8BA0335298ADAFF968765CB98D5693851E0E2F0D3D678ADD6D906123CAF7A51
4DC99785C43C901B859067339C26E5F07FBF877C2F015DCBC4C12AFC74D4B00E
F95E47A40DB66094228204C519FCE2137C9942124E3B8A75F481B4FFA87A> |-
/g15 <1C60D8A8C9B6079F6DE02DAFAAB738566BD8F7EFBF740C716FC3BDBFD8
8B7B9FF38331380EBD4749D24371F1C418F975C28A92DD5BF3FF6C482D4603C4
593EE4089341454A3A1ECE64D7D865936241A1735A6880AB3E495EBB1ED33C07
146EE75E290BE278A157B11E4567C9E83CC61F768D532336FB5B3FA2851C9AA6
5EB133890490CD3B5C564A5E05185841F2> |-
/g16 <1C60D8A8C9B7D8BE196F2A883CE22909944857CC0195422541BBA53AD8
148A5518> |-
/g17 <1C60D8A8C9B6079F6CA07EBE5EF4F09FFBC1C6B37DB3B82DBF203A0FDD
C80CF574B5D70B5E860A26FB0156E05E8F23E926BCA23B3B356C2C2F830143C4
F584EEDA4505256E57A29639D74067CC6FE49B95AA33939B0C91792DCF4304A9
F2288F12AA8C2C31E1D1C128BC217279F1B125D6C00C9D7E47E32D92CC2F7D42
C3B32D9D9DC9E307715747958764D43E26BC6FFBCAC3B326F7> |-
/g18 <1C60D8A8C9B7EF3224FCA76D01E86530A5708434E44C61689C25BC6759
E5B4ACFBE118703805EE1A6DC5F8A762784EDD17D6B749C3A05BE127E5D67592
4AD8B5DF98BEFBE13B72DDDF70ACF7249E9BE53BE195C9959B47A79333CD4FAB
757626FD9CA4323AD9F1A3DEE18B2115948CAF05550DA15BC245EC358538935D
A8EAC6CAA6843A157952193958F6827FF426BABB2DA6D4BD3AC6F9A12252D3CF
539F8B1511174C54E6AFB899163E565C0EEBFDB06D3651FDEE69316DA463A7CF
D77FCE2867BAA98AFF80F9E02836C9AF05D05E6CCCEF524702D039B393600023
20A36D1C24E754989E9372D3FBDB0735B6F8F39B1CC7C7D5A5F6CC824F8F3D87
5A7FCEC5474DE4DA1F4C40E99FFA0210E39D053C4CA4B110D133005ECF4E868E
0911626C1A35731480F8F8625F86D0B0126DDB27E678892B2C43E657885D19EB
E930171A147C3825B3656B> |-
/g19 <1C60D8A8C9B854D0F4910D935A1D57176F9CDF391D85F50858D0A5E07F
82EA02CE5587459A5B9D425DF3168D91D0D7A44A8B4F743D0C7C8B58D8A42E33
1DBEED4AA790D46EA67BA4E06234718C7316B1F49EB30E4AC4FC22> |-
/g20 <1C60D8A8C9B7EF322457B2A97C000C54A882730A7342197B35CAA9AB2C
BF535313A8325FADD7F2CF33CDC58E00A8867272EC2A92330E05891F691105F9
E3E0C4A0C9150482F8C28C349EA1DB47110B0B0C501780D1757A83199CDACA85
66103FC0ECFA0CD01A29ACD220764F601C1C01419EE6B4207DBCA4FE7BD881DA
B2CA561C4F7B5857CDB738766ABA6FDA08F63D6756B7C1DD8B59DB5848E7FF39
C1D8CFD3B7B8D6091C28260C33D99ED99CF9764FB156C0374921D48B8895392B
378508EDBEC0C164D89C9E87CE00A4BE338FB9C86FA4FA776DF18FFC2D1E3ED7
898ED274F66E3008DE50E5F6AC2D947E6A6CBDE73D9CEBAA39E80391DFEDA623
B54184EEEAA8A4D651DF623330849D47A8E783EAE2B8E944> |-
/g21 <1C60D8A8C9B854D0F47E9DD743C47283836E7A2171> |-
/g22 <1C60D8A8C9B7EF32240F521198E08C2ACB923717A133880155C0669BAB
C0A43B2AFF6672BCC8D4FF8A008379CF23637E98FF0FA5DC5FE274B9C44D5801
C90294B0532FBEA77009012B29826D61C01021AE0A2123898C33F4A57A4898BC
A75C5ACAECD1A6F3826A4746E876325BC485E899ED9507D58C43408F00F5FE4C
3C3FF1BFAF6235FF6933775BA8E5721610F1D54EBF0F58F748EAC9DDB5D214F4
4F734D919CD9459246FE35F93FF78C4A2139F6926753972BDCDED43849B098A6
1E71776537253AD0EFAF> |-
/g23 <1C60D8A8C9B7A73DB6C7879957FB2A46070F7FB5CE0278239ACC197BA1
70A6741E5A2DF38E146AC0F4E1877D38BBE9B166FEA359FEAAE921F0AF39> |-
/g24 <1C60D8A8C9B6079F6CAF89E6F9B0B24F5085277BE0AF35B692F0069FE3
477A0F29D6ED1E7BE81B4FDE5523> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 12 /g12 put
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
dup 19 /g19 put
dup 20 /g20 put
dup 21 /g21 put
dup 22 /g22 put
dup 23 /g23 put
dup 24 /g24 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 231{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
174.969 94.1875 mo
(\014\015\010\016\016)
[6.17084 1.90602 4.74345 4.28204 0 ]xsh
213.547 92.9375 mo
(\017\016\003\020\004\003\003\021\003\022\004\003\011\010\023\003\024\025\026\024\003\027\030\003\015\022)
[6.17084 4.28206 15.9997 4.89734 2.84605 4.74344 15.9997 6.17087 4.75204 4.74344 2.84607 4.75204 
4.28207 4.74344 2.3674 4.75208 15.9997 2.36743 4.74347 4.75204 4.75204 15.5297 6.17087 4.74344 
1.90601 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: KFXAAA+LiberationSans-BoldItalic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYM+LiberationSans-BoldItalic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1 <1C60D8A8C9B7EF322BF57DE0EDB5FE42212114A6390F68820B1E4766DBB
89B9B3E013C8D626C5E1B9C64ADBB2DB9A13626E068B7ABA8FBAABFD9857A8F3
DBA12C0F5FC9175D229B00F834A60D6E297DE53D6039600A4239474D23DB7CB3
91E1ED3C8D1BE56F15675289AAFCBEC5A74E6519C98B7ABCD4F0300040819C44
9034F4E3C4EB3429924A88D4326B888D460DC41D08A6A> |-
/g2 <1C60D8A8C9B7EF3224D3939D7CFDCDF36A227BB41EE24CB891FB0540F0D
06BA8ADE7D1E35BE7E654151240DE9B64613DBBB6D87559D93B09AD22E69B53D
860EAD91B7D6D98A00D89EDC637AD2BACC32A65E308C4888646536FECC56829C
C3115335DDD22B8BD108462101F956542DD3387EC2A3FD4BC3CDACEB3F6BD139
EF27481C812C29C7410E36A712B4DF56E73AED27CE836EF4F0DEBE67079070F8
F85527760E6B0A919360CDDFB367F98E23969C1C359BFE0C98211708A91C5A01
B9972ABA39B7B2A00DABBA28C7F79CED004F0ECAA073C89FD5F8053C84D3FF95
9C8A6A3DCAABB76EE411146C2E693CD2621A02677353981268F641BC976745B4
85B5DDE4169658EF230C157E4D2C0AA9619F2B87DEE63409F7967BD3B4E0224E
51A632EC4652E0796962F63C3409627B434850C049381703CBBDAF00C5297680
46A0CEC114A9AF96D1A49B5E80B354DC0A79B9A11FBDDEAE8311A6B7944BE122
E967D4CBEF3838D892EC6C32CCC83D1435B349BD71EDD7DB98AC261A86450AD8
E56D467E3F900911052E498A2AD52C2A0A115C76AEDC05FE6F0BFAA51018D458
F1135> |-
/g3 <1C60D8A8C9B7EF32249D3C6B7365218CE220CCEC2D9E49B918EBD8761D6
76B21BCAEC7743345902C9E0500E1EFE65C741F8EDEC74E9A52146CFF353B80C
62B26ABE8D64ED6EE65C2EF408A4D4B7A969E5805A7A907D7E28437A74ADF23> |-
/g4 <1C60D8A8C9B5EE310287C170DCE159AE2F94C1FD4511843C94DEB102450
243644305E68284413169B435D7BE4EAF8EEDF93C48F88B19BAFCDF8E3260B8B
B4C53C06DC96C63DB1837D88AFC24B9D54043E9103FC52D4AC86C9CA8EA56053
097F9CE6F19C0AEE0FD9B54D1B559A4884C262A5DEB92810B3D8B072206C6AF7
793D906D65FEA25E273CB2D577DF10FB50081856E05DC78FA9673CEDC1EAA2AB
08154512C7D07BCEF2FE3FED41D1EF54D5475AC5CDD6D9DE2F8C55A1119883B3
04315C1DEFE339FEF116306AB> |-
/g5 <1C60D8A8C9B854D00D> |-
/g6 <1C60D8A8C9B64EDFF4F944EFF606C65B37A952F713063A1AC62A2787263
10B56B97A2A880EFF9C49383A0A6F79BF7BE4B326684DEDA72F5F3A4628C2CF9
BF93C000E27D1A1AC38D2D0E07D19AB9246EE1DC7ACA3637EF323013B90AD22A
AB544AF1D9F021E7E62ABCDB05CD4E595D463123F8041B0F9147FABA85E21F83
03FBE6D4CE80D5FF189710E899BB5> |-
/g7 <1C60D8A8C9B854D0F41D42BC7C4E4FBF41198545205E37D25031> |-
/g8 <1C60D8A8C9B81F2C3A0F4053DC5F1E54611078B5106BD773440B887607D
31835B8CC79448ACB51256635C9DCDFDBD785593E7DDFE92C945ABCA00C99F68
BA6A7F7962F3175A927E9BAFB3F242941A28589F25AF4F8B7D4FDAF1B094C719
B7448BE44892A958E5458EA52B20F0FE2E7FFD9DADA373D15F0FAC239FCA2CC1
CB9A38A119B924DED87C9C12ACC808856FF6B> |-
/g9 <1C60D8A8C9B81F2C3A46F8967C5B5384CDC297CE927F233F4E82B1408F9
5CE2880E6DE99F152193E6F643C994583560AF12877C307521474F0763001126
F6955FAF60378DB4626E54DB4C023B33D7515D37609AF7637ACB2692E29613D9
FD198CD3824FC20DCC3E0AAB6B81E066668A919BA94E874A81928B9205528AD0
87639297D4F> |-
/g10 <1C60D8A8C9B7D8BE19476925CD0113340131D8991C45EDE2247013ED28
6C2C7075B3AB45E4B15140A9C829D835035B02523065AE4DD0C1349B23B53C2C
CAEEBDA0C2DD51176FB27A1A1AA76BCFA3E81DAC16CE712796956B1BA3823273
4E91EBCC5E5D83F78178948716E7A613E5F6E5ED6E89AB37BAC553756234B164
03E3AF0F737B2ED6399F5BC27F154D37825C446A7B503E0BEA80A1FF43493468
681F81086CB02A03886443FD515A210AA9055E7A5D4D85CAA5B6E1E70F19774E
095878863E0693434749FD96049AA765CA5373E8C1E139DA6A908EFDEB2D16C8
B0E17FFA6C0A3BA7306755AA5AEF5F6905FCD4FEB0ED4C2470FC560DE9772265
DEDDD6A9E9DBE123FF5200D6EFEDF34057B42F92> |-
/g11 <1C60D8A8C9B7361F0DD67E75E5083EADB064FC7F5A8434BA8A422B5240
1410C412EA2E82F73FB9E5B8388577F4AF3C5B81BAEF4D75AB3932E07B0BC3C8
9FA9B7CCC747DAE68B4F4721A4BCE1BEAC7ED37BAC990E3898B58E87FC8A73B0
332E7C4CF248BE9239CC99C06D6379A4F8E148B88829B53F62DBC85F39CC0367
F2995DBB571BC620D561F9ADB154262B9BE5A303F84ED2B7A6E3AB10021E8AAB
09823AAB79B557B12B3598BB7954> |-
/g12 <1C60D8A8C9B59F85E9337F80393FFA020DB0EFDBB34E5C5805D90F71A7
9C9E2C7EC0020FC0B645760E3DADDF4998B23FCBD7A6FAFA4DCBF610E6D83EAA
6BE9E1653AECBD4EB1F112D7826CAB938B1BBE61581BB39E480E7483B73DC441
7B021323AF7F12513C2B83021A2324718353B28B8B27E6D99C72F1A9DA65AFA0
AA7B362031CD5F91C5C9ED39CF26E8191D3AD75EC31CF1282B172D60EDA1C336
C6A61A1BF55EDD618B806ACEACA06C92453215C10D7731541242EE25EBDED621
A822C283F073434C98DB74B43D59458359B9CD25DD3D25303ECFE886DFAE1196
430FEDB7EA45F93B58B5FC5C89DA00B37F5333D6EA565390900391992574CC96
7657ACC6E96997B1BFD733555B7FE8D54E1CDB8933B16AEEFE79D7E37CDC25D6
FCE3391AF302B0B75477D9145A06AD30CA53FEC8826490B877C20DA34AC8CE28
F08A8F33F88AA132FEC700323565EA9B> |-
/g13 <1C60D8A8C9B64EDFFB3DCE23369609F7B01E02F24DA704EACE7C792D8A
65AB753213CA65E561CE114DDEBDD1261DB583C69CC477D9FCC45E0CEB320251
DF53E0B7A4A9A9D6A7707FC989B767A91BD20B53B78CA311AAA5B892232F76CC
8B72385AAF95EEACD3E66B895047235710BAD740F0E993F8A7350C80F83E94F7
9492B6B739459521E32EB7327DE4FC2229D94EBCC1903CEBD7BC9484E504A03B
9E68B978A472ADBE791C15363818A01228B0676D5694B73AF7075ABA9D8257A7
7FC17D1601EFF79336C8E80D37D5A77C89A486C1E32D42F6387F4AD4798C611B
A4794C44009CA2E2D45F30AAE12E6BAF2E5AA63FCE304C614E729AEFE7BCD007
6AE3266960F60627D7BC7D993300E3CD08051FE5AF8095AA56AFA7091FFC4B20
EA46586AFEA00FD345CEE3EB201B35C4A37339902E761427C00E5B0C467C9E3A
E0C5E02652B04D9650315142B56681086B773F67C8C314240A844722BF4EA58A
1ABB99CC8F2CE6A59B> |-
/g14 <1C60D8A8C9B7D8BE190A77544EAFC8EEC4A1E590884229C4BA7AD8E715
B59B739CA079C948D14D9945011CCCB034E37924BFD51850D6E8BA36BDCD0765
8B5AEC32CE9CF9593DBE36A607BC77D6E3CE09A8D339E4BAA3A8D46E42540E98
75962383A2FE9DAF5143BDC827BCF05ABB3727E1ACD988069AEF2A1AA148F801
006698EFE78981149CA2E98BAC0532320B540D2D59208065809374196A0CB7C5
29BC34F3BD73786E3FF4267EED99E0210F2BF98A94A3CDD21F92B8F745AA3254
2057E4BB7A09903DD06EB9222C999510070F5A38F7560013D7D0A7C6159FF394
AAA8FC45F0D12FB7B065A02D> |-
/g15 <1C60D8A8C9B7D8BE198A4150C2D54C157AFE855C297C5FC459A8E54DDE
C2EFAA7959D7ECD3CD7E022759363E8D153E4D8C05A7C2546B657E05EF052439
FBFF090CC80524577C9E17E8F3DFFACCC6A7E7C02715C4176BC01C6B6CDA5220
43BED8FFDBFA4D800B131F5CFD81EDA7C941A00CE8A64B03E2CED81B5D08A4E1
977AA344B4AC2A2C7B6A543CAF6084EE55E558931B8DDDF4245B342CD5F20F49
F870C564A75C828EACFC5099285D3E8A420AF251AD424EF6DFE0D462022E1CFD
58DA2AED33B3B3B3336C61E1B61BE0CFF1931E05F2ECD9E7F6E784072207D5A0
11E214B13B8CC478A023D9C58BF6D19255F7BA629F06F42B94EC171E397C7A47
52E19640287F2924FCD9538D12FD3577B7C22840C96887252EBF67DFE2439569
1E2A3AB19B805AA56A38681C8544D6B641382A079766505854F7F1813CE5AA55
D50F67FA319ED3997EA9B3BDEA> |-
/g16 <1C60D8A8C9B64EDFFBACC980261F6A8BE9517A396983F5295A5C961937
FB1DC182CECDDB4AD79A0A1C394CE20FF627DCC163FB2AC4> |-
/g17 <1C60D8A8C9B854D0F4043D8758093405536E659555273371> |-
/g18 <1C60D8A8C9B7EF320D1D7D8535304D46AA0A6000011A98F63349DB2DCA
040792C811AA5D4B32F8A9AAE8D72EFDF9282653EF0A046ABF3CC9B9904597E3
D57105561EFC17D79293E18F2F195F80DDEF31FD48B08890D15E1106AF7D5D06
A8B22AF0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYM+LiberationSans-BoldItalic /Encoding get
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYM+LiberationSans-BoldItalic*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 237{/.notdef}rp]
ZQVJYM+LiberationSans-BoldItalic nf
ZQVJYM+LiberationSans-BoldItalic*1 [6.84375 0 0 -6.84375 0 0 ]msf
468.641 81.0625 mo
(\001\002\003\002\004\005\006\007\002\010\011\012\013\014)
[3.79822 3.79144 3.79825 3.79822 6.84375 1.89569 4.55792 1.90256 3.79144 2.28583 2.2789 4.16782 
2.6554 0 ]xsh
468.641 89.8125 mo
(\015\010\002\016\017\002\013\017\005\020\017\021\005\022)
[4.55795 2.2789 3.79825 4.16101 4.16779 3.79825 2.65536 4.16101 1.90256 4.55795 4.16779 1.89566 
1.90259 0 ]xsh
72 105.312 mo
539.5 105.312 li
539.5 141.562 li
72 141.562 li
cp
.117006 .069337 .0465095 0 cmyk
f
72 141.562 mo
540 141.562 li
540 142.812 li
72 142.812 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: ZPCBAA+LiberationSans-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYN+LiberationSans-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1 <1C60D8A8C9B64EDFFB8466EE44D223CA98A024A110885EDDAECD6BA2A52
53CEDDD012CCE6523E725F684CA92D79ED57FE2ED97063AEB83FD6844D32319D
3C88E99AE3851865CA3FA69FEC99FC194AB5CEA78CC4EEC930DB36341101632A
C786DE5D300D3F8CA3B5825385B69ABACBF7F305C553039799316E62BB56E818
5081646451E4390462765EA5E463859433D> |-
/g2 <1C60D8A8C9B7361F02D2BC3C61CB21147A285CB1B977C6D3DBDF3D26283
2D5E79A85426D01E5D198F4D88B1CF66E552882A14099BCC9E73510DD5AB7FCB
926CDA47F1910F726C8B71667E0A1EB8F1BF302DFBD7E4A92717EB2495FAB431
6A32290F11621C0FC068C0B8915B1AB8838DA6D06789A9395EA3DA598D66C301
599B98643583CE2EEDC9BA8888B227AC6C101E466A347D5F6518FC4> |-
/g3 <1C60D8A8C9B7EF322461EC9C7117591CF0F0272990014F1B83870CEC9FE
1D8F4D9C7BC958F02AFEDBDC522FE7D2D5C21B6B69E95AA1A0B635490C5B6FAE
C258DB37DCC98BFC6EEEF9A6A65DDCABE02C44CE8109ABF94D6D3F64ED6A3A45
DCB89846D38ABC2E2B7ABDFAD13B8C8C07BFEA0E87A4FA0BAA608877D88B61A4
3A19701C3E46E3618D43488EFE268C12BE21C54853235655A1433562107BB942
81269CB56DB0F06852FDC2DD6BBA7DCC28D9B7BE85E89EDFAA07D7CBA6E0FC4D
C8A53AC6A0B931F9C73DEDF8D8FF9C1748D6824674EFE8425EA1C9020269BD95
3E994959FDD> |-
/g4 <1C60D8A8C9B7EF3224CC5241E67417490B03E348452CBE17DF0695AB2DA
924CE59AEEB48297A9CCDAE5714A00886C224268D8F25BFF6207FB44148101EE
E81D489B2852FF215EB9F568C7F3CB70F8CA912652919DD07E9C927E1D09121> |-
/g5 <1C60D8A8C9B854D00D> |-
/g6 <1C60D8A8C9B6079F6216CFE40FDBDA9B558AD27CF6E7D4016A206A3B210
63FA49F0E321881E1F6D7C3E326BD28ED3B936C38811EEB40FD034525049EDCF
5B3D829D3FA92FA5E599938EC1117EC7E2D3244691F292CE8776EC47EDA09920
3071A7812CF1A9EC532FFEEEE133165D4AACBC2036F9AF8C8669190FCF9F592B
827D7FE3F260D1708B87DA5FEEE6947191FB055D1681FB3DDFA373F36F60FD3C
B39100DD13A53C744BD2ECF3BDAF2DF0C5151779FFDF0DE467D484EB950CD72E
2DABAC782C1E77D23C3216508FBF93E041A313865A5483B77D513541237A4CA3
78D96708B03BCDAFF4DA105F9892DCC670AB1888B87AF3B4FA9> |-
/g7 <1C60D8A8C9B854D0F45065BE46F9CF31C8C8ABFE97D8> |-
/g8 <1C60D8A8C9B7EF322BA936CB244A8DD1D5AA83AD3B5737DFDBC2921B3B3
05259861C0A5B6521C93F973AB6D4B95422C3A0BC7682AD4F8C2AEE3A2E67E08
2F6C4A52A8BAD31B41D2794BF18C9B955A034F77E9144EBE55D7BC7C68527C6A
A9DCCCBE55354A366FF162FA8D4FC12CBBFD7A1AFB9C6D6334CFF511112D40BC
8157737C53BFA457C6F61F46B0F020FECFEDF9551F93A63BDCCDDE1486B33DCF
E74D06C784FE457B53199A570784A043A37818596B2472F76407AE825F52F0D1
CC681C9EBC6907E969EA240D89A1553487E37F1FD87EA4259AF164406707E206
CD2A63D6A7001768FD88B78A8DBF4DF216B0FFC9E73157B2E62F5DEDD513DEFE
D7437067B5A6854C1F26D84340454251D3EC2225EDBD25AC2F318AFD72C02D45
A4F12021252654ED55FCC075FF0AF300F97C1162033BACE4103BCAFE4D8361E4
685F380773739B321D79E12667C40BD7E660F9CA1D9995787E7E0E89F1937FA6
056126D1EBC243AE65EFEA7DE2FCB235C32B0> |-
/g9 <1C60D8A8C9B7EF3224F67FFCC32625CF802DC30E14BA2578F94E1F8D87D
B921E1C3C031E1E7A4336BB863A81D1B8C97D91386800612A483F4BB5B58B299
D14FE41028311FA13694FE3A36026E88E968E09C6B237625C62D1E5C7E6589AF
55F25848D3A68DD0C791D2B688414E925BEF2EB9F4991DF09438A79398D5DDE1
FB2EB877F21896261CBDC1A70F6511BF3BE5FC490BC5C59B800FC3B92260D318
A452EFC229E520A04B364C592E171BE9FFBF98A6617A170691A7451B798CB5B6
764F535B62DDD47AA8F2EBEE0AFD72E87F7DEC3D415EE14FCFD0F0D4896654E9
0C3626EB4D2FE6B25C2A91908C7DD752C0DC32904A909D3C3591271D97472DF4
6048EC1C38DC5FEECFF08770016BA5BF394424DE83FCDEDCE0328D1E60A251B7
6A500992328D32F72C95500761AB1CDEC7269E464A578053042AF6ED2561C7E2
25E59160FD915B0C29857FDDCF38A0DC55EB14A574331827D9D0CE0> |-
/g10 <1C60D8A8C9B6079F6C980536848747115D49A123CCCA247165E4E85F3A
49FBD264A6EDA2D63A3B0044B07193992493F5549EA848C049396DEEBAFC89B1
273CE1E3156DA5B9C83D9FF79774A50E91B0F5C2076E2D4C4D> |-
/g11 <1C60D8A8C9B7EF3224C929FC1CB5CAAE93508663200C2A5F426618A079
08B81AD0074FB2B7D459B8F62502880C4D9B41EF58200FE951E67AC7E4D03B9E
EF> |-
/g12 <1C60D8A8C9B81F2C3A2410291B62D838FC35B710B4E7B0980DD53EA5A1
6A8B87C9FB07A671EE3DC6BB783731B7B6060D69FA269C904C3D46035B40CC13
299B4BB39374CC6F031528EEEC62BA35897AD99DB39531C26A0053CEF3DD0F91
A8C7C43A8A28> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYN+LiberationSans-Bold /Encoding get
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYN+LiberationSans-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 243{/.notdef}rp]
ZQVJYN+LiberationSans-Bold nf
ZQVJYN+LiberationSans-Bold*1 [8.54688 0 0 -8.54688 0 0 ]msf
77.625 116.875 mo
(\001\002\003\004\005\006\007\010\011\011\012\003\013\014\005\006\007\010\011\011)
[5.69222 3.3334 4.74345 4.75206 2.36742 6.17085 2.36742 4.74345 4.75206 15.9997 6.17085 4.74344 
4.75208 2.84604 2.36743 6.17084 2.36743 4.74344 4.75208 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g25 <1C60D8A8C9B7D8BE194014A2A3B21292C08C4C8AB8C9FE35BD16E87D48
CBAD28613183E261ACF3> |-
/g26 <1C60D8A8C9B6B41CB4AE1A95334E14EC1E3C3761143318C2ED57C6709C
10AAD4FED557E46FFB7B9AA7E95DED38B7D3179B907DC57EAB775E9982CB61A3
854E4761D2EF44E076A20A01C06AC935E244052EBCDC9D8F88E63447DED3C3CF
DB98F45B2D7615E62CF30F05E2F82163716E56D195D9A1776D3B5DFFC8AFDC74
2E32457B6A23A3E4E158A97C21DF245A0B9C570ADF7F647FD964AD8357BA87A7
08F5AC754E14F81D471F8493B0DB65BD362CFDB58409935A17BA1C71E2DE4B11
EF7C8F28D5D8BA6E86627327A70016E93F0B7697B34FB4C4C3662EE796EB9D7D
4767EFC17D7C48A2C9F0219674596E9882E90178C36E0187975BAF64BE6B48FA
975CA0A0CFE04D412A5F3E3B5A9B5D958933FB2AA068A9A3BD2B8E69EAB01CBB
59BD30A10510D98E7B67DCE14FEDB0B31330F61EDF10> |-
/g27 <1C60D8A8C9B6079F6CAEC64DA811F5A63671797D3486923A9768D61605
EDCCBA36752B0C6B916D0A0940F07A630C6EF82FB3E1D3360B03B7EC53702EBD
5AAFFE26803218F458CFD200C9DAC5998B159B46ECF723> |-
/g28 <1C60D8A8C9B7EF3224F8DD91AEF7DD3D6A951965CA0E38FC4E654E0694
697B9F615D6A1F364EBF3F54614208E6E32A0FBBF552D3D0A426280522AACBDD
FF1BE59B147F4ECB4E6CE88D82B6EBF439D59CBB47A7DAA70A5B988FFCAAC80C
D213BB82E06CACB2EE094D172AD1A01CBC6460431FEC55897CD976885D74EAEA
D2DDAC40476FDDF2A44E067B56425F6CAB98D95A41D1C94F69D93E6A1B1C9A05
C1A5453268EE20412445C8FE92A7FDCA7359287D5DC980CE4E28D9E293D2B039
13A3458644EC9CE735A7C0B338DC426885E61250> |-
/g29 <1C60D8A8C9B854D00D> |-
/g30 <1C60D8A8C9B64EDFFA818E991A9F572C082A85FE52EBCA1919EE16173F
67A39D29A68FD45C4EA32BCA07F4E19460981758EC325C22B5621FBCDC47A173
12EB073B6989AC86BBBB1F2FFBB3A7A461F24A49261AEACE115CD9B1818FE346
7B75761FCF0046A1C3F5D1DA7A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 25 /g25 put
dup 26 /g26 put
dup 27 /g27 put
dup 28 /g28 put
dup 29 /g29 put
dup 30 /g30 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 225{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
210.896 116.875 mo
(\031\004\010\032\003\016\033\034\035\031\004\010\032\003\016\036\015\015\035\014\015\010\016\016\003\016)
[5.21359 2.84605 4.74345 7.12808 4.74345 15.5382 6.17084 4.74347 2.3674 5.21362 2.84604 4.74344 
7.12811 4.75204 38.9652 5.69223 1.90604 1.90601 2.36743 6.17084 1.90601 4.74347 4.28204 4.28204 
4.75204 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g31 <1C60D8A8C9B64EDFFB8D177478E22ECE1248C06C9A99E45B4F14740156
A1D028E85007F581E9BD7B8193CBC70CC9836EC3CDFE86DDABC169FD607A925E
BDF24A07428E196458A5BC2D329F9CD70D7408F64B53057518F8EDDD72AF28A5
6CDB86476D31BB4D88ACDBFFD5868D4533A9B95BE84424514B8C9B36BD465BDA
AB826ED5FF16EEE3E39B6EC5DB8A0B6F8A61597E035D53A0D227A03D12538B47
28CF6DE71BE703E1DE29CC3D7E464799782058FC26EB3697086069A407D7B2C2
B95E2FFDF4B3B060B09ED71040202771552941D815B7A964596A1811325072CA
F2B46322443135DC7B3AC7C24D741D8FB6D5E112CCDF1E1CD8C847CFB97A7BFE
4E0AF419E28FD0EBA95933CFD606C4A8711E18C43174A143DEC7DB4BAE720EE6
DF9C7C9C9D0DE8632C3D3F0E2D2A85B2C412491D8657D656F10213935953EA9E
AEF7C6186ACA0010CD3BD89774A22E7B5FC493012F0D9249316A545166BE6C75
97A3E8DDEAA71CA6E15A441B0A5E6789EAE5796EA9CC> |-
/g32 <1C60D8A8C9B7EF3210A837BE05680180788B5DC1C0769F02B38C9A8455
E7CA16AA9CF64EE523CD337FBB2D8CE52D980E4EA66C18CAA9867CE17EBE58A6
28113E38F11688583305D476A6B599D7304A93DA1501BB21090AFAF786985C92
67D6344D0C4F07ACCAEB06666AC2A9382EFF8B1A368F36ED7C73877EF3E90450
D6B69BBA241028F3071F3A905B506C02D4042C211AD41F20EC1A15A3A96EFCA6
5ACC08FBC9FE190525D8F9FA81320BFF185CA71912735B4E847F1CA83B6D5C50
BB5DAC9C7F8D41220BE20D> |-
/g33 <1C60D8A8C9B7A73DB63C84BBBC6497EFBE7FB8AB80A20C5FA0E099C2C1
69FFF58493A69527D56CE86D7D095A8858141BE042CCE7D74F1990DE48C03A7A
EE6EB879B6509797AC6104E729CFAC280383EA26705D1228C5029AAACE75CB21
AF430B6E561B4A5C9B9C2EC7B688547FFD38329EEEE51A5A0AC13ABFE80C48D0
6A1B66E6BFAD95387B7AF92E24ED5E5CEDCF48B4003C3210B6AC9D06ACDD4125
CEBD3E7BEB8C49> |-
/g34 <1C60D8A8C9B854D0F47D44EF6381589C527D4CB54364BA81426D68F330
69A5B2> |-
/g35 <1C60D8A8C9B8666CCB26E824B85C0DC1065B3EACE0B2DE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 31 /g31 put
dup 32 /g32 put
dup 33 /g33 put
dup 34 /g34 put
dup 35 /g35 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 220{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
77.625 134.375 mo
(\037 \032\032\010\004!"\035\033\003\016\023\003\024\035#\035\031\005\003\015\024\035#\035\014\034\026\016\023\004\035#\035)
[5.11988 4.27425 6.41137 6.40363 4.28199 2.55988 3.84375 2.13713 2.12938 5.56574 4.28199 3.84375 
2.12938 4.282 4.28198 2.12938 1.99884 2.12936 4.69713 1.70662 4.27426 1.70662 4.282 2.12938 
1.99883 2.12938 5.56575 4.27423 4.282 3.84375 2.13713 2.55988 2.13712 1.99109 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g36 <1C60D8A8C9B6B41CB51997735EEB14BF4573307959500C0A2ADAF0100A
A8ACB86AD8239B93B91D1349FFECAF025995D78B468927B6B07E31BECDE93823
2D3FAA1DF4EBC8DDD14FC66D62B401435849B911AA1A00D4A2E72FB71AD79C9B
B8FE5D3EEFC5A7BF056ADAA2F2E2F66835ED04748C730366B9409F2CCA23CB38
F289CCA704DD24F0A97EDF8FFAF44AE9AFD7DB4919BB56AEAB2E57D09376F39C
8E003972635EEE2C0BF4D71020A7B604EE75384B76E7A8BD55204F285EF22753
75AA3CA0D6AB17E49BE5982BA9D1DAE86F9FE402> |-
/g37 <1C60D8A8C9B7EF322B3874FE29B71CCCF671B2876CA382646400757C85
A71B1823A836C5F8130F9C8807E6EDE32F21C7898FE48578DDBA059E9EAE9E1F
23DD58CFBA64CAAE764AEC8540B8FF07A962699B3070943061694796654768F9
077305E1C57D968ACB6813916BA050F57DA84A2750D5F024D9B9B8030D368F56
2E48EB9D3A97AE0D1A22D3E106FE2C7A1C90B07475C87F13948D3894BD581C89
1ECEDFBAECFA4DECB610A712C54203B8FAF5AD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 36 /g36 put
dup 37 /g37 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 218{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
197.391 134.375 mo
($\003\023%\034\024)
[6.40363 4.282 2.13712 4.27425 4.282 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
246.5 134.375 mo
(\021\003\023\010\005\015"\035\031\005\003\015\024\035#\035\014\034\026\016\023\004\035#\035)
[5.55812 4.282 2.13712 4.28198 1.69888 1.69888 2.13715 2.13712 4.68936 1.70663 4.28198 1.69888 
4.28201 2.12936 1.99884 2.12936 5.56577 4.28198 4.27423 3.84375 2.13715 2.55988 2.13712 1.99109 
0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
322.359 134.375 mo
($\003\023%\034\024)
[6.40363 4.28198 2.13715 4.27423 4.28198 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g38 <1C60D8A8C9B88C0872290F0883B9567556744AB94A692140DECDB19C7F
9183C52202E112C962029CEA412F10DC99D029475074677F3D677D21C2E38497
70D29186E89A443178107B7B979E03BF864329C6E8DC674BE12711E9A3595FE7
E0D57E8EE09DC05AE27A67C4C0E43F358606FAA3D5DFC0EE> |-
/g39 <1C60D8A8C9B854D0F47DAAF90B98D013E408F2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 38 /g38 put
dup 39 /g39 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
216{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
90.75 160.938 mo
(&\010\002\010' \023\005\015'\004\003\013\003\027)
[1.90601 4.74345 4.28204 4.75206 2.36742 4.75206 2.36742 1.90601 1.89741 2.36742 2.84605 4.75205 
4.74347 4.75204 0 ]xsh
.858061 .653773 .463996 .338598 cmyk
true set_gvm
%ADOBeginSubsetFont: ZPCBAA+LiberationSans-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYN+LiberationSans-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g13 <1C60D8A8C9B854D0F454BBF016D4ED3B55B8FE3A32B9> |-
/g14 <1C60D8A8C9B7D8BE1936CAE4B1B7329867C0EEDA424055D2106FCD21C4
BBF80ACAA02D5F66FD841AA425DB40E24E30563346FCC7F49209680A04675111
AE5092BA7C1DDE4D7B2120344D5272FB7DEFCFEC75BBE6B9DDC27E86FB00F613
0A7409A8E04EC221B7481E8EEC00E43A2E2A44D75C06788BCACF72616C209CF0
1CBE6B9A4B7E7DAAC6BC69AD6CF9AC2653EB43BED39473919344471876C55F9D
6A65090D87035FFD9E759DFBC0E533935A46D3F585C06399AF2C25CB8F4D> |-
/g15 <1C60D8A8C9B81F2C3A587CE817BA638520CC12F2CAC5F78E598809A404
ED7D6633FB74C6A9E5899568A3DC5256BA4C330A467ED234E84B7A7639AA7F25
E2D93DA483D368462BAAD7C937A43CC0B122162618AA0DE9D0E1F5FC4EC0D52D
F5E2AD34E2A4A866B20D07525E27EB7CE52C7128131707595F339F70E374E6> |-
/g16 <1C60D8A8C9B7EF322466FBB339D33BCD84807A0C29B0E8B3ABD3A490AA
2152019C802DF72B68B1F377F8EBF169A53C4026E51DB96847534166603A55A1
B1312C7D54658F1BED4214AE16BC6305056D4AC2705AF7C555A113C8D98303C8
EBD2BB9E6F778CA01001EEA6EEA46104E1031A436BA2C14CC9F2E81726F4192F
F6C369E52BBC83E67DC753BDF5B8182E485FF925B31988B3C11EF8CAA997EE41
7AB517CC8093A0F2AA77B2C9B10A7A726E1395A49D90966F5D> |-
/g17 <1C60D8A8C9B6B41CB508DD42835AD284FA0D2D5D49AC5873E9C4049653
882E24F6D74DF26473D81FDDE2AFD9839D413B5293339C1DE08891B9529C2DD8
79CF347064E0794FB92C3FCACD5F5F2E0DD99AACF301C7ECB9192BECC2E53D33
0382C0C27F0D56A4457757092AB2A8D5462F03136AB322B29E2920FA9E5CA7F7
07D61572E5C02DCCE954219CF039B751E5D4F1D91F614948B9BCCBCDF937446F
65F95A59936C4B451D311A05D33739594B743E907257A143247BB31585DE4892
29BA03E6D1143B8DFF2F1EEE6FE6A45C40C61400D7A4A4E7A6DDC3E1016092B7
96B254> |-
/g18 <1C60D8A8C9B7D8BE167B481350F722487A865B74690C34A546E625A5E1
B9DB02FB9ABCD7BA565CC1867A59777E9C8E0AEE472BDA3CF772EFB3B1FAA6F6
62C3073C44D9D3EB1BE6D18D9677D7EF231384EA92651651C2EDF5FA989AE60C
5CF4F3EF7447D16120F50577926CB9BDEF23542DF2AFB0BBAD56683923A00F6F
908CFE0C48CDE2C878A29E964AD568573C412FDC71BDC91A9DBBB0923F8EE315
6DAE031B3105EA7C> |-
/g19 <1C60D8A8C9B6079F6CEA24BF13E68421441992C63D114F24B06B7C3882
A7528A09C2C79A9599CA8C792FB709577F7F384E51403B5BE5CAF630B43C36EF
C855E83BC472176EE945BFF4BFA9DE62DD5A79680ECDA462381ADE22EC94228B
8F605545F9A311BDFB86A5BB2CC8851DD3E95F4828C54E7F9AF6066ABA3C30BC
14B813712A4AE20363B1F9643E6432C27B2512FBCFA9365DB2> |-
/g20 <1C60D8A8C9B7D8BE285F5CBFAA598993D0C95602AA0617ED9400F83524
C53AAED1DB83AF8EFDDF5B2C9318ED384987A220BEEB2C310163D97900ED307F
AFDB958495C7D423DFC71A582ED855F976AA65F40FECDF25934816BFA8F4C997
68E0203E9A7E4FD901FA2499C28B8E46FA3A6001BED63A75A0988BB584BAEF3E
4B770A03C8F143B3FA2E65B3602E941A054F64E61E8AC1C5EF6D7B80D68A9715
2437FA77C20B77F26E2173F4FD70E7340533B4735EADD480E3897EE2B56D29> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYN+LiberationSans-Bold /Encoding get
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
dup 19 /g19 put
dup 20 /g20 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYN+LiberationSans-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 235{/.notdef}rp]
ZQVJYN+LiberationSans-Bold nf
ZQVJYN+LiberationSans-Bold*1 [12.8281 0 0 -12.8281 0 0 ]msf
90.75 185.313 mo
(\015\016\014\003\002\017\010\020\003\005\021\010\014\020\022\023\003\011\024\007\014)
[3.5533 7.82516 4.27167 7.13243 5.00316 4.27167 7.13243 7.14536 7.13245 3.55328 10.6857 7.14534 
4.25876 7.14536 7.82516 9.2619 7.14536 7.13245 7.83807 3.5533 0 ]xsh
90.75 258.438 mo
521.25 258.438 li
521.25 259.688 li
90.75 259.688 li
cp
.666316 .595178 .580926 .416846 cmyk
f
90.75 259.688 mo
92 259.688 li
92 260.938 li
90.75 260.938 li
cp
f
520 258.438 mo
521.25 258.438 li
521.25 259.688 li
520 259.688 li
cp
.145266 .11136 .11136 0 cmyk
f
90.75 259.688 mo
521.25 259.688 li
521.25 260.938 li
90.75 260.938 li
cp
f
92 454.562 mo
520 454.562 li
520 719.5 li
92 719.5 li
cp
.0162966 .0119936 .0119936 0 cmyk
f
90.75 453.312 mo
520 453.312 li
520 454.562 li
90.75 454.562 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
520 453.312 mo
521.25 453.312 li
521.25 720 li
520 720 li
cp
f
90.75 454.562 mo
92 454.562 li
92 720 li
90.75 720 li
cp
f
101.375 541.438 mo
201.344 541.438 li
201.344 573.626 li
101.375 573.626 li
cp
.0539559 .0414435 .0369268 0 cmyk
f
201.344 541.438 mo
501.25 541.438 li
501.25 573.626 li
201.344 573.626 li
cp
f
101.375 573.625 mo
201.344 573.625 li
201.344 617.063 li
101.375 617.063 li
cp
0 0 0 0 cmyk
f
201.344 573.625 mo
501.25 573.625 li
501.25 617.063 li
201.344 617.063 li
cp
f
101.375 617.062 mo
201.344 617.062 li
201.344 649.25 li
101.375 649.25 li
cp
.0539559 .0414435 .0369268 0 cmyk
f
201.344 617.062 mo
501.25 617.062 li
501.25 649.25 li
201.344 649.25 li
cp
f
101.375 649.25 mo
201.344 649.25 li
201.344 692.688 li
101.375 692.688 li
cp
0 0 0 0 cmyk
f
201.344 649.25 mo
501.25 649.25 li
501.25 692.688 li
201.344 692.688 li
cp
f
101.375 522.062 mo
201.344 522.062 li
201.344 541.437 li
101.375 541.437 li
cp
.117006 .069337 .0465095 0 cmyk
f
101.375 522.062 mo
201.344 522.062 li
201.344 523.312 li
101.375 523.312 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 540.188 mo
201.344 540.188 li
201.344 541.438 li
102.625 541.438 li
cp
clp
101.375 540.188 mo
201.344 540.188 li
201.344 541.438 li
101.375 541.438 li
cp
f
grestore
gsave
101.375 523.312 mo
102.625 523.312 li
102.625 541.437 li
101.375 541.437 li
cp
clp
101.375 522.062 mo
102.625 522.062 li
102.625 541.437 li
101.375 541.437 li
cp
f
grestore
201.344 522.062 mo
501.25 522.062 li
501.25 541.437 li
201.344 541.437 li
cp
.117006 .069337 .0465095 0 cmyk
f
201.344 522.062 mo
501.25 522.062 li
501.25 523.312 li
201.344 523.312 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
500 523.312 mo
501.25 523.312 li
501.25 541.437 li
500 541.437 li
cp
clp
500 522.062 mo
501.25 522.062 li
501.25 541.437 li
500 541.437 li
cp
f
grestore
gsave
201.344 540.188 mo
500 540.188 li
500 541.438 li
201.344 541.438 li
cp
clp
201.344 540.188 mo
501.25 540.188 li
501.25 541.438 li
201.344 541.438 li
cp
f
grestore
101.375 541.438 mo
102.625 541.438 li
102.625 573.626 li
101.375 573.626 li
cp
f
500 541.438 mo
501.25 541.438 li
501.25 573.626 li
500 573.626 li
cp
f
101.375 573.625 mo
102.625 573.625 li
102.625 617.063 li
101.375 617.063 li
cp
f
500 573.625 mo
501.25 573.625 li
501.25 617.063 li
500 617.063 li
cp
f
101.375 617.062 mo
102.625 617.062 li
102.625 649.25 li
101.375 649.25 li
cp
f
500 617.062 mo
501.25 617.062 li
501.25 649.25 li
500 649.25 li
cp
f
101.375 649.25 mo
102.625 649.25 li
102.625 692.688 li
101.375 692.688 li
cp
f
500 649.25 mo
501.25 649.25 li
501.25 692.688 li
500 692.688 li
cp
f
gsave
72 72 mo
540 72 li
540 720 li
72 720 li
cp
clp
.65185 .579553 .566949 .366949 cmyk
true set_gvm
%ADOBeginSubsetFont: ZPCBAA+LiberationSans-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYN+LiberationSans-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g21 <1C60D8A8C9B6079F6CF7BB25D654EAB122275D3BFBF10D3B2E68C38C98
047AED46216BC5D04EC0860CEB9CD26AEEE0FFF237B2BC79DEE1E9A5EA62A1DE
98E184824549FE33E311F2BA9ED0C43DA37B28A7AF61D7B4043EAE9E64F6465D
A5BC24CBF9E026C938BC5B1C538E4B> |-
/g22 <1C60D8A8C9B6079F6CE6EE47AC01A1BB81FD0DDA72F872D43031623175
CE3BF47AB8665518EB5F87AD53876773A4FAFA203BEC201985> |-
/g23 <1C60D8A8C9B7D8BE194ECECDF1C8FA95BAB433B6010F471DFF7F885531
C236A233D343FBCBC3CFB1E30F1801E0B3B03D2515D181ACF9BB160CB12809EF
B8C390C95A0C347A68690424E8AD26B2B8B68497290C4A884631BCD4D31069B2
5656598AA243D0D197C586462CE7ED4D3960BF8566F5F3179F44538B96F0B4A9
4F8891738E453B95BBAC35F3E96053D5B5C287900FD8D69D1CD5771F46FEA5F8
EA14B30F0004D0CC394697488FA2919B10294FB674205C8D4E7337079303F415
35FB07260204E3290763D10748F1C9A7D3059DAFB8E758FA67127EE4> |-
/g24 <1C60D8A8C9B6FF86FB65A78D3EAA8081CC095187B45E60B5D6589A8E91
6AB83F8FF57E0B3EDF9CA5E237431B799F62C362F5D2A74A8692DF0B43ABC78D
C0C452536893C3C63760982D43F3A4C33B7FF04D8A3EF84AF8290259E1836A9E
2520063F4714A12FE989E3AC182D14B09786F889AD98EC5904044337D8DD3CE9
C621B4F16FA8E570D007EEB46E232319DB07302BA164DF883C6128C23FA302A3
CD3E0C393584B1FC53F5EDAA5464354A772FF196495ABC31> |-
/g25 <1C60D8A8C9B59F85E80C6C8FA605B320FDF35D23F56E1D6A0B15B07379
1227D1C2490B36A1359EA7BB4B1D5A4A1D8AAB033FF0B01E36028547C4C7A40A
B2D81BA27385C0A4BBF8B6993909FB8BCB4CD1AAC7F0BF8072565DAACE0997C6
9C4C292A496794A253BBA1716DE0B48475EB3051A68A52CA1997F3CF408B6A8E
91A5E85F07A178859D73F51B3F0E1EC4493C6B91485C61D1A2D7CC234BF016EA
52CDEDA5F5C17DC3C4E28E18C9DC1627A8358A18DB3999183979BB5F3CE38BE8
C8E4D503FB081956B37B3F02EAA2C728EA09610DC9AED4388F15407DA4FA880A
E4E6636A3735C61A4A81C5F9DD3C52F73F30D09CCDB340338EBB45BDA6C8403E
69D38F280E22C1F53F8AF927E12C4125641A49C7EAA9A81E7733EA12C3DEF0DE
AC87DD87961410B458D698> |-
/g26 <1C60D8A8C9B7D8BE194C62705CF2B1C6B0F8276E01F0132000C4982AAA
1355E30E310C1F9A491D665ED162C079DFC1D34BC9BFA15E401CAB8593CDFE60
89D0BAEEEA383212287C7E8C8D8532483969E1D84BE3A4A38C05C742C3EAC95F
ABEBCC7FE430CEBC7FC26C3CDF8F48E6F9FABCF6A25DAB4D9CB616690A748331
6693816C51D2255E53E9AF4FB6FE6A6DA55FF806D3DAD978AD778D1ECEDD0E84
8732321DA3987F4AF40BE249BE11FB38F9669542C4766F311127545F208CE971
4020CC3DEB990D230C29D07A6212685D7CE5A3908115B2C6FA000B07AB55E103
1F414024C9493087D9C10758ED0DD5D80D2B3D64E2C8AA2BC149EAB1CB2F325E
2D92BC8EAFE108FEC7710C0C080E68D384BB9F908634875F8D961390DAF57011
06EFEDCA185978DDCF7F0F4F3132DE3CD7B8> |-
/g27 <1C60D8A8C9B854D0F4508A1961F4B68A40BD0CE1175794E27D70D9CF65
4A9D1B4733C51BE3> |-
/g28 <1C60D8A8C9B7D8BE19AE646FF815FC05F355FF1F74A376445E9ED8F475
189E6AB73E2D5489C2AF4373578556772AEC8827F533C22AE7F481AEB2F601CE
F7561A025FEBA230C2EC7B032A1BB8293FB92C79217AE23E22F9F70B2A6C35D0
B4B2BDEA7988D39ECF83F30A1CF4B0D41E6266E8BCD88D8B3CA582F1657B276D
C61936D208B8A638B74DAF2B2F4B2D472610CDC90F1C2B73A30B494E1456D485
F9099286DD82EF0C4C1E12D8823F086A489D7343D79BE6AB3C63304B2675BF1D
5FCF86649053370904B45064909804569DF4F44206353E6D68F48D80D3F21E4D
1BF49C136E07BE329D964FA519667ED16EB9C2020296D4035110FF6AC173852E
01C065B6A497D38974CEC2A15B5AE2E7FD2023188F42FEC4F3F92D9D0432A233
D6593AB96ED3003469CF0C7FA810344B9CEF6824AE2795BB6C9EC4F81804B6D4
378A3CBC302FE120F723915D2133DDFAAB4D90C96DB3B69FAC8297AA39D10DBE
C9425F901C2C43EA67C32B6ACEE77D041495A2160741C81EDACA2BD2> |-
/g29 <1C60D8A8C9B81F2C3A3AAB7ED027359DC7BDF8C9A56AB3D02B0C46B80F
9213A929CB64BF214311> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYN+LiberationSans-Bold /Encoding get
dup 21 /g21 put
dup 22 /g22 put
dup 23 /g23 put
dup 24 /g24 put
dup 25 /g25 put
dup 26 /g26 put
dup 27 /g27 put
dup 28 /g28 put
dup 29 /g29 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYN+LiberationSans-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 226{/.notdef}rp]
ZQVJYN+LiberationSans-Bold nf
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
90.75 225.938 mo
(\025\007\007\005\026\016\027\030\016\005\015\031\032\007\003\031\003\016\014\033\016\034\005\006\007\010\011\011\003\011\035)
[6.79131 2.60546 2.60547 2.59599 6.80079 5.73782 5.73781 7.32739 5.73782 2.60545 2.59601 8.38101 
5.73782 2.60547 5.22987 8.37169 5.22989 5.74728 3.14169 2.59598 5.74728 5.73782 2.60547 6.79132 
2.60545 5.22987 5.22987 5.23935 5.22987 5.22987 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
109.5 246.563 mo
($\010\023\011%\003\004)
[7.12809 4.74345 2.36742 4.28204 4.75206 4.74345 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1 <1C60D8A8C9B7C12A5D2D89FD9995612409C056ADF0CB4AC83F253405D98
FD27E47287AB1895829DFF63D66D52AE3B236FC80CA1D0DD29AD21263C31874A
3157E2E150F660ED0045E154180945E96830390870FEEFF58E57CC584D57C8FF
99CD1B2FA51D6530A6F1350CEDA1BD71CBA5D61CE340C7A1CAEFFB39452E1DAD
01AE6E5F1EB44A5793E6847965C13C334C9FF> |-
/g2 <1C60D8A8C9B7C12A5DB7D629D0425EE5BBB4C258979088E954A58A21972
3088E317F50C651C5998B762EC166CFCC6E2C7A4191A984E84AF989BE0FB66ED
0CBEC4108D41FF3C90E393E0A3B961E25DBA8A8D3A364FD59959B21D8> |-
/g3 <1C60D8A8C9B7C12A52FF39722B726DC92CC789D7AD16E348ACB9E83975B
688A6A11AD3D44BB3CBA779BF44040C6DA6F7849CEC647FDFE3AC0A81D243445
F588CC247D2A213C3F86F044838F710BD091095C7601413E748A7189B242DEB6
4AC514BE14ED6B6DDC6A363FE9FD1A3EF6B2A7401B7B4084D15040FBA4E12BE3
F696B18D602574E59603B912D6140C814> |-
/g4 <1C60D8A8C9B7C12A5D67191982EA56BD5E90C741271F9BD9C1D18FA31F4
8F13CBEF2D969113B427A66251E03C27AAA045A97BBAEB23E61BAAE9EACF802> |-
/g5 <1C60D8A8C9B7C12A5DBA3549C8BAC01F690FC82F39E48E259DA785B3983
99A27E8B53A1C90E2ECB244A4D1A79D65889F23F8A461> |-
/g6 <1C60D8A8C9B7C12A52567FFA1802791B1AC549E0BA95A3996B22CF1810E
DF473444FEA7E810CC27305EFA1705467EBBF96AFF4B85FA35F9ED8575E3DC01
A5B79708396F40B36182957592D391E6196E4BF852B4E9E5F2DA970280B56554
814F88F6B6D747EBF08AF3CCE7C901C389B6BAAF08B685F16D4046A217CF5170
FC89F86> |-
/g7 <1C60D8A8C9B7C12AA4> |-
/g8 <1C60D8A8C9B7C12A52A0CC3DB1BE875DAAA4669EAB8C144DBD31D16AD4B
060A7DD3BACA7E0F762DB82EF6BA78C891729280B0E6BD08BAF764AD8FC414B3
32BCCCC434CCDA0E1DCBAB1EED775F13871447BF44BE845E08D961EF291> |-
/g9 <1C60D8A8C9B7C12A5DCDE63A1C0CD33156B1F9DB5DBEE71E38382442172
5BB0A497D4DDECD48D9E5A0C5BF4A5E56DE00CA2221D181B490AA130D1A38E44
02BC8477599C75234429EA31D92EE0922> |-
/g10 <1C60D8A8C9B7C12A52BB01344D6690E80DCB2ECF736FB1CE622F3FE7F5
1D5CC7F8BF9BEC5335FBAF23C0A7B47A3001FE020D12251E7D592D559B2653B6
8A69F780BBA07A2687BFA3B33C097FBF969756C80643FBF57C51FFC8C2C3C421
A2FEA3271F11D3DD40DC425E3CE0CBBF40377FAC782048B18AE73F63F31CD8CC
731619584C5580CB086F66FB8089B1B331> |-
/g11 <1C60D8A8C9B7C12A520491A79C1C569F85377497B31DB741FF4CAD8ED5
30904618BC207408E447D9F831F952D81F186AEA2A81B1F8212850399242A54D
AD59FDF214496CD680243F366F661E5C327C827D2454> |-
/g12 <1C60D8A8C9B7C12A52E3C354B33D47D59AC08CEFEA878DBD5DC4270CEF
47058FAA819686DCF51F51EC53C028271CE46EA77233EFCAA71B8BA2DE42A904
2E8F2CC92D40C7643B6B32D6459F> |-
/g13 <1C60D8A8C9B7C12A52F3D67644A82535B63AA674A8314A55AB0046D8EF
7F993C2F38DD19A97422575ECB8789385D67ADA271CACC07C6F8B6B3CA3110B6
E479B202B476ACEBDAEA1373912E8BDC154AB53F4845C936AEC525B2F8B44A2B
EAECC476A65D2F395489DECE5F3ACF2F6CC6F91DCD513F66C3FDA1EFD4456A91
3AF50709BAC27F691E933AD89002A9A7FC82334BDC8270D4843DD346595C87EE
A189B9878833A0077ED4B94470988D788DEE70265992A8459E6182FCBEF90BBD
4FD21830> |-
/g14 <1C60D8A8C9B7C12A1FBBD01DAE9623B51E6875AB063E4773B485404F05
C6FA5867987016F653C92228FBC7359D69C8A7747531CF3A> |-
/g15 <1C60D8A8C9B7C12A52A0CC3DB1BE875DAAA4669EAB8C144DBD31D16AD4
B060A7DD3B86477AF913A3E617B21A1836D01205579227385B3BE4FEA29DEB64
66D8267B5744DB9A5E89CDC5106AFFD158A5F193000F8392983A8AC0BD1015> |-
/g16 <1C60D8A8C9B7C12A52BAD320B0B0EBAF4E3AC282BC5CB067047E38B553
04729F309AB5058D0425F4149CABD02C9BDE00B9A86AC80843AAC77774527B04
F67E1719EBA614B54A6526728BF8F8CBCA19D8901E5FD628DB4A54E20369AD36
6AB3EB11F61B3CA2CE0EE58C904190E25D77A27F011F9011296450FF99EBB970
65E4109F72A057BF43> |-
/g17 <1C60D8A8C9B7C12A52D3AB6BF96BB3277C8468E21A28C02E9ADCBDEC3F
0B4232E9443DAB1E65055879718AC1FED58C710159FECF8B0A64FFFCE4FF5641
04357ADF1E54F4E4B015F456EB1EC95F4499B6740F604AF4830F8F5917B71A49
2FC0FFC438FB65CF4A2247B6E90D30590F48B4B94625AC69BC4E7AB6745A4851
CF17296D43C4042E0FCBA4FAF848F2A17926133D7CE89F4398A497B8D9A18221
34706950A92C4FD6B705A6AC2F2189E50A7AD5D8819EA75F0D19A2BA88943226> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 238{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
90.75 287.719 mo
(\001\002\003\004\005\006\007\005\010\011\012\013\014\015\006\012\007)
[6.6879 6.6879 6.6879 6.6879 6.6879 6.6879 6.67671 6.6879 6.6879 6.6879 6.6879 6.68791 
6.6879 6.6879 6.68791 6.6879 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ZAYAAA+DejaVuLGCSansMono-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYP+DejaVuLGCSansMono-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1 <1C60D8A8C9B7C12A1FBBC1133CF21C67F27875F3253EFA1EFDF01821412
CBEBF331F36396CD10A3E2DED131C51AF76EDBC661059> |-
/g2 <1C60D8A8C9B7C12A52EF102ABC5A37390D82A27A032E707CE2E364D76CE
702CD4A13A90E155D219448B46C413AE0DC403ECAD6561E0F09CEFBE7CF779D5
8A9B7E109C9B06E8234A152F19FED42D0A740BE7A6847371BC885837FE480DD7
578DD467ABD3C8481A7ECFCAC97007378806F2EE8723981FDC9B8E59DD6171A2
8DD66C4EB0F862D8758041DF7D23BC2E4DA0B5BE290EA49E4973D2362B44F4DF
7D42F2887569FA9EC57B6C8C09BA2B2B3878AD645> |-
/g3 <1C60D8A8C9B7C12A5DFD2D7DC92F054E9BCD725CBDC2053EB8120AFCB2A
C3D5D400F07D33BAC7196C4AD36DE5EC8368131668D373A425DD05712CFC25A7
651AF395A43ECA2A8D0B53CFE33DA7D309AA33F8C> |-
/g4 <1C60D8A8C9B7C12A52567FC4973F7291E589B09D6877C71CD4FA51B2C50
FF58020CACC3E2F8643F8ED53D19EAB09DE8D31D5F69137F9CDA02FD0DCEBA47
CD20134FA6B0C454F235831913F6A700150F89FBE897FD48218140AEF109DE65
20F8DC655C993E3F7260AD2A1250A7CA06779E855E60924C22B710FAD9F0D12B
1BD4E7582> |-
/g5 <1C60D8A8C9B7C12A52BB01D8830BED69427B3D1BB4F2F2DEF18109A1546
066931A446B8188943C4F2C868A966C6B4CAAEB8D0289EC1ECA4F982547D4556
A94DE2663EB9B9BDE488E178B164F14F8C9CB4D7BE096E6E6C5C5FCAA1AD6FD3
C9F> |-
/g6 <1C60D8A8C9B7C12A524B511CA544977C67267D7BB0890564FB49B6234E5
41A9944917A125E3181AA1B9237BB9C9B310630FCF3A8B282665B5901F7A697B
489782D40A3EF7F6C55A29397D065F924AD7B9BADA99272B8165118E87DCE1C8
55549ED9FB4A053A088842877E657D89A77D155D8D45283726D892BD9FF8939B
5F62CC91D1365E221A8DA> |-
/g7 <1C60D8A8C9B7C12A5262C209EF24D2F30DE2240F24B515288D0D22BAFD9
E477AE60FAC568636D8777D4788FF9B3A4305969E95FEAD4B6A0B5EC9089075E
4AC66B73F59EDCDDD50B71C2F3F36630EF9CAAA32C047AC233459C608119CEE6
3CD4FE67EE7F1EAE059C73F094EC7822879AD7746EBACCD6236F337606AD558F
2754522578CDCEE66518F6B4F> |-
/g8 <1C60D8A8C9B7C12A52D27D982F9B9F545796ED1AEA6628E6BAD1AC41123
76640F24A12BC47762945BD0E5CF1130B0E624A87F5CF0A6BA307EB8C5826365
7DFFDEBE7E5D2787AD348E68A2064E8C9920B38FF3C1C5E5A50D52E82BCE2D0F
751C5E099DB83F315E2269AC4625DF2A2C053B11BC73F97B254469F53BE3EC4F
7A4D82733B4305E118476A763CA87F9154542B2DE84E3251B8D3B5320CE11250
6BEE958D2AC4CC5FB21A23B83A5D4A27EF2BD25CED55286A112BD271A972A3A0
BC4> |-
/g9 <1C60D8A8C9B7C12A5DA1149D61C52872AD48B6218FE1106C55E3C3E836F
36998E49A786830C4944EF79219A5A7427942B06ADC5428F210E117C7694E231
A976AF19F91BEE1B76AD19B913AD7C6E38BCD1AE4B18F8C5200E96594AF3BCA> |-
/g10 <1C60D8A8C9B7C12A5DD6A12792AA650574DA73BA91D066CE443AECA880
0719CCACAA22B3305179D32E3B4EDEE24D25AA82F3A5021600DC233B6B0C1E0D
F26CF7C68D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYP+DejaVuLGCSansMono-Bold /Encoding get
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYP+DejaVuLGCSansMono-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 245{/.notdef}rp]
ZQVJYP+DejaVuLGCSansMono-Bold nf
ZQVJYP+DejaVuLGCSansMono-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
204.433 287.719 mo
(\001\002\003\004\005\006\007\010\011\012\003)
[6.6879 6.67671 6.6879 6.68791 6.6879 6.6879 6.6879 6.6879 6.6879 6.6879 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g40 <1C60D8A8C9B854D0F4987AC09C882B70B3EB33FED71359BD81E93B3EA1
A085BF8E0714953577BCDA7B8C20C394115CF0FB88FEA99439956BE2C6E01CD8
4BD5DA5BE6D96397B8FD130AAC25EC124DE8FBC7BB27907EBB8D0F5A078083C9
668CE240102D051C994AC8F8529529D69DCB214EF997955BF813D9DC5522> |-
/g41 <1C60D8A8C9B7EF322BAC92C9867D69FF742C4A772254DC57D01EF6B16E
A531ABEFD35E48588B73CB9908E6A2F85E7CBB24DBF8B44A01CB0911EF7A7F6A
917EDC73F306CC562C15CCE9C1CBBA5C8967B0BFF24C1F108F078A139A24FCEF
873BF825965429B3B81A1E0109CD5228FC1A748BD4B8137272123D2142F67BB6
F04544F149E3CD4B7478BC205E0A10BB01133E3E2398E03792B56D98D1C6D444
065890CE9214C485F78FFF5B947C10E7C9CA62E15B1715D3CE324D5F9F52C1BC
08D9C53AF93508AFA8F7F25195F89226C74122D4B59BD71F4B131E064B091E57
5125A7CEF4EBDDC947C1C5E16BB189F871F7173B9974F1B0B357E8137EBBCBFD
230375779B4AFF749D321E33C92DEB7A2B6E80C9ADFC06FCF96B70F6AD11C9AA
0C1A72CF190C16> |-
/g42 <1C60D8A8C9B7EF3224174F25B60169672CEDF5C672AE16BF5482E834FC
4DC1D6C0B29C7F286C71B816D4475779CB45DB905201EF82D6160B88D5E69306
E24C5BAA5BBD215661150567A26DB4D6C1D1E6EFF6C22054286DB10755E0C771
F70FED30FD4B6D52170B761E0BDDA2C954777EF5ADE4639849BA3306B5C0274F
C8C4480893F365F4D6FC5D8DA628AFB35E73E5F1861DE5CF4DED62FA0DC2B848
5913AA23EC4B7BA6D9C1674066FF6707B8B45272BEB6208BBB8574DB51F30D6D
9D5F678B662A08E948CD1157E586715793C9BD6679B3F133BC20CE7484A9BA81
C18948EFA66E743E284CB2A5AEC7A7D16FFCCE673F105C01C041D25DB3406B81
9DA0DB72D2BDDEEADBFA75322B6F03F5C6057F> |-
/g43 <1C60D8A8C9B854D0EB073C2DC676DF55181A9A4090694B789898E1FC42
B73D3705A613EB89509C2FC69D6F8729358661D0F5A709B2FEF38B607C2B3C93
A0EA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 40 /g40 put
dup 41 /g41 put
dup 42 /g42 put
dup 43 /g43 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 212{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
90.75 311.328 mo
(\020%\003\035\004\003\016 \015\023\035\034\(\035\010\035\032\010\023\011%\035\034\022\003\004\010\023\005\034\026')
[5.2136 4.74345 4.75206 2.36742 2.84604 4.74345 4.28204 4.75206 1.90602 2.36742 2.36743 4.74345 
2.36742 2.37604 4.74344 2.36743 7.12808 4.74347 2.36742 4.28204 4.75206 2.36743 4.75204 4.74347 
4.75204 2.84605 4.74345 2.36742 1.90602 4.75206 4.74345 0 ]xsh
90.75 331.125 mo
(\020%\005\016\035\005\026\023\003\004\(\010\011\003\035\011\034\026\023\010\005\026\016\035\) \003\004!\035\032\003\023%\034\024\016\035 \016\003\024\035\023\034\035\024\003\023\003\004\032\005\026\003\035\023%\003\035\004\003\016 \015\023\016\035\034\(\035\010\035\032\010\023\011%\035\010\013\010\005\026\016\023\035\010\035\004\003\013 \015\010\004\035\003\027\022\004\003\016\016\005\034\026'\035\020%\003)
[5.2136 4.74345 1.90601 4.28204 2.36742 1.90601 4.75206 2.36742 4.74345 2.84605 2.36742 4.75206 
4.28204 4.74345 2.36743 4.28204 4.75206 4.74345 2.36742 4.75208 1.90601 4.75206 4.27344 2.36742 
4.75208 4.75204 4.74347 2.84604 4.28204 2.36743 7.12808 4.74345 2.36742 4.75206 4.74345 4.75206 
4.28204 2.36743 4.75206 4.28204 4.74345 4.75206 2.36743 2.36743 4.74344 2.37601 4.74347 4.75208 
2.3674 4.74344 2.84607 7.12808 1.90604 4.74344 4.75204 2.36743 2.36743 4.75208 4.74344 2.3674 
2.84607 4.74347 4.28204 4.75204 1.90601 2.36743 4.28204 2.36743 4.74344 2.37604 2.36743 4.74344 
2.36743 7.12808 4.74344 2.37604 4.27344 4.75208 2.3674 4.75208 4.74344 4.75208 1.90601 4.74347 
4.28204 2.3674 2.36743 4.75208 2.3674 2.84607 4.74344 4.75208 4.75204 1.8974 4.75208 2.84604 
2.36743 4.74344 4.28204 4.75208 2.84604 4.74347 4.28204 4.28204 1.90601 4.75204 4.74347 2.36743 
2.3674 5.21362 4.75201 0 ]xsh
90.75 343.625 mo
(\032\010\023\011%\035*\034 \026\024\010\004\005\003\016+\035\013\004\034 \022\016\035\010\026\024\035\013\004\034 \022\035*\034 \026\024\010\004\005\003\016\035\011\010\026\035*\003\035\016\003\003\026\035* \023\035\026\034\023\035\032\034\024\005\(\005\003\024\035\023%\004\034 \013%\035\010\035)
[7.12809 4.74345 2.36742 4.28204 4.75206 2.36742 4.74345 4.75206 4.75205 4.74347 4.75204 4.74345 
2.84605 1.90601 4.75208 4.28204 2.36742 2.36742 4.74347 2.84604 4.75206 4.74345 4.75206 4.28204 
2.36742 4.74345 4.75206 4.75208 2.3674 4.74347 2.84604 4.75206 4.74345 4.75206 2.36742 4.74345 
4.75206 4.75208 4.74344 4.75204 4.74347 2.84607 1.90601 4.75204 4.28207 2.3674 4.28204 4.74344 
4.75208 2.36743 4.74344 4.75204 2.36743 4.28204 4.75208 4.74347 4.75204 2.3674 4.74347 4.75208 
2.36743 2.3674 4.75204 4.74347 2.36743 2.36743 7.12808 4.75204 4.74347 1.90601 2.36743 1.90601 
4.75208 4.74344 2.36743 2.3674 4.75208 2.84604 4.74347 4.75204 4.75208 4.74344 2.36743 4.75204 
0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
428.031 343.625 mo
(\016\015\011\006\017\020\012\021\002\004\011)
[6.17056 6.17053 6.17056 6.17053 6.17056 6.17056 6.17053 6.17056 6.17056 6.17053 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
495.922 343.625 mo
(')sh
.65185 .579553 .566949 .366949 cmyk
true set_gvm
%ADOBeginSubsetFont: ZPCBAA+LiberationSans-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYN+LiberationSans-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g30 <1C60D8A8C9B64EDFFB87FE124573BAA3EF4BAF5C3E120BF755F9E2A285
ACC250C3B584B771713DBCE57B0A3F4A77838C7F295030B143AEC32062B7160A
8E1B1C1177594546C545EE284807CCC5C724E90B4378623197CB7C7C9961B402
D2AED00D3426FF4F89CC193828FD91D81B3980E599C32E87483B865B2C97A1F3
D954278466B17014CDA729BA158FBAEDA0773B444BB2812E8637A610C45D2D0F
6A9F0436AE9F3C9AC2934E9573ACED388AAFB88D7C811234608B155CDF042183
85BFC256C54F54D3D352C90D882FBE8A182F0A9C5DC0882711046C4700D2DAF3
E6B62993EDB1E26ECB2EEF397EB13E013CE8715393C032A004F577F309A1AC59
66835EBF0D067DD51CECAC8576C063D3A38D61B67FC8925E25BE0FFA3154CAA4
1C6F82ADAC665D492D2DA131F720D2BB742EC0F6C3DF8949C1E2AC8835F8B495
F1C51C55A61CD4BDF9FF657A814EFD4D27B09151CF6A43B38067905DA78B85AD
8F8AFA6C062F97989BB4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYN+LiberationSans-Bold /Encoding get
dup 30 /g30 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYN+LiberationSans-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 225{/.notdef}rp]
ZQVJYN+LiberationSans-Bold nf
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
90.75 364.25 mo
(\036\033\016\020\003\035)
[6.27404 2.59599 5.7473 5.22987 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g44 <1C60D8A8C9B7EF3224FEEDDC403E6D156E32DC83A37AE244908DBA034E
63F1CA4ADC97182F0B4FA688A3E0> |-
/g45 <1C60D8A8C9B7EF3224F67F4F42C9F043559FEE7B0BBCC7E3B8FCA3A51A
D923D3D54F3DBD3CA24E77B25EB86463DE084078F9488E4EEA9F44F49D094135
C55029F1B4EC12BFF4E9A08F24D3E4470B7EF6CC7DD5EDDC41A7F439AB3035E1
14D382434C7731A6DDB07E29FDCBBCFFB9B713DEB73D68BB5B9DD8AE48FA4122
8307BFF796A0BCBCA0F27EB4D5322564357D1D6DF1C7F4A90245D0A5CCB7ADBC
47FD61AAAB0504B5B9FAD64B560BC9C81F8E405159E112A84B610E082ED23FE8
A4EF7F6EFF7EF3B590C881F2BE9260E88D00FCBDA785056A73135F00E5FB4A0D
39F81EFB2ED66402653E85C3FF3E5569A9AD14A46BAA63FA8B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 44 /g44 put
dup 45 /g45 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 210{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
109.5 384.875 mo
(,'-)
[4.75206 2.36742 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
90.75 405.5 mo
(\036\003\003\005\025\007\011\027\035)
[6.27404 5.22987 5.22987 2.60547 6.79131 2.60546 5.22987 5.7473 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
109.5 427.375 mo
(\016\015\011\006\017\012\013)
[6.17055 6.17056 6.17056 6.17055 6.17055 6.17056 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: ZPCBAA+LiberationSans-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYN+LiberationSans-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g31 <1C60D8A8C9B7D8BE193A0011D87E86F4E7BD4D49EFC3093CE88B2EC77B
46554F34FCF156434BA6270878B2BAB684AE89F81AECEB1F26139EBC8B41CAB0
12572D07B8EC3118AA81DF766AD5ED8362A818B7FEC27D3E06C4E2C47D234240
37C4D48F0D07A00EBCADCC4AA9862881BC2A13B758838CDF6D75BE4BAD2ED68C
5EF10DFA5D503A594A2689AD0F8097F0CF31369C05344329E36AB26AEA3A4166
09023AE488D3EB2D33F068AE60E097B88270F31601C9D5E8C350CF3EB314BC5E
DCB2A02A2F69744E2B4BF6B35C608C38151CA28660B114648E8ABBD9AECDF38C
E2130C1E058801D542B128E075C343C299503C883607001207FDBFDB06A2DE61
4F302FAF986421000A8F19A48F78E17B80F4CCB2E3BA88993B243760283894E2
F2D470C2> |-
/g32 <1C60D8A8C9B7EF3224CB249745CF63AFB92978BDAEE41492765515D366
EC6D32C84AAE5A83E9EF6A6A7D8A2B13E26548463B0E64F167E403C8422CE2D3
4DF80058AA243B27E6590B0BF1833AFDE56E2746AFC796BBE98C27412E5C1A3E
904F1B50556FB6AF3C1099D866A71F0009C9A70259905DAE39F4D98A5D67C705
AB24721E7EB53C8271F310851A0B861E4CB7CFBCE46B57D31429B5C961FD66B3
4E283AC634AB541593247CBDDDA3961B38D448720B5FDC8B2DD4048313DC939E
BCBD9B4D6FEE9C1EC40D7F7A659633783EFC> |-
/g33 <1C60D8A8C9B7D8BE1963DD5F2D28E048769438798116DB5CB3614099A3
753F09534F5D67> |-
/g34 <1C60D8A8C9B6079F6C9A4882FEE10AAF52B7E7FABE77DFB1C63168AE32
A815C0EDF996784D968BB8D75F5E494B8AFE2870F618A40B641048DF53C99F2D
B23D1E52014E5EC18BB807769253E08F85633682A90392C0006ADE966D2CC203
60816960E587BD3D00A090FD3810926EC59B43E3EDFE34162AB01EFF4B0EC6AD
2E57B8445115426C98724EA011217348BB26E2DA023917B351> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYN+LiberationSans-Bold /Encoding get
dup 31 /g31 put
dup 32 /g32 put
dup 33 /g33 put
dup 34 /g34 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYN+LiberationSans-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 221{/.notdef}rp]
ZQVJYN+LiberationSans-Bold nf
ZQVJYN+LiberationSans-Bold*1 [11.9688 0 0 -11.9688 0 0 ]msf
101.375 479.875 mo
(\021\003\014\022\027\037\005\036\024\031\031\010\002 )
[9.96988 6.65462 3.9855 7.30094 7.30095 7.30095 3.31525 7.97119 7.30095 10.6403 10.6403 6.65462 
4.65593 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [8.54688 0 0 -8.54688 0 0 ]msf
109.188 534.875 mo
(\021\027\037\033\017\033\003\002\005\010\016\037\005! \032\003\021\003\014\022\027\037\005\010\016\037\005"\003\011\020\002\033\032\014\033\027\016)
[7.12809 5.20499 5.21359 2.36743 2.84604 2.36743 4.75206 3.3248 2.36742 4.74345 5.21359 5.21361 
2.36742 4.58969 4.74347 5.21359 30.9824 7.12808 4.74347 2.84604 5.21359 5.21359 5.205 2.36742 
4.75206 5.21361 5.21359 2.36743 6.17084 4.74344 4.75208 4.74347 3.33337 2.36743 5.20502 2.84601 
2.36743 5.21362 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
109.188 554.25 mo
(\005\010\011)
[6.17055 6.17056 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: ZAYAAA+DejaVuLGCSansMono-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYP+DejaVuLGCSansMono-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g11 <1C60D8A8C9B7C12A52BB01D8830BED69427B3D1BB4F2F2DEF18109A154
6066931A44415B6EB53685369A8B2EBCB0326713A849EF0008954D7716D01825
E18CA48FC6DD2ACDC4CDA1183F4D2B03EEEC33958306C523452AB32EDAE87754
36> |-
/g12 <1C60D8A8C9B7C12A5D72462D6D20D18F9E127329F94084D9B45461D4F7
447F465F15B7EBD2939F878B4F0FF0E5032C894709CB0A217CB33C93C19EF12C
080730112C24F8B14DC33AD720AA37679686A39B03BF0BA829574ABC8856AA3D
5BAF4F3D2F5692C2F25E083128C2E9B4561BDA9C09C5F98AD496212AFCC67F17
081EFF6AD5ED3EE990D93A84F9E147F4AA3C6AA34032> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYP+DejaVuLGCSansMono-Bold /Encoding get
dup 11 /g11 put
dup 12 /g12 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYP+DejaVuLGCSansMono-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 243{/.notdef}rp]
ZQVJYP+DejaVuLGCSansMono-Bold nf
ZQVJYP+DejaVuLGCSansMono-Bold*1 [10.25 0 0 -10.25 0 0 ]msf
207.906 554.25 mo
(\007\013\014)
[6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g18 <1C60D8A8C9B7C12A5D5D29F8BAD53FF6F1FA2DD77CB78CE7980F03243C
DAC9137D408148123462F78A63FB680334A9F5EC8968043416C39A9D5E2349C0
47E7EB064D50F62EF033C308> |-
/g19 <1C60D8A8C9B7C12A5D34387DC1987E441322A148943B481C01C8A206E5
3978870B1F1818B5E556B70E4948168BAD9B2A4B116B54E002CC248F8B0F5466
EFFCA8B527FCDCF5CFB9BC576F97> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 18 /g18 put
dup 19 /g19 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 236{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
226.422 554.25 mo
(\022\023)
[6.17055 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g46 <1C60D8A8C9B6079F6C833295D337ECAA5C45989A5DFECED77EDAA64C32
B3784A412FA62897CB0FD6EE185B6247A9D9930713FE8C1319726928E85A84A3
A36A758C91A0FDBADE9EC1918C022AFF8B24347154962BB78C4136A99C6DDA82
ED7336B055F2B59D72B250A79D9E98432FE297A3D30B96E59836A1A610E56F50
562C138C62ABE167EE12BEBEDC391EB73F26F8084007517E363929B7D11807AD
57E1A03018A1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 46 /g46 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 209{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
207.906 568.313 mo
(.\003\023 \004\026\016\035\023%\003\035\034\(\(\016\003\023\035\010\(\023\003\004\035\023%\003\035\015\010\016\023\035\011%\010\004\010\011\023\003\004\035\032\010\023\011%\003\024')
[6.17084 4.75208 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.74344 2.21353 2.36743 4.28204 4.75208 2.3674 2.36743 4.74344 2.36743 2.37604 4.74347 2.84604 
2.3674 2.36743 4.75208 4.74344 2.36743 1.90601 4.75204 4.28207 2.3674 2.36743 4.28204 4.74347 
4.75204 2.84604 4.74347 4.28204 2.36743 4.75204 2.83743 2.36743 7.12808 4.75208 2.3674 4.28204 
4.74347 4.75208 4.74344 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
109.188 586.438 mo
(\005\010\011)
[6.17055 6.17056 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYP+DejaVuLGCSansMono-Bold*1 [10.25 0 0 -10.25 0 0 ]msf
207.906 586.438 mo
(\007\013\014)
[6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g20 <1C60D8A8C9B7C12A52DA0F569B55AB57D606902D7C10404C55678ACFCE
F6D4B07FDF6C5785BCB8585AEDCD8DB8FBEDD0B1400F4DB8D02204A18851EE77
481B9C776D6656B6514F9D43E1249E97D9A3511DDDC49FC0904BF530B7E02F44
E482089E7E7EC95687F9BD9D37370E14D6578C89A23B0D21007656E2F8A344AF
F62DD4234CFDB0CCD26B7CC3BAD7C9312DFA2A8B55083B092CEAA2E8D2ED3FB6
98437BE7126F7F82D68D019F396A2A2CC75E60359174DC555FE1582C01EAEA2A
261A0C3F9403A17ABF0C> |-
/g21 <1C60D8A8C9B7C12A52E52FF5B8D4BCB1233937B522E86495F560E3518B
46527DBA02D00E5E858DBA7201087DF2F0C4BBE4D62F41F97D09D31B689DA505
73B02C439A9AED4BF714A7D7C6730C839749AA7E941502932326365383A08A74
E6A6F2A4A78F49A96A46206221FAF232887861035BADDDE540B3D5D7841E9BB8
8E54452CD3F693> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 20 /g20 put
dup 21 /g21 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 234{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
226.422 586.438 mo
(\022\005\010\011\007\024\013\025\002\001\023)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 6.17053 6.17056 6.17056 6.17053 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
207.906 600.5 mo
(.\003\023 \004\026\016\035\023%\003\035\034\(\(\016\003\023\035\010\(\023\003\004\035\023%\003\035\015\010\016\023\035\011%\010\004\010\011\023\003\004\035\034\(\035\023%\003\035\016 *\016\003\) \003\026\011\003\035\011\010\022\023 \004\003\024\035*!)
[6.17084 4.75208 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.74344 2.21353 2.36743 4.28204 4.75208 2.3674 2.36743 4.74344 2.36743 2.37604 4.74347 2.84604 
2.3674 2.36743 4.75208 4.74344 2.36743 1.90601 4.75204 4.28207 2.3674 2.36743 4.28204 4.74347 
4.75204 2.84604 4.74347 4.28204 2.36743 4.75204 2.83743 2.36743 4.75208 2.3674 2.36743 2.3674 
4.75208 4.74347 2.36743 4.28204 4.75204 4.75204 4.28204 4.74347 4.75208 4.74344 4.75204 4.75208 
4.27344 4.75208 2.3674 4.28204 4.75204 4.74347 2.36743 4.75208 2.84604 4.74344 4.75208 2.3674 
4.74347 0 ]xsh
207.906 611.75 mo
(\023%\003\035\013\005\002\003\026\035\013\004\034 \022\035\024 \004\005\026\013\035\023%\005\016\035\032\010\023\011%')
[2.36742 4.75206 4.74345 2.36743 4.75206 1.90601 4.28204 4.74347 4.75204 2.36743 4.75206 2.83743 
4.75206 4.74347 4.75204 2.36743 4.75208 4.74344 2.84604 1.90601 4.75208 4.74344 2.36743 2.36743 
4.75204 1.90601 4.28204 2.36743 7.11951 4.75204 2.36743 4.28204 4.74344 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: ZAYAAA+DejaVuLGCSansMono-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYP+DejaVuLGCSansMono-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g13 <1C60D8A8C9B7C12A5D7FCD8AEDBEA0C1D4350C9D1D863083292277330D
A18CF1E82BBD5CAC471BAA87F1F6995284F17FE612F0DE83B0417014304BAE5F
C1B826D174BAE822A3FD53C1396713FF425EE876800BD8F7D4DE2C8BA95F1D06
51513FFFC561DE97D6F52317A507706E6DA1104BB5BCEF5E099F2C3D93B2295F
C11E9D835FAD32BD1507C52AAEFA41F740AFE9B1B85925870E7FF3CAD5773744
E5EAB05AAB54E90C09F323931E388784FA2B93B3113CC86B7FE68559E92E7783
95F9D1> |-
/g14 <1C60D8A8C9B7C12A520AB8BE12423D92F2DB6FBECF7DCDA58B615EC983
BA8402D3A830FAD46323E85BDB5300CAB2995AB11582C0CF7FC2DA88A6D9A940
F3212A76C0AB8D0308B0A7FE96C1BB7DF53F7163A2E0937EC33187B49DBBABC6
F5F84EF1E7E8> |-
/g15 <1C60D8A8C9B7C12A5DAB4DCE12F4B6785D4476187B0E069259CDCA3BCB
B3C26E21085EB9A308C1EB47EC6A0BE2D25820EF267B042A778801> |-
/g16 <1C60D8A8C9B7C12A52CC5947D3AC8458F1496DED7E48CE02A186C555F9
C760A420B30C299DBC6D05D3227F785BC14A3E139D326697C7D9647774A59BD0
442CFDD67A396228A82FD00BB707EE2DB3A277034F25F08211E8BA2C520A496B
D66FE1C296EED9BEE9882DCEF4A6832C245E33511CC87EE113C06CF31C915CDA
5AB6A9A259BCBF963825F7A8B304141F510B1AED455654AD18B2077C64F54D90
9B4ACAC35253E866E8BD84643DAAE68AD8EFCB8A4505F4C94DCC87A0DF2F1003
A4BE5B122C6DCBF6103B> |-
/g17 <1C60D8A8C9B7C12A52DECA5A93F466AEC5FDDF8BE2693EEF7E14F73DF8
F471D2DA7324407CF22B7B6C776AF65CA1AA31259E48CEAC28300278C31EB29D
6FB41B84EDEDA5F232B7070627022BD5A8A37ACE48E7A0A8144DE8972F8AA48D
3DC7ECEE6AF0F9FB3040C56EF6398BA2D605C00FE3EDB000B283863AE3F327FC
BD38AE21BD6D3AD6> |-
/g18 <1C60D8A8C9B7C12A5D02FBF0F094F4A39174E6048FBB73E7454F9869FF
2E210F816369D0E531DE3E219A59F4C08D9B5E066B5F8BE5B49D045A37CAA21E
E5C55B731F9C7013D415CD436E78906191DF6169B1C15EBF291DE7ADA0900FB5
BC53D9294F1D5AFA09EC1408F5FDDC1C9354083519B78B0128AB9B40E184CA7B
2991E80518E8EFFCFBA2814F451AB67816B82C9664> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYP+DejaVuLGCSansMono-Bold /Encoding get
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYP+DejaVuLGCSansMono-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 237{/.notdef}rp]
ZQVJYP+DejaVuLGCSansMono-Bold nf
ZQVJYP+DejaVuLGCSansMono-Bold*1 [10.25 0 0 -10.25 0 0 ]msf
109.188 629.875 mo
(\015\003\016\017\013\020\020\016\021\011\022)
[6.17055 6.17056 6.17056 6.17055 6.17055 67.8653 6.17055 6.17055 6.17055 6.17056 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
238.766 629.875 mo
(\022\023)
[6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
207.906 643.938 mo
(.\003\023 \004\026\016\035\023%\003\035\005\026\022 \023\035\016 *\016\003\) \003\026\011\003\035\032\010\023\011%\003\024\035*!\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%')
[6.17084 4.75208 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
1.90601 4.74347 4.75204 4.74347 2.37601 2.36743 4.27344 4.75208 4.75204 4.28204 4.74344 4.75208 
4.74347 4.75204 4.75204 4.28207 4.74344 2.36743 7.12808 4.74344 2.37604 4.27344 4.75208 4.75208 
4.74344 2.3674 4.75208 4.28204 2.36743 2.36743 4.75204 4.74344 2.36743 4.75208 2.83743 4.75204 
4.28204 1.90604 4.74344 4.75208 4.28204 2.36743 7.12808 4.74344 2.36743 4.28204 4.75208 0 
]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYP+DejaVuLGCSansMono-Bold*1 [10.25 0 0 -10.25 0 0 ]msf
109.188 662.063 mo
(\015\003\016\017\013\020\020\016\021\011\022)
[6.17055 6.17056 6.17056 6.17055 6.17055 67.8653 6.17055 6.17055 6.17055 6.17056 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
238.766 662.063 mo
(\022\005\010\011\007\024\013\025\002\001\023)
[6.17055 6.17055 6.17056 6.17053 6.17056 6.17056 6.17053 6.17056 6.17056 6.17053 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
207.906 676.125 mo
(.\003\023 \004\026\016\035\023%\003\035\005\026\022 \023\035\016 *\016\003\) \003\026\011\003\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\005\002\003\026\035\013\004\034 \022\035\024 \004\005\026\013\035\023%\003)
[6.17084 4.75208 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
1.90601 4.74347 4.75204 4.74347 2.37601 2.36743 4.27344 4.75208 4.75204 4.28204 4.74344 4.75208 
4.74347 4.75204 4.75204 4.28207 4.74344 2.36743 4.28204 4.75208 4.74344 2.3674 4.75208 2.84607 
4.74344 4.75204 2.36743 4.75208 4.28204 2.36743 2.3674 4.74344 4.75208 2.36743 4.74344 1.90604 
4.28204 4.75204 4.74344 2.37604 4.74347 2.84604 4.74344 4.75208 4.75208 2.3674 4.74344 4.75208 
2.84607 1.8974 4.75204 4.75204 2.36743 2.36743 4.74347 0 ]xsh
207.906 687.375 mo
(\022\004\003\002\005\034 \016\035\032\010\023\011%\035\034\022\003\004\010\023\005\034\026')
[4.75206 2.83743 4.75206 4.28204 1.90602 4.74345 4.75206 4.28204 2.36742 7.1281 4.74345 2.36743 
4.28204 4.75204 2.36743 4.74344 4.75208 4.75208 2.83743 4.75204 2.36743 1.90601 4.74347 4.75204 
0 ]xsh
101.375 497.688 mo
144 497.688 li
144 522.063 li
101.375 522.063 li
cp
gsave
grestore
/198795660.0 
<<
/ID /198795660.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 47 28 ] 
/XStep 1573 
/YStep 1573 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
47 0 li
47 28 li
0 28 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[47 0 0 -28 0 792 ]ct
snap_to_device
<<
/T 1
/W 47 
/H 28 
/M[47 0 0 -28 0 28 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J,fQL5d52p#D>EP:q1$o(BT1SU!Yiq:^R@:"T`"ejE<[.O@Wn[!4Z>l$O)-5;MeYU;_"),AQ%3W`a(9a
LP*Cq5Vd[M##HTG\d]:+5GM+iZg&hT%M#E>_=\_3<i8ot<Pd4#`H%YVK7lQ7$QYDN@^6+g<f:Ohc#:$n
m<3/&:aQh_?>gXLjmr.o^L/_i/$Mn]'uU81!F/Xf)2lPqYunYV:FhLI"U"l,aBUNncKI)fr:Z1;V:4\9
RN0t$?*DmsG$@,,ed`c4#PVG^hY20'her3//e7o,#8(uE6692aQd=gbH(=;h/$%"]FG(iUkBFVsn9B=e
3&mh\kOa(K?GC-]%P.=%IU>=;fBr<bMgo*KkP+oS^^pl3(ks2e$Nn2k6jWr]0Ott%_=27U"!HQiBa[8s
^hF7q@@TIj6kJuJ%)`_<7116sZrA!`J[APr`Y!<$(rgQ[AfJ_:EXj&o1$!X#a:\o3*(SEkLEaf[1kQi>
bh."XaqB)s.EYPUG:1P=]V-q";T-$m+Q;\**XB"sbqi&"5^>4]P@ViqbgQiD*s^8bkrVX][-p0(;lo4J
cP,sM+!BP@%7AMW9bg+EP\fGEdM'k15gQe("\DO4/K7F5PjJoS;q2=F+.s_~>
/LZWDecode filter
<~J,fQLU1pk*I=so4E2Z/Mq[81s@PJ.Y1*h3t5p4P,<*C:RK?#/+)!j^E%gSV"7^Gds>q_R=AlC^H4J$MY
)N>BY<:J?tS^6KK$1XmF4eYWLdaOo<=DKce%94=;6<QOQ<@[ZFSRS9rUmdt]doid)CpMa]<dQEef5.hJ
Xu?/oRMKhS)ia"/IH]L9^#(Kq")\JBDSoiM\%H.\&9,9%1.M2-="TZ[Ab.p@c9j`&3D,;:/LHN(Ema,/
)N?YU=/X[9FiOUCnE+aOmIshEhWJmkhs\$Z/dD&i[5o>=4Hm6)S'0scqHV=48"IrjF(#<;_<8Men+_7c
h\Udak48<F&@:'Rp$MI"rZ<OqbMVseHTs`Ee<2GGU.H=)s1i<D!rX:;nGYX<:g=_>6"Bg=#XXW;*=K`G
Hm].BA,uZp_pFW2&]?C<8J8rR*).*`d/jkF7M1I^(rh\kB,\ceXD](JELU]/OHKVL+ikoSM]p0)"HOg!
Z4)F385_j+KFjq6$:7A5\IBcVEm1pD9*?fb/4e50[k^V)\e%4?j>>[Oc4c/u3R3hW(.6C]aUpY]PJm2Z
cVs315YlIUC.-G`5nuf8KLlnIdBlms7+-0o(J#]kGn`]rFQjT:<##Qq;,d,[92O*endn;'UgY-Ae^]@X
=B7;]Biij8c"1-],[qQrOb@k.>`mSPLLAcc-')HeKOn4jf!WJ8?.sH*WF/g#m?:p[[U$L^>LmYtAQ\[)
LN?JHh8*SD+9~>
/LZWDecode filter
<~J,fQM"KPDZnp*>?mhf:R'+9Q3+\sLs4t.(g6f:d31eJo*LIC.+Gk>;o,Dee*@CG3e`o3:YAlC^cenm6;
VHj[7j,M/DTMMKR<uhId6__,*'P^V;]\]3iSFaca:9*ETeLK*`j^P]*YZ>OYMX?_SB=(iZ<S1fMgul.G
W`KR^`p%TTgo@g[S]^NdGW[Ic4=1jRLW!Y,nAdnmd>u@ZE`kN%="/]Bk&X\<k'&t\csU.*4XQLiVpoI(
:krhggTT2p2Hp'&cXF69mC&K$A%Q*^GApj#/dDW>_r:-r4K^%bK7S7)H6"&n8`/.bot)6IcVM"fH+`!?
(e9M)j77KnrZ=).bO>"IToW9Ue*-H$I6V(Ga7&Zu5;0YNrP/rL&:;4u`"7=48&Q>L*q3V,#=<B_,mm!.
Hm8oh$jlWV+%P*R&YF%W9bToL6q\.]EBHf*0IQL()9.f?D&^M-b6!16OmIK<a:\o8+eb&=N?cOWlus_s
P&,CfajQ-/--B,eJLF.=b]t[2;RE\]b-Lr].%h[~>
/LZWDecode filter
<~J,g]W!!io@#D>EP:q1$c#6]e"@So)r#QkTr7Uo<*jCU%cO@WlcBbZk-"-Q7;;@-%">oA8b^b[qqc>>J.
c0#b>bjmCjMb^3M3[GQ"0r%W\<1'47SPQ1`@A#ZS$jBY3eZ2]-V-^K6Wn8h%qX'H`B=(iZ<kBamh/Bf.
DHAoredM`b!H.sBe`-OQ^0g?\bO+a+J&5Nb^jK`Q*KS9PE`k@U-S:\/Aoh+fk&q.?"m@d(+C:C,$Iidt
>)aki<Mn>\+Mbd+1MsVVDKf<uk3`Wfi,EpG4sq/+a+FKi>bHj*S.>mHH2PsS0<<F]oUs#Qi'\mJn9@%o
+HM`2k3r.o&7D/,h=(,dIU>=;dL6lgIXb_>kP+oS]oT5u!Pjb;mf1*79GICin6?t=JuAq~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/198795660.0 /Pattern get_res
[.9375 0 0 -.9375 100.438 523 ]make_pattern set_pattern
f
2 vmreclaim
false sop
0 0 0 0 cmyk
ZQVJYN+LiberationSans-Bold*1 [8.54688 0 0 -8.54688 0 0 ]msf
108.875 513.938 mo
(\021\003\014\022\027\037\011)
[7.11948 4.75206 2.84605 5.21359 5.21361 5.21359 0 ]xsh
144 497.688 mo
160.875 497.688 li
160.875 522.063 li
144 522.063 li
cp
gsave
grestore
/198795856.0 
<<
/ID /198795856.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 19 28 ] 
/XStep 1545 
/YStep 1545 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
19 0 li
19 28 li
0 28 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[19 0 0 -28 0 792 ]ct
snap_to_device
<<
/T 1
/W 19 
/H 28 
/M[19 0 0 -28 0 28 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J-]OZ3$]%p('4I9&6NHQ%g`4;,#L=q:_j`U!C3<^<-C5/O2h9!#e4+l%$F3`P,U]!=q(uIJ^Z<#enbkc
:*sp&LdHMQ#garm$5<am'VnW@1jVD^Nrf[<6D7#B;Q3NoKj[2cc$$d,Y#kcM!<@/bB=(iYej/_Rh/BdW
DB\cdMX2Ju?8"6Qh=:[q^gM+`49PpgLW!YA=EkC\*KS9PER5kH="Tc_ARIk+LrVNGcY.CqgE=g91t680
RXJMF"?%4cG$?PQ`,2u7%S$VPcM)b#hJTf!+l<uU46,lk]WO,RH9<6iq>DA48:!FM&%b3VpN*t#n+V/1
&c\3BkOa%H4hhMSgZ.r(I./eUecc'~>
/LZWDecode filter
<~J0//he(bQD"b@`>K[<Nq!<[p>U+hs>1]V6K7Uo;j=ifS5#F\?kK2JL=-B(M@-N\QW:2;^\-75]C^t*3W
SIUCbiNdkr2G\!5ZYTp(D)Rm.e>ce,P=mj(cY'S0_Q?n?eS<VJKF$[H3?0S..i!NOEB."D7l-^=f58$%
m:X>qg?`oC?8"6Qh;IO>4<AHD4<=_7H%a\n8%`.`ViEoMEU\d;8d>Vd+7iX!p2`!=cKHBRU\Y'eVa+k$
g/J5M#(kKDFuoSb$3Z":+OHU[hX>Ht6/<*b1bo`&`^4Z*-tFk8%F=6[H:W-7#nVmYG'cB$dN59B73[jX
5:;N2jglXuBYRWLg$eY0C1tqf2&Z,brBEMgF9rdS&^Sr0s1iQBlM\I/6i'!]n-fNt6-n$C!($+-$9b%)
~>
/LZWDecode filter
<~J34lL2iGf<"aIhUbs\Kq!!%^=T[8Kn`Yf6d3+GgqjDi3&D?e!r=!NjIjcdh,Z:R]Sd$[S<j_e4bSng*M
3Mk!_oZhkLT>9732`%%`7\`fE/ndB$SPQ1_Sdu&p<ioH)3aE;@9m43WYZGRW]-WcfB<kXq[_$+Uf58"4
h:FT$]'FOMhCWX/421Yl^f9dt#CT>-o>G(qD`h>^'2s3f?F`1nf-Qa)_;?nnj5KG$cTX.1r8ZW<qL-*N
)N@e,<r@BqhqL;kf57jn^\:sGk4a#/hf*dYIMWfO`SYYq)t#pDL@OGFH+b8#7s,&eJ,~>
/LZWDecode filter
<~J,l6=3$]%:!/(=pYdbYo'+]me5ThJ6<Zqs27UT)\Zu.l9NIYP;3>_fj-@n`7;RmL==YGWL-;uq#'F-Pt
!9Z/;]^gCNT$V.M-kI#N8#0$rclans%8Wo'WRWJG#S1"<<bk][&15(tYZP\f+B=XBB=%a,euMaU)/m#i
DEuQZ#T\-%?>ini&3M'H#N0Q'*!QlU&dX/1(lVKS((pp=JpBJU="G!l5_?PZk'&tXa^t*I4NImpVp=G4
)Mf(1~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/198795856.0 /Pattern get_res
[.9375 0 0 -.9375 144 523 ]make_pattern set_pattern
f
2 vmreclaim
grestore
.750179 .679652 .670191 .901488 cmyk
true set_gvm
%ADOBeginSubsetFont: GJMAAA+DejaVuLGCSerif AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYQ+DejaVuLGCSerif dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1 <1C60D8A8C9B506246707A7214EF2ED28993A3F23564C361B2984C4159CE
E4DB6DED7854516974587A7855209E304859FD3276DC65198FBA235A03903835
F23E5451A03AF0E0CDE857564F15F5322E49E> |-
/g2 <1C60D8A8C9B7C7F3A4947521CD67BAE661481A7AA80A931F84CE79EDE0E
8778F5DD99A6AE7DD8B01CACC1BCE0A37D208BC8674BA9DF9458B9B88C83B154
FACF0B8BE7E08F418BAC069C25A0F473CE8475AE7E36D392E82E4777B14B3B57
061D800C1E9DA383631BDC9C34CAD3CA741CCAB3DA82872E82AC681DA11ED58D
AC13F72EAE5E72EE8FE532281AE18A9ECCCEAFBF464FCDC52A8DEFAE835AD93F
12B2F70D9E2A877F3715ECBF3F197154E340FF561669C0560F1FBFF98> |-
/g3 <1C60D8A8C9B709C42B9B211344C5DD7F1409C8651012006A3E57A648900
6A95FB57BA38DACA40382126D884D1D0520C380A5BEE6C5085CE50BA78FCAD5C
274A44ACF36142ECD5FBD51767FB9D6312B970956C03A340F01CF13866680368
28557BD1B> |-
/g4 <1C60D8A8C9B7EB086D4B4CA62546A22AE0A044125AC995C2D8BF2F3875B
5CF80AC2BEF25A642010B687476133DC455570F62FE477243608113131FF9172
BA51D49639449023751A9B5FCF81CA0724042072BFB929C26C115E821CEFE941
6438C2BB3E31EE6F8F65E4AFBE5BFCB47847CEBDF7C44B1B9F42E526C009455A
5DA10C4F8E83B> |-
/g5 <1C60D8A8C9B679732AB77C9B5615B8BFE212E4B346A37D2F94A835EFB4D
0F91C3DC8626D90D7933ECA66832F13143D4E924F17C8B772022BB81BCE2C86E
5A06BD2B9BC17678E590DB7653575D83D36573641683FED29CBC063308751AD5
E4D1FA790D6A77C6B152BC00DFC72DF9E> |-
/g6 <1C60D8A8C9B6E4CBA42489777BE40AEB35B69413162492C667F3D7000EA
858A311E654C5BCB75F82B932C53110D58EE1A10DC7A73C4583DAC5EF91D7C76
448F7F72A0800EFA1AD1E72960D88A13AC169B8EE7A0E224752CA345415D4EF2
5AF3B2FDD69E33FE3A0B85A9C5C54B464F22AF992C0BB4DCD910A01300868F42
4A91E43AF50C1D7ABD3A21813AA572435172095C19357C06BF940C36B> |-
/g7 <1C60D8A8C9B7CB35692BB67CF79A21AEC32C6C03D1036E15C03F97FA0AD
578204CED1D2297EC3ED7E597D4BA8AD728DB48BBDD84D04AEDD2AA5A18B16A5
3A1179C961EABFE9305BABC8EF307F02C72C940114D4FA94A4B46EE461446134
3D72E814E7621875C391354ECA725DA800EF91F9D057A1B47E61070005682E02
074F0570A51E1B3CF33CDACE01569> |-
/g8 <1C60D8A8C9B7BA8F15F3587DE322E0AC1531645AE73BE4A4965F8173E81
F216EF7346E825D1F68B0313BC59E6CA4228CCB624A0C475FA9E72777AA30C2C
C80AA840BFE52B0671C8C4ABD8CE63830D195CDDCD4BDD8453C33189CFFB03AC
0C5C789AE5918940DC056624B3E93A30EA8E617F993720B6C2405FBA215FAE7E
52EB83D65794C722ED2D701C3FD516FFFC0F3C0678AEB9FE812D68812BA630CE
E8C427AE61D7853647AF496FA3196E616B51BC9D0B42BBBF92912A9A113C9FC3
0384793CA96F13199> |-
/g9 <1C60D8A8C9B679732AF7FDA49A1F0D11B0A7934966CB6EA6337C93B0E66
284D8D3F302D59746C3A1AEE3899E55FAB07CEC06B57D4CA00E9E559D4FB57F1
9D91DB3BC6B1B20C6D75D947E295FEAA5C1AE9FF182991206F841BFCDD331925
6E310123A17013DC41A62> |-
/g10 <1C60D8A8C9B82A0D868C9C943C3B53E01413DACAB8179C5DBFDD558EB2
A45A2746BC6ED6> |-
/g11 <1C60D8A8C9B82C9118> |-
/g12 <1C60D8A8C9B73549CFC4867B37786470499B2512B1AAE4E5533E0AC2AD
6516B7DEC3A53699173C38CB2E1B75F56DCC6A8B21A6E5EFF23A7B4CCEE33D38
7873C210B748B3911E2D9DC752BA0075> |-
/g13 <1C60D8A8C9B70A9AE7E16ABD762EB49DCF14F695DCB9D0AD78AA03070A
F886546695271B11FEE029AC8F71D7236F8BF90C121B81DA688C1798C17BBEFA
BF9229A09B7F0DF450B1B40FBC53D99049B8EC5E1EF421FC5550C3050DAD8991> |-
/g14 <1C60D8A8C9B7E6F05303911717E77F1AAC973E6079B259108FD1551520
2AA9B35B835CAB8235ABB6474F8BF3F0E97B0BCC87BFF9ADB611> |-
/g15 <1C60D8A8C9B654A4F86EF7BF03AE6C6843F13612CD35DD32DFE7AE0AB0
9BF72FC396B3C5A9AAA1F131BD9C2F51EB15299A444AE03507C2BF8ABF18415F
4E3C9677826365944809637CE17D2F91441C724F1726A18C3B6730E8A631C636
56E1BCFEEA8982504FD89A0B14CD47> |-
/g16 <1C60D8A8C9B7299AB416DFC2B7CDEA03001F262A73425247C6C6726485
3D822302A3E8D6FD905AA663A0A5CF567C05191146FF2E68E441CD94E2FD55AE
0999C3AFD603D006756CE8667FB22D91792F3CBD70B1E527A48C87B276E2A8BF
71FB2548C426CBEB307C743135854A71> |-
/g17 <1C60D8A8C9B7C12A5DFF97C8CDDDA7601CFB649897EA436DCDAE5303A0
740F220A924A7AC9A5363694B46E8E453CBF701ACAD8EB92359C41F3B1F29A08
9A62AA61BC96594C518302B6994DA43E45590D98AC9E7AAD1DB9E2AC937A7DFC
E03F3C303FD1FF92DB26306FD2E39BAB213D01CE26155C6DACF1727BFC927906
1FF818FB1BF0> |-
/g18 <1C60D8A8C9B75D88DDE2131FB9D34DBD390CACE2DE68BDC2BD996C052B
EDF9EC23BB66179B6BDAD2DD2FC7DD23A6B4BA4B95EC13469E22D08A4B6BAB37
BB3B2A2CBE3E91F922A2512198CCCEE35C499054207121EA581CD4D1CCA06A00
AD57453706AF9ED2E9> |-
/g19 <1C60D8A8C9B5DA16DDA5D556A0F45BB0606FC4E356194C98915D88D913
75203760CCFCACFBA58FDBEBED3D2ED05F5DB216BD20C9FF2DD0F65493DAA349
B7DBFE112BC31CD80BCE4F615E021A84758E9897E3B96D49DB2ECA9837551BAA
FD828F314B14860D66DF7DA7DD39BEC313B0B46AB2054028E1CC5F9C719F1057
ED552B1837C3995C94C144CEA16B1F99ED77FB2CEEF08D9C1A58974A11FF4D74
9B227933A66C5B3482E053F23D96A3D32CB81F267AC739327037EBA5B153> |-
/g20 <1C60D8A8C9B620B7F38E03B05FC0C20F57EAC6BDA2A5AF29A0EE6747AE
7F126F3E30AC05434DA24669B46016305080F5A2A22CC19D57ED037C870F9307
22588F7F195F045FFE1945B69050CB8C01C8D83BACD4B9E253732A6BD2F64D24
B82A41AA4F1DEBBEA22DA76BEA9531C212BA11CA1762253534F997D231085F00
D94657508865B1BA09D09AC9CDFC6F9C7110DE063028F760E7800A55B0FD389C
D0B66AF8BBDEEE214E7367078EF14352ECD0CBAA4A026D3C83CB5C7E300BE209
447EB59D4B4E2F98EB> |-
/g21 <1C60D8A8C9B60F085F0FFB34018FE247AB0D6A23D926742D22916BCE45
947FE6B18E6460416F2103A6A99A32CED965C86DC781FF5D6A0E3529202E7173
B6EA61FE1E86DE6396> |-
/g22 <1C60D8A8C9B67106DD7BD706B92323BAA62D99BFAAC49028E2379B408D
964062F76FCF35B1354737> |-
/g23 <1C60D8A8C9B73549CF989A0789E810A67C413697CBA2A3BD4681D238F1
28E357D754321612DBFF80838C1A4B4D7599FE94051D6CA0EF91D05974AAA625
927FE8312E6E9A00E72A71B5621C29AD1B> |-
/g24 <1C60D8A8C9B67106DD31947DAC77435C9D20E65B8B7453C0D38EB98396
C8EF68CA780E9AEC134AD4016B> |-
/g25 <1C60D8A8C9B67106D2DD68075B99CC2B90576A342CDDECDA1C7875AEE5
1C7D01D89116DEC87EC3064FFD9B0257EA0A0B0383993911BA791C468699855D
1AF0EE8D4D9283F6E33E43586DD34EC338C919BDD4CC06ECC77F4E6AC653394C
16C0DF6D5D1775205FE94DE3C6EAF4D12C3C166E4FDD5F0E4ED3E336E7DA1E80
8893F849433A22560D012960C32B7C0AB388C608> |-
/g26 <1C60D8A8C9B675483070613FEE967EC5A683DE560690481B930F5ABBBA
689B0036B75524ECA04A4AABA54AED9F055FB2265AE92D836D4CA5A591507C5F
572B45BD32A1449FD7ED4DA2CC7675CCB7597165BF69FBAA2908B50C860F2306
686F50A67F5A01298441602152FD60DDD19DFB8DD98DA57F2ED23480A5424F7D
44D665EE9EE2232C5D1A3CB7E68AC4226972850A447E7462126107CEC5225460
56> |-
/g27 <1C60D8A8C9B81BEA6E5E5A73362B40A237329A9C520DB234ACC544E3FA
4E209F44AB63663C5DED39028B14E0324542F4CC48980F1CD9A128F29F4C1EBB
BE80105BA5DDEF24219383C9A6B0F21C237B1ECC4C64DF68271124B9847B811B
26B0CC6DDE2439460B5BDF1249BD99FCBD995C5E8CC8E21C6388A2BB3A197B15
171E8275FB> |-
/g28 <1C60D8A8C9B81BEAB72A3DF02294E46C90F0FEF4DE> |-
/g29 <1C60D8A8C9B675483FAF8B67E12B34DEFE1D66FBBD3A81920745497B98
6D4B0BE2D05A869A5E41D74A241C4D757E66A41761D9BACD86E7A30268946CB7
E48ECC11AEADF554AE1D69F07A0050E2744E5A829766481487844F0AA9BC6E8E
28B68DCAD39D3CF1CC5FB6026ECF78CE06204F4C949B04E37D477915F80A2965
8C9A8CE3C419A2A0A2CBE576544CB4E57E8AD67A9F487F12654ABFFE> |-
/g30 <1C60D8A8C9B82C91E16089F019A2490391A8B78A06D7ED65C1CBE26652
EF200CD0ED37F13F0B55F1B17EA9128903A655C6DFFF23C68DCDC0C549AE9B72
EEC3F1B84EC44FCE55> |-
/g31 <1C60D8A8C9B8341D97A0706D5B572B1047197B37E2CB3A538BE3797D24
6C26F180F39689E7ED1EF8C79EE47474493A8D284607FD91E08CA3B213AA7B7A
1D57521F197A68B04519229DCE90FFECD451041DD7C69109B7A0865917BDC007
736FC40932950F25BCE836112718E295A1DF03F4A9C6BC5B61F242D579D85D0B
6059B40B41B9CA6145E223430D7808C5746319BF87> |-
/g32 <1C60D8A8C9B82A0D86E86DBA50C661E4BCF08DD522943EEC6637A0D448
531637522EF2F61EC007FD912D3EE4C67354F31B2B53D0EA6A1FDBDC678052E6
0DE72DA354F8870D3394BE4D3BD9BD5EF341C678DB1FEA20392CB41E02243965
8E0D8487> |-
/g33 <1C60D8A8C9B67106D2B6E9E1B237B96B32C35A29E35C418A5B05FE1A9F
7A1B3A3FFBFC9F06DC323942B80567598BCC79FC3672A7A50CB21DAAA1213461
4831AED70E95430F926A45F52BBB72C7A49BBDFBB82A6A75E193C601CB0BD40D
6623A5B51D5B52BF523B35E1327BF8AA3DEC411B1CBB2F00C38E08D6B119AC11
F3D5B26083765C85E17EB56914E916> |-
/g34 <1C60D8A8C9B67106C96BF965D2C9C59AF2528ED58CD8203F7608055FE1
9695BBDC1B396CC153AFC4B02119956503EED76BFCAABDD28314D93D031DAF51
C4CFD0A828E013D9317A6E17A22257A479DAF0F520EAFFE7074A1BBFB8DD5D7B
5B7E246E139FDFC2D0E3A81D510BAF2899E1C089487FDA6CE75A060543692269
CA480C9CAE9D1A04827A6D8858EE69563A97EF375DCDE5F056FC8D6FDA372C22
CB2CEDAE50F93CB9EF3A7E991E5FC3892C7456F5B9B550D74969D9D743A47F7E
1C1DA5BA9E53> |-
/g35 <1C60D8A8C9B67106D2957B69A222A52390F6D3C9FC4A7E29EAC66498D3
EAD3E45E0547CF4A5881D0AD94CC2D46813546DE9D4EB088FCB58418B6533BE4
BC360C574936417CA7BD8D80BD6CAFD5E41E75ACD4E88E64DC17142245E79BA2
C00F6B3EE584B1F2D17FD2CFFFDFE73BBE5720B519901DC8D3DB855886E02522
04DE29BE> |-
/g36 <1C60D8A8C9B67106CA96F576FAF3B6C8813EC56F538EB355F31F90852B
F0B22286BFD8EDC81C0262EF080543E769E3B6BAD2A2AC6B79014F69FF0F2CA5
533924331B3D79> |-
/g37 <1C60D8A8C9B67106DD8BE046ECF63A81BB8479728FA2D178DDAD6EA25D
076CA1862655F0759E2F4A7276331C0F037FD91011F57F61BC46157FBD023D4A
2CA8A56EAAA48DBD7CE18C0589469AFCFCBBC0E26110FEDE6A39E7146459AB25
0A32F94159F0125833DED68B9626F2B1116F2181EF64E71D0CD9CFEB5A958A06
E809EB28990EE30F54DFC7A719919E66CFF25B9473937C2761595CDD3E255E35
B1A7BD12AABC748EB686EB143217C3750564F471278C180E409F64FB9346BBFF
B721053F5C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYQ+DejaVuLGCSerif /Encoding get
dup 1 /g1 put
dup 2 /g2 put
dup 3 /g3 put
dup 4 /g4 put
dup 5 /g5 put
dup 6 /g6 put
dup 7 /g7 put
dup 8 /g8 put
dup 9 /g9 put
dup 10 /g10 put
dup 11 /g11 put
dup 12 /g12 put
dup 13 /g13 put
dup 14 /g14 put
dup 15 /g15 put
dup 16 /g16 put
dup 17 /g17 put
dup 18 /g18 put
dup 19 /g19 put
dup 20 /g20 put
dup 21 /g21 put
dup 22 /g22 put
dup 23 /g23 put
dup 24 /g24 put
dup 25 /g25 put
dup 26 /g26 put
dup 27 /g27 put
dup 28 /g28 put
dup 29 /g29 put
dup 30 /g30 put
dup 31 /g31 put
dup 32 /g32 put
dup 33 /g33 put
dup 34 /g34 put
dup 35 /g35 put
dup 36 /g36 put
dup 37 /g37 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYQ+DejaVuLGCSerif*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 218{/.notdef}rp]
ZQVJYQ+DejaVuLGCSerif nf
ZQVJYQ+DejaVuLGCSerif*1 [10 0 0 -10 0 0 ]msf
36 46 mo
(\001\002\003\004\005\006\007\010\011\012\003\013\014\015\002\016\002\013\017\012\002\003\020\021\022\023\013\024\025\013\026\013\027)
[10.2299 5.95993 3.99994 5.59998 6.43997 7.50992 5.91003 5.14008 6.4299 3.19 4.01001 3.15994 
3.89999 4.01001 5.95993 5.63995 5.95993 3.15994 6.71997 3.19 5.95993 4.01001 3.69995 6.02005 
4.77997 9.47998 3.17001 6.84998 7.29004 3.15994 6.36002 3.17001 0 ]xsh
547.2 46 mo
(\030\013\021\020\013\031)
[6.36005 3.16998 6.02008 3.69995 3.16998 0 ]xsh
36 753 mo
(\005\003\003\032\033\034\034\035\021\004\010\036\021\022\002\004\012\007\036\004\021\023\034\037\002\016\002\010\007\034\026\034\035\021\004\010\034\002\032 \034\037\002\036\036\036)
[6.43997 3.99994 3.99994 6.39999 3.37006 3.37006 3.35999 6.39999 6.02005 5.59998 5.14008 3.17001 
6.02005 4.7699 5.97 5.5899 3.20007 5.89996 3.17001 5.59998 6.02005 9.49005 3.35999 3.09998 
5.95993 5.63995 5.95993 5.14008 5.89996 3.37006 6.36002 3.37006 6.38992 6.03012 5.59998 5.13 
3.37006 5.95993 6.39999 3.19 3.37006 3.09998 5.95993 3.15994 3.17001 0 ]xsh
466.213 753 mo
(!"\034#$\034#!\030$\013!\026\033"%\013\017\001)
[6.36002 6.36002 3.37006 6.36002 6.36002 3.35999 6.36002 6.36002 6.35999 6.36005 3.16998 6.36005 
6.36005 3.37 6.36005 6.36005 3.15991 6.71997 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/Pattern [/198794680.0 /198794484.0 /198795660.0 /198795856.0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 2 2
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_CoolType_Core/ps get exec
true set_gvm
%ADOBeginSubsetFont: MYABAA+LiberationSans-Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MYABAA+LiberationSans-Italic def
/FontInfo 6 dict dup begin
/ItalicAngle 0 def
/OrigFontType /TrueType def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-272 -303 1063 1014} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6E3FAA6> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZQVJYR+LiberationSans-Italic /MYABAA+LiberationSans-Italic findfont ct_VMDictPut
Adobe_CoolType_Core/pt get exec
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
[1 0 0 1 0 0 ]ct
72 72 mo
540 72 li
540 720 li
72 720 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
72 72 mo
539.5 72 li
539.5 719.5 li
72 719.5 li
cp
f
92 72 mo
520 72 li
520 197 li
92 197 li
cp
.0162966 .0119936 .0119936 0 cmyk
f
520 72 mo
521.25 72 li
521.25 197 li
520 197 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
92 197 mo
521.25 197 li
521.25 198.25 li
92 198.25 li
cp
f
90.75 72 mo
92 72 li
92 198.25 li
90.75 198.25 li
cp
f
101.375 72 mo
201.344 72 li
201.344 104.188 li
101.375 104.188 li
cp
.0539559 .0414435 .0369268 0 cmyk
f
201.344 72 mo
501.25 72 li
501.25 104.188 li
201.344 104.188 li
cp
f
101.375 104.188 mo
201.344 104.188 li
201.344 136.376 li
101.375 136.376 li
cp
0 0 0 0 cmyk
f
201.344 104.188 mo
501.25 104.188 li
501.25 136.376 li
201.344 136.376 li
cp
f
101.375 136.375 mo
201.344 136.375 li
201.344 179.813 li
101.375 179.813 li
cp
.0539559 .0414435 .0369268 0 cmyk
f
201.344 136.375 mo
501.25 136.375 li
501.25 179.813 li
201.344 179.813 li
cp
f
101.375 179.812 mo
501.25 179.812 li
501.25 181.062 li
101.375 181.062 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
101.375 72 mo
102.625 72 li
102.625 104.188 li
101.375 104.188 li
cp
f
500 72 mo
501.25 72 li
501.25 104.188 li
500 104.188 li
cp
f
101.375 104.188 mo
102.625 104.188 li
102.625 136.376 li
101.375 136.376 li
cp
f
500 104.188 mo
501.25 104.188 li
501.25 136.376 li
500 136.376 li
cp
f
101.375 136.375 mo
102.625 136.375 li
102.625 179.813 li
101.375 179.813 li
cp
f
500 136.375 mo
501.25 136.375 li
501.25 179.813 li
500 179.813 li
cp
f
92 222.938 mo
520 222.938 li
520 719.5 li
92 719.5 li
cp
.0162966 .0119936 .0119936 0 cmyk
f
90.75 221.688 mo
520 221.688 li
520 222.938 li
90.75 222.938 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
520 221.688 mo
521.25 221.688 li
521.25 720 li
520 720 li
cp
f
90.75 222.938 mo
92 222.938 li
92 720 li
90.75 720 li
cp
f
102.625 266.062 mo
500 266.062 li
500 443.593 li
102.625 443.593 li
cp
0 0 0 0 cmyk
f
500 266.062 mo
501.25 266.062 li
501.25 444.843 li
500 444.843 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 443.594 mo
500 443.594 li
500 444.844 li
102.625 444.844 li
cp
clp
101.375 443.594 mo
501.25 443.594 li
501.25 444.844 li
101.375 444.844 li
cp
f
grestore
101.375 266.062 mo
102.625 266.062 li
102.625 444.843 li
101.375 444.843 li
cp
f
102.625 267.312 mo
500 267.312 li
500 284.812 li
102.625 284.812 li
cp
.117006 .069337 .0465095 0 cmyk
f
102.625 266.062 mo
500 266.062 li
500 267.312 li
102.625 267.312 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
102.625 284.812 mo
500 284.812 li
500 286.062 li
102.625 286.062 li
cp
f
102.625 468.281 mo
500 468.281 li
500 719.5 li
102.625 719.5 li
cp
0 0 0 0 cmyk
f
500 468.281 mo
501.25 468.281 li
501.25 720 li
500 720 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
101.375 468.281 mo
102.625 468.281 li
102.625 720 li
101.375 720 li
cp
f
102.625 469.531 mo
500 469.531 li
500 487.031 li
102.625 487.031 li
cp
.117006 .069337 .0465095 0 cmyk
f
102.625 468.281 mo
500 468.281 li
500 469.531 li
102.625 469.531 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
102.625 487.031 mo
500 487.031 li
500 488.281 li
102.625 488.281 li
cp
f
gsave
72 72 mo
540 72 li
540 720 li
72 720 li
cp
clp
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
109.188 84.8125 mo
(\005\010\011)
[6.17055 6.17056 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: ZAYAAA+DejaVuLGCSansMono-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYP+DejaVuLGCSansMono-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g19 <1C60D8A8C9B7C12A5268FB8686F4DDCB2C386D6E3A4B9A6851A46B336C
B3D738AAEE9D2098C6C43430E583C675CEF52E029A9F72D0296ADEDE687C671C
BA795DE55EC951ABDF527199D4E6C148EEFCB6ABBFC1AB10B01C8CDD61A21FF9
44166EA226AC2AD25BDFF76B063E00833188E341F7A33914408EEF9AEDA9BD01
888F47D1B9F30E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYP+DejaVuLGCSansMono-Bold /Encoding get
dup 19 /g19 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYP+DejaVuLGCSansMono-Bold*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 236{/.notdef}rp]
ZQVJYP+DejaVuLGCSansMono-Bold nf
ZQVJYP+DejaVuLGCSansMono-Bold*1 [10.25 0 0 -10.25 0 0 ]msf
207.906 84.8125 mo
(\020\016\021\011\022\023\021\011\013\003)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
269.625 84.8125 mo
(\022\023)
[6.17056 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g47 <1C60D8A8C9B8ADAC5DF4B854362E33277A5D355C67BFFA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 47 /g47 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
208{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
207.906 98.875 mo
(.\003\023 \004\026\016\035\023%\003\035\026 \032*\003\004\035\034\(\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\016\035\005\026\035\023%\005\016\035\032\010\023\011%\035\004\003\016 \015\023/\016\035\022\010\023\023\003\004\026')
[6.17084 4.75208 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.74344 4.75208 7.12808 4.74347 4.75204 2.84604 2.36743 4.74347 2.3674 2.36743 4.28204 4.75204 
4.74347 2.36743 4.75204 2.84604 1.90604 4.74344 4.75208 2.36743 4.75204 2.83743 4.75208 4.74344 
4.75204 4.28204 2.36743 1.90601 4.75208 2.36743 2.36743 4.74344 1.90604 4.28204 2.3674 7.12808 
4.74347 2.36743 4.28204 4.75204 2.36743 2.84604 4.74347 4.28204 4.75204 1.90604 2.3674 1.63254 
4.28204 2.36743 4.74344 4.75204 2.36743 2.36743 4.75208 2.83743 4.75204 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
109.188 117 mo
(\005\010\011)
[6.17055 6.17056 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYP+DejaVuLGCSansMono-Bold*1 [10.25 0 0 -10.25 0 0 ]msf
207.906 117 mo
(\010\003\002\016\003)
[6.17055 6.17055 6.17056 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
238.766 117 mo
(\022\023)
[6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
207.906 131.063 mo
(.\003\023 \004\026\016\035\023%\003\035\016\023\010\004\023\035\005\026\024\003\027\035\034\(\035\023%\003\035\032\010\023\011%')
[6.17084 4.75208 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.28204 2.36743 4.74344 2.84604 2.36743 2.36743 1.90601 4.75208 4.74344 4.75204 4.28204 2.36743 
4.74347 2.36743 2.37601 2.36743 4.74344 4.75208 2.36743 7.11948 4.75204 2.36743 4.28204 4.75208 
0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
109.188 149.188 mo
(\005\010\011)
[6.17055 6.17056 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYP+DejaVuLGCSansMono-Bold*1 [10.25 0 0 -10.25 0 0 ]msf
207.906 149.188 mo
(\010\003\002\016\003)
[6.17055 6.17055 6.17056 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
238.766 149.188 mo
(\022\005\010\011\007\024\013\025\002\001\023)
[6.17055 6.17055 6.17056 6.17053 6.17056 6.17056 6.17053 6.17056 6.17056 6.17053 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
207.906 163.25 mo
(.\003\023 \004\026\016\035\023%\003\035\016\023\010\004\023\035\005\026\024\003\027\035\034\(\035\023%\003\035\016 *\016\003\) \003\026\011\003\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\005\002\003\026\035\013\004\034 \022)
[6.17084 4.75208 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.28204 2.36743 4.74344 2.84604 2.36743 2.36743 1.90601 4.75208 4.74344 4.75204 4.28204 2.36743 
4.74347 2.36743 2.37601 2.36743 4.74344 4.75208 2.36743 4.28204 4.74344 4.75208 4.28201 4.74347 
4.75208 4.75204 4.74344 4.75208 4.28204 4.74347 2.36743 4.28204 4.75204 4.75204 2.36743 4.74347 
2.84604 4.75204 4.74347 2.36743 4.75204 4.28204 2.36743 2.3674 4.74347 4.75208 2.36743 4.75204 
1.90601 4.27344 4.75204 4.75208 2.36743 4.74347 2.84601 4.75208 4.74344 0 ]xsh
207.906 174.5 mo
(\024 \004\005\026\013\035\023%\005\016\035\032\010\023\011%')
[4.75206 4.74345 2.84604 1.90602 4.74345 4.75206 2.36742 2.36743 4.75206 1.90602 4.27344 2.37602 
7.11949 4.75204 2.36743 4.28204 4.74344 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.9688 0 0 -11.9688 0 0 ]msf
101.375 248.25 mo
(\021\003\014\022\027\037\005"\003\014\010\033\007)
[9.96988 6.65462 3.9855 7.30094 7.30095 7.30095 3.31525 8.64145 6.65462 3.9855 6.65462 3.31526 
0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
107.313 280.438 mo
(\011\014\010\002\014)
[6.188 3.69934 6.188 4.32163 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
110.125 308.422 mo
(\005\010\011\007\021\011\015\013\011\022\023)
[6.6879 6.6879 6.6879 6.6879 6.6879 6.68791 6.6879 6.6879 6.6879 6.6879 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 332.031 mo
(.\003\023 \004\026\016\035\023%\003\035\016\023\010\004\023\035\005\026\024\003\027\035\034\(\035\023%\003\035\032\010\023\011%')
[6.17085 4.75206 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.28204 2.36742 4.74345 2.84604 2.36743 2.36743 1.90601 4.75206 4.74345 4.75206 4.28204 2.36742 
4.74347 2.36742 2.37602 2.36743 4.74345 4.75206 2.36742 7.11949 4.75204 2.36743 4.28204 4.75206 
0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 352.656 mo
(\023\003\014\024\002\016\011\035)
[6.79131 5.23934 3.14169 5.73782 3.6591 5.73782 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
128.875 373.281 mo
(\020%\003\035\005\026\024\003\027\035\034\(\035\023%\003\035\(\005\004\016\023\035\011%\010\004\010\011\023\003\004\035\032\010\023\011%\003\024)
[5.21359 4.74345 4.75206 2.36743 1.90601 4.74345 4.75206 4.75208 4.28204 2.36742 4.74345 2.36742 
2.36743 2.36742 4.75206 4.75206 2.36743 2.36742 1.90602 2.83743 4.28204 2.36743 2.36742 4.28204 
4.75206 4.74345 2.84605 4.75204 4.28204 2.36743 4.74345 2.84605 2.36742 7.1281 4.74344 2.36743 
4.28204 4.75204 4.75208 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 393.906 mo
(!\022\002\027\030\011\035)
[5.73782 5.74729 3.64963 5.7473 7.31805 5.22987 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g22 <1C60D8A8C9B7C12A4717034A06ADB8F617677DDF7FD65FEB0D0B843C36
A41FE7C4ED1FF1FDAC294DF573614E> |-
/g23 <1C60D8A8C9B7C12A52EC853627598427BE62557667E4D5DEE7B6514EC7
11183B8B0001E26D0FC9F32AF036BA6ABA6B7D437CF80CFF943DCE20C63338BC
3506DFB6A69AB60020A474E06849ECE4543C858FD31B8AA4D65F56E0AB865E2A
5C90FF970B817FFC6125FDC79032E1C940DD3496970FA933B7C6642AC5893C90
9403AB32AA5BC97497506CCA6A0AF1B5702BCA2B120EA4AA0ACBF7A41D02230E
203AD5BC5DAA58D24BE13262961F6AB1E146D52095859178CBEA03F98361899F
C979ED45> |-
/g24 <1C60D8A8C9B7C12A410145A85C4B6732D8662F1F1A69F58B3966A0FD9F
CBBB1F6BCE3EFDAB86809BBD22> |-
/g25 <1C60D8A8C9B7C12A529D30A0BFAD83D6FE158CADBDFA09BF015FF252CC
F17DBD35563580099B81F077A700046264B5F7DED75DCD096C20252FA1638C11> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 22 /g22 put
dup 23 /g23 put
dup 24 /g24 put
dup 25 /g25 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 230{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 415.781 mo
(\026\004\004\012\024\015\004\027\011\015\011\012\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g48 <1C60D8A8C9B81F2C3A0E2F81E36A60698FD9B123FCE1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 48 /g48 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/g48 207{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
258.484 415.781 mo
(\0350\035\025\(\035\026\034\035\032\010\023\011%\035%\010\016\035!\003\023\035*\003\003\026\035\010\023\023\003\032\022\023\003\024+\035\034\004\035\005\(\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 4.75204 4.74347 2.3674 7.12811 4.74344 2.36743 
4.28204 4.75204 2.36743 4.75208 4.74344 4.28204 2.36743 4.28204 4.75204 2.36743 2.36743 4.74347 
4.75204 4.75204 4.74347 2.36743 4.75204 2.36743 2.3674 4.75208 7.11948 4.75208 2.3674 4.75208 
4.74347 2.3674 2.36743 4.75204 2.84607 2.36743 1.8974 2.37604 2.3674 2.36743 4.74344 4.75208 
2.36743 4.74344 2.84604 4.75208 4.28204 1.90601 4.74347 4.75204 4.28204 2.36743 7.11948 4.75208 
2.3674 4.28207 0 ]xsh
128.875 427.031 mo
(\034\022\003\004\010\023\005\034\026\035\(\010\005\015\003\024)
[4.75206 4.74345 4.75206 2.84605 4.74344 2.36743 1.90601 4.75206 4.74345 2.36743 2.36742 4.75206 
1.90602 1.90602 4.74344 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
107.313 482.656 mo
(\011\014\010\002\014)
[6.188 3.69934 6.188 4.32163 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
110.125 510.641 mo
(\005\010\011\007\021\011\015\013\011\022\005\010\011\007\024\013\025\002\001\023)
[6.6879 6.6879 6.6879 6.6879 6.6879 6.68791 6.6767 6.68791 6.6879 6.6879 6.6879 6.68791 
6.6879 6.6879 6.6879 6.6879 6.6879 6.6879 6.67673 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 534.25 mo
(.\003\023 \004\026\016\035\023%\003\035\016\023\010\004\023\035\005\026\024\003\027\035\034\(\035\023%\003\035\016 *\016\003\) \003\026\011\003\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\005\002\003\026\035\013\004\034 \022\035\024 \004\005\026\013\035\023%\005\016\035\032\010\023\011%')
[6.17085 4.75206 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.28204 2.36742 4.74345 2.84604 2.36743 2.36743 1.90601 4.75206 4.74345 4.75206 4.28204 2.36742 
4.74347 2.36742 2.37602 2.36743 4.74345 4.75206 2.36742 4.28206 4.74344 4.75208 4.28203 4.74345 
4.75206 4.75206 4.74344 4.75208 4.28204 4.74347 2.36743 4.28204 4.75204 4.75204 2.36743 4.74347 
2.84604 4.75204 4.74347 2.36743 4.75204 4.28204 2.36743 2.3674 4.74347 4.75208 2.36743 4.75204 
1.90601 4.27344 4.75204 4.75208 2.36743 4.74347 2.84601 4.75208 4.74344 4.75208 2.36743 4.75204 
4.74347 2.84604 1.90601 4.74347 4.75204 2.36743 2.36743 4.75204 1.90601 4.27344 2.36743 7.12808 
4.75208 2.36743 4.28204 4.74344 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 554.047 mo
(\014\010\022\023 \004\005\026\013\035\013\004\034 \022\016)
[6.17085 4.75206 4.74345 2.36742 4.75206 2.84604 1.89742 4.75206 4.75206 2.36742 4.74345 2.84605 
4.75206 4.74345 4.75206 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g49 <1C60D8A8C9B6FF86D1101F515892E0C2127FC30940C89A85535AE99C50
4EBAB2B78FBF51674B7F0A3B10E8F99F3B893F7394E05640BEF2EAA088669044
39CF081196C7796AB746623E4BC322894A676130B2BF6D6F27D2AF9D6659F9EE
9424EA210441BCF30AC749373CF72A7923192EC0F54D79424078047BE6A705FC
049724583078A704DDB67D025708A030F285EF0455E235E02EDB60CB3D639574
79FF4CC62DC36122D3B3008ED1D7A5550F975A746B180BB158BB7B7FB77032AA
6524ADE25B0101B4DAC9AC1553B69FD2B67FBDA1D12098F0FC1A29D287F680B5
BE0C0315897B703C823F238168E756E54DD4872C4F7ED536B343580A9E4EB23F
EB58> |-
/g50 <1C60D8A8C9B7A73DB6DE0B8B63B1D624E5971A614F5E3DF37808BE1BBB
139479910854739834D93C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 49 /g49 put
dup 50 /g50 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/g48 /g49 /g50 205{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
175.672 554.047 mo
(\035\010\004\003\035\005\026\024\003\027\003\024\035\(\004\034\032\035\015\003\(\023\035\023\034\035\004\005\013%\023+\035\016\023\010\004\023\005\026\013\035\010\023\035\034\026\003'\0351\004\034 \022\0352\003\004\034\035\024\003\026\034\023\003\016\035\023%\003\035\003\026\023\005\004\003\035\022\010\023\023\003\004\026+)
[2.36742 4.75206 2.83745 4.75206 2.36742 1.90602 4.74345 4.75206 4.75206 4.28204 4.74345 4.75206 
2.36742 2.36743 2.84604 4.74345 7.1281 2.36742 1.90602 4.74344 2.36743 2.36743 2.37604 2.3674 
4.74347 2.3674 2.84607 1.90601 4.74344 4.75208 2.3674 2.36743 2.36743 4.28204 2.36743 4.75204 
2.83743 2.37604 1.8974 4.75208 4.75208 2.3674 4.74344 2.36743 2.36743 4.75208 4.75204 4.74344 
2.36743 2.36743 6.64948 2.84604 4.75204 4.74347 4.75208 2.3674 4.28207 4.74341 2.84607 4.75208 
2.3674 4.74344 4.75208 4.75208 4.74344 2.36743 4.75204 4.28204 2.36743 2.36743 4.74344 4.75208 
2.36743 4.75204 4.74347 2.3674 1.90604 2.84604 4.74344 2.37604 4.74344 4.75208 2.36743 2.3674 
4.74347 2.84604 4.75208 0 ]xsh
110.125 566.547 mo
(\016\034\035\023%\003\035\003\027\022\004\003\016\016\005\034\026\035)
[4.28204 4.75206 2.36742 2.36742 4.74345 4.75206 2.36742 4.74345 4.28204 4.75208 2.84604 4.74345 
4.28204 4.28204 1.90602 4.75204 4.74347 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: MYABAA+LiberationSans-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYR+LiberationSans-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g1 <1C60D8A8C9B6B41CB4E13D99943A32DE524575AC0C46754D5EAF9BAE85F
7C3B0967F8AD2ED07DB75D79FC4ADDB65F0E01D45C8E7CAB3A9502ABA3A4A791
CD15EF66F9E0931DB09CF03ABD815BEFCD6BAF4B5AE493DB32D14027151754D6
31B9783AA43F227DAE33BDB359D7A2983F72424C09DF3F0FB6503B44B8701C74
6E09289E1376C801D5673FA703A5A3555E5DC705A24E48D21BC75020EBE6A4E1
E4C8B818680C9B45698AD0A02A160D4F6B8E128CED7270C08BF28D54ED0432D9
6E28964DF8C6D0872B41FAF4F2C1B83402C856CF02A5711091153F4139FB0352
21FD27DB5C02FAA54E5EEDFE4570C3A154245182AD212F5FD064CFB2199B7684
93BD305105325EFBA4122725CFF026E7AE9D71500D6CF97D1E66FF24D38F1854
E75AA401CE3F03FB5FBED0D65DC9867231EBB6584191EB66D0ACB031F9E42474
02686646D4753C6D1E0E0A725693D9DBF963FA74BB9> |-
/g2 <1C60D8A8C9B854D0F429177C5DE53F4185E7BB9998> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYR+LiberationSans-Italic /Encoding get
dup 1 /g1 put
dup 2 /g2 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYR+LiberationSans-Italic*1 
[/g0 /g1 /g2 253{/.notdef}rp]
ZQVJYR+LiberationSans-Italic nf
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
179.457 566.547 mo
(\001\002)
[7.11948 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g26 <1C60D8A8C9B7C12A5D393FAEAAC86B18B14F0EA95B4CFA6D5DA5E9834A
E4B236BA43E161FD00C468A4B8BB8CAB99C68423A01495400E4130CB79918072
CD633386F72C2EC357FF22F8F41207D9B4DC7D26E3FF8114C257B3D2662AA388
2EBB0CDCC142E476D2F6F6624085033F741B61CD5F5BCCB8E3EB8F14823D6783
401F4CFC842251C2E9C20E527E26FCFB1EBEF193770F263E74F6AA42B4B63F45
CF1BCA94DF89AD9A0924D991B0E3FA6AA991958E1251A1BB33F6F5BD21F48F0C
1D9DE58D822D3DD4F2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 26 /g26 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 229{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
189 566.547 mo
(\021\011\015\013\011\022\032\023)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
238.375 566.547 mo
(\035\005\016\035\003\) \005\002\010\015\003\026\023\035\023\034\035)
[2.36742 1.90602 4.28204 2.36743 4.74344 4.75208 4.75204 1.90604 4.27344 4.75204 1.90601 4.75208 
4.74344 2.36743 2.36743 2.3674 4.75208 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
300.1 566.547 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
309.656 566.547 mo
(\021\011\015\013\011\022\023)
[6.17056 6.17053 6.17056 6.17053 6.17056 6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
352.859 566.547 mo
(')sh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 587.172 mo
(\001\010\002\010\031\003\014\003\002\011\035)
[6.27404 5.22987 3.6591 5.22987 8.3717 5.23935 3.1322 5.23935 3.64963 5.23935 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 609.047 mo
(\024\013\025\002\001)
[6.17055 6.17055 6.17056 6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
159.734 609.047 mo
(\0350\035\020%\003\035\005\026\024\003\027\035\034\(\035\010\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\035\005\026\035\023%\005\016\035\032\010\023\011%\003\004/\016\035\022\010\023\023\003\004\026)
[2.36742 2.84605 2.36742 5.21361 4.74345 4.75206 2.36742 1.90602 4.74345 4.75206 4.75206 4.27344 
2.36742 4.75206 2.36742 2.36743 4.75206 2.36742 4.28204 4.74347 4.75204 2.36743 4.75206 2.83745 
1.90601 4.75206 4.74345 2.36743 4.75204 2.84604 4.74347 4.75204 4.75208 2.3674 1.90604 4.74344 
2.36743 2.36743 4.75208 1.90601 4.28204 2.36743 7.11945 4.75208 2.36743 4.28204 4.74347 4.75204 
2.84604 1.63254 4.28204 2.3674 4.74347 4.75208 2.36743 2.3674 4.75204 2.83746 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 629.672 mo
(\023\003\014\024\002\016\011\035)
[6.79131 5.23934 3.14169 5.73782 3.6591 5.73782 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
128.875 651.547 mo
(\020%\003\035\005\026\024\003\027\035\034\(\035\023%\003\035\(\005\004\016\023\035\011%\010\004\010\011\023\003\004\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\004\034 \022+\035\034\004\035)
[5.21359 4.74345 4.75206 2.36743 1.90601 4.74345 4.75206 4.75208 4.28204 2.36742 4.74345 2.36742 
2.36743 2.36742 4.75206 4.75206 2.36743 2.36742 1.90602 2.83743 4.28204 2.36743 2.36742 4.28204 
4.75206 4.74345 2.84605 4.75204 4.28204 2.36743 4.74345 2.84605 2.36742 4.28204 4.75206 4.74347 
2.3674 4.75204 2.84607 4.74347 4.75204 2.3674 4.74347 4.28204 2.36743 2.36743 4.75204 4.75204 
2.36743 4.74347 2.84604 4.75204 4.74347 4.75208 2.3674 2.36743 4.75204 2.83746 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g27 <1C60D8A8C9B7C12A5DE944D431B3C1C600F302E9F8757F> |-
/g28 <1C60D8A8C9B7C12A5DB33EB9D437D7B497903A14FB8E9D558D1EACB8B9
679B164D306E70316D491C46A0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 27 /g27 put
dup 28 /g28 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 227{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
344.531 651.547 mo
(\033\034)
[6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
356.875 651.547 mo
(\035\005\(\035\023%\003\035\032\010\023\011%\035\006\010\016\035\016 \011\011\003\016\016\( \015\035* \023\035\023%\003)
[2.36743 1.90601 2.36743 2.3674 2.36743 4.75208 4.74344 2.36743 7.12808 4.75208 2.3674 4.28204 
4.74347 2.36743 6.17084 4.75204 4.28204 2.36743 4.28204 4.74344 4.28207 4.28204 4.75204 4.28204 
4.27344 2.37604 4.74347 1.90601 2.36743 4.75204 4.74344 2.36743 2.36743 2.36743 4.75204 0 
]xsh
128.875 662.797 mo
(\013\004\034 \022\035\005\023\016\003\015\(\035\024\005\024\035\026\034\023\035\032\010\023\011%\035\010\026!\023%\005\026\013)
[4.75206 2.83743 4.75206 4.75208 4.74344 2.36743 1.90601 2.36743 4.28204 4.75206 1.89742 2.37602 
2.36742 4.74345 1.90602 4.75206 2.36742 4.74345 4.75206 2.36743 2.36742 7.1281 4.74344 2.36743 
4.28204 4.75206 2.36742 4.74347 4.75204 4.28204 2.36743 4.75206 1.90602 4.74344 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 683.422 mo
(!\022\002\027\030\011\035)
[5.73782 5.74729 3.64963 5.7473 7.31805 5.22987 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 705.297 mo
(\026\004\004\012\024\015\004\027\011\015\011\012\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
258.484 705.297 mo
(\0350\035\025\(\035\026\034\035\032\010\023\011%\035%\010\016\035!\003\023\035*\003\003\026\035\010\023\023\003\032\022\023\003\024+\035\034\004\035\005\(\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 4.75204 4.74347 2.3674 7.12811 4.74344 2.36743 
4.28204 4.75204 2.36743 4.75208 4.74344 4.28204 2.36743 4.28204 4.75204 2.36743 2.36743 4.74347 
4.75204 4.75204 4.74347 2.36743 4.75204 2.36743 2.3674 4.75208 7.11948 4.75208 2.3674 4.75208 
4.74347 2.3674 2.36743 4.75204 2.84607 2.36743 1.8974 2.37604 2.3674 2.36743 4.74344 4.75208 
2.36743 4.74344 2.84604 4.75208 4.28204 1.90601 4.74347 4.75204 4.28204 2.36743 7.11948 4.75208 
2.3674 4.28207 0 ]xsh
128.875 716.547 mo
(\034\022\003\004\010\023\005\034\026\035\(\010\005\015\003\024)
[4.75206 4.74345 4.75206 2.84605 4.74344 2.36743 1.90601 4.75206 4.74345 2.36743 2.36742 4.75206 
1.90602 1.90602 4.74344 0 ]xsh
grestore
.750179 .679652 .670191 .901488 cmyk
ZQVJYQ+DejaVuLGCSerif*1 [10 0 0 -10 0 0 ]msf
36 46 mo
(\001\002\003\004\005\006\007\010\011\012\003\013\014\015\002\016\002\013\017\012\002\003\020\021\022\023\013\024\025\013\026\013\027)
[10.2299 5.95993 3.99994 5.59998 6.43997 7.50992 5.91003 5.14008 6.4299 3.19 4.01001 3.15994 
3.89999 4.01001 5.95993 5.63995 5.95993 3.15994 6.71997 3.19 5.95993 4.01001 3.69995 6.02005 
4.77997 9.47998 3.17001 6.84998 7.29004 3.15994 6.36002 3.17001 0 ]xsh
547.2 46 mo
(#\013\021\020\013\031)
[6.36005 3.16998 6.02008 3.69995 3.16998 0 ]xsh
36 753 mo
(\005\003\003\032\033\034\034\035\021\004\010\036\021\022\002\004\012\007\036\004\021\023\034\037\002\016\002\010\007\034\026\034\035\021\004\010\034\002\032 \034\037\002\036\036\036)
[6.43997 3.99994 3.99994 6.39999 3.37006 3.37006 3.35999 6.39999 6.02005 5.59998 5.14008 3.17001 
6.02005 4.7699 5.97 5.5899 3.20007 5.89996 3.17001 5.59998 6.02005 9.49005 3.35999 3.09998 
5.95993 5.63995 5.95993 5.14008 5.89996 3.37006 6.36002 3.37006 6.38992 6.03012 5.59998 5.13 
3.37006 5.95993 6.39999 3.19 3.37006 3.09998 5.95993 3.15994 3.17001 0 ]xsh
466.213 753 mo
(!"\034#$\034#!\030$\013!\026\033"%\013\017\001)
[6.36002 6.36002 3.37006 6.36002 6.36002 3.35999 6.36002 6.36002 6.35999 6.36005 3.16998 6.36005 
6.36005 3.37 6.36005 6.36005 3.15991 6.71997 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/1 ]]
] del_res
true set_gvm
/ZQVJYP+DejaVuLGCSansMono-Bold*1 uf
/ZQVJYP+DejaVuLGCSansMono-Bold uf
/ZAYAAA+DejaVuLGCSansMono-Bold uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 3 3
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
[1 0 0 1 0 0 ]ct
72 72 mo
540 72 li
540 720 li
72 720 li
cp
false sop
/2 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
72 72 mo
539.5 72 li
539.5 719.5 li
72 719.5 li
cp
f
92 72 mo
520 72 li
520 719.5 li
92 719.5 li
cp
.0162966 .0119936 .0119936 0 cmyk
f
520 72 mo
521.25 72 li
521.25 720 li
520 720 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
90.75 72 mo
92 72 li
92 720 li
90.75 720 li
cp
f
102.625 72 mo
500 72 li
500 109.812 li
102.625 109.812 li
cp
0 0 0 0 cmyk
f
500 72 mo
501.25 72 li
501.25 111.062 li
500 111.062 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 109.812 mo
500 109.812 li
500 111.062 li
102.625 111.062 li
cp
clp
101.375 109.812 mo
501.25 109.812 li
501.25 111.062 li
101.375 111.062 li
cp
f
grestore
101.375 72 mo
102.625 72 li
102.625 111.062 li
101.375 111.062 li
cp
f
102.625 134.5 mo
500 134.5 li
500 312.031 li
102.625 312.031 li
cp
0 0 0 0 cmyk
f
500 134.5 mo
501.25 134.5 li
501.25 313.281 li
500 313.281 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 312.031 mo
500 312.031 li
500 313.281 li
102.625 313.281 li
cp
clp
101.375 312.031 mo
501.25 312.031 li
501.25 313.281 li
101.375 313.281 li
cp
f
grestore
101.375 134.5 mo
102.625 134.5 li
102.625 313.281 li
101.375 313.281 li
cp
f
102.625 135.75 mo
500 135.75 li
500 153.25 li
102.625 153.25 li
cp
.117006 .069337 .0465095 0 cmyk
f
102.625 134.5 mo
500 134.5 li
500 135.75 li
102.625 135.75 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
102.625 153.25 mo
500 153.25 li
500 154.5 li
102.625 154.5 li
cp
f
102.625 336.719 mo
500 336.719 li
500 645.922 li
102.625 645.922 li
cp
0 0 0 0 cmyk
f
500 336.719 mo
501.25 336.719 li
501.25 647.172 li
500 647.172 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 645.922 mo
500 645.922 li
500 647.172 li
102.625 647.172 li
cp
clp
101.375 645.922 mo
501.25 645.922 li
501.25 647.172 li
101.375 647.172 li
cp
f
grestore
101.375 336.719 mo
102.625 336.719 li
102.625 647.172 li
101.375 647.172 li
cp
f
102.625 337.969 mo
500 337.969 li
500 355.469 li
102.625 355.469 li
cp
.117006 .069337 .0465095 0 cmyk
f
102.625 336.719 mo
500 336.719 li
500 337.969 li
102.625 337.969 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
102.625 355.469 mo
500 355.469 li
500 356.719 li
102.625 356.719 li
cp
f
102.625 670.609 mo
500 670.609 li
500 719.5 li
102.625 719.5 li
cp
0 0 0 0 cmyk
f
500 670.609 mo
501.25 670.609 li
501.25 720 li
500 720 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
101.375 670.609 mo
102.625 670.609 li
102.625 720 li
101.375 720 li
cp
f
102.625 671.859 mo
500 671.859 li
500 689.359 li
102.625 689.359 li
cp
.117006 .069337 .0465095 0 cmyk
f
102.625 670.609 mo
500 670.609 li
500 671.859 li
102.625 671.859 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
102.625 689.359 mo
500 689.359 li
500 690.609 li
102.625 690.609 li
cp
f
gsave
72 72 mo
540 72 li
540 720 li
72 720 li
cp
clp
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g29 <1C60D8A8C9B7C12A5D57013BA916C668CF51314C605010C33DB564C38B
1B372C3E0B39C5E0B0312A397D887C311600286689E1C2FD73F608CE42091361
EAFA7ABE1E5D6A5489A137254AB694989F27E7B4E3461365FA59B527C5146A25
E5524EB01B9F5F76442D31E6ED000A8CCB4C2535296B69FC12ED35EF9BC629F8
8F10376588990AB65115245EF4A7D75D22D2E479> |-
/g30 <1C60D8A8C9B7C12A52E16AC4D8C2706AD4A35D9C666027434A98470D63
94B870C9D5FDBEEC407317FFDBD190C568790A32D383D56D3AFEE51E0016C884
B292BE8036F6D245C8C031DEE0DD62B42CBB5F156475984850C35D7DE17E353C
C27683CC79F57B06C1309EFCD5E789546540D0119B4B090E89425F62A8A362C8
D0BA07FD8F0E2C3F30C289> |-
/g31 <1C60D8A8C9B7C12A5D1678A4D12F4365A884AD6A22E49BCE182C48DFD2
5D7428C41275CAABB678AE8C9EEDEB8CCAAD49172E400DB6FFFE35462F4A32AD
7E2C5F2FBEE7F407A59133CE0FDF02CC0A6751DC50B1C200434A5CCC0B31BB5F
59DA66C98765A52344133AB15B82DC54950A811AAD1BE85AD20CEA6A79B68841
E28E8D322C4499080847CB6104D47C3BA24A830ED25734F4A691092F837FE2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 29 /g29 put
dup 30 /g30 put
dup 31 /g31 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
224{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 82 mo
(\026\010\035\012\031\036\002\011\036\014\037\025\002\010\035\021\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 6.17056 6.17053 6.17056 6.17056 
0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
283.172 82 mo
(\0350\035\025\(\035\023%\003\004\003\035\005\016\035\026\034\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\035\005\026\035\023%\003\035\022\010\023\023\003\004\026\035\006\005\023%\035\023%\003)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 2.36743 4.75204 4.74344 2.84607 4.75204 2.36743 
1.8974 4.28204 2.36743 4.75204 4.75208 2.36743 4.28204 4.74344 4.75208 2.3674 4.74347 2.84604 
1.90604 4.75204 4.74344 2.36743 4.75208 2.84604 4.74344 4.75208 4.74344 2.36743 1.90601 4.75208 
2.3674 2.36743 4.75208 4.74344 2.36743 4.75204 4.75208 2.36743 2.36743 4.74344 2.84604 4.75208 
2.36743 6.17084 1.8974 2.36743 4.75204 2.3674 2.36743 4.75208 0 ]xsh
128.875 93.25 mo
(\013\005\002\003\026\035\005\026\024\003\027)
[4.75206 1.89742 4.28204 4.75206 4.75206 2.36742 1.90602 4.74345 4.75206 4.74344 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
107.313 148.875 mo
(\003\016\037)
[6.17681 6.77673 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
110.125 176.859 mo
(\005\010\011\007\012\010\035\022\023)
[6.6879 6.6879 6.6879 6.6879 6.6879 6.68791 6.6879 6.6879 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 200.469 mo
(.\003\023 \004\026\016\035\023%\003\035\034\(\(\016\003\023\035\010\(\023\003\004\035\023%\003\035\015\010\016\023\035\011%\010\004\010\011\023\003\004\035\032\010\023\011%\003\024')
[6.17085 4.75206 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.74344 2.21355 2.36742 4.28204 4.75208 2.3674 2.36743 4.74345 2.36742 2.37604 4.74345 2.84605 
2.36742 2.36742 4.75208 4.74344 2.36743 1.90601 4.75206 4.28206 2.36742 2.36742 4.28204 4.74345 
4.75206 2.84605 4.74345 4.28204 2.36743 4.75204 2.83743 2.36743 7.12808 4.75208 2.3674 4.28204 
4.74347 4.75208 4.74344 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 221.094 mo
(\023\003\014\024\002\016\011\035)
[6.79131 5.23934 3.14169 5.73782 3.6591 5.73782 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g51 <1C60D8A8C9B51976DEAC9C8008911E4D034652D3EAABC87E6A70A610BE
57C616538470D59B95053C65D324B58C4F026BEA73C8F421E0DCFCC72391A483
A2EA4F92D83D9F2C8381EF85A9215867D86002317A5D9CDE20A29EC9888DB695
E3165947C3E3D0ACE6CC06FD9E555F1B5BFA03FFC68C6AB06AF7FA2265DF575E
5DA681A54B2625E68A4774B94DC8C084BB6AC7132D41125A5E9F69343217E625
C07698FB77EEDE3A11A9DF7A2FFE30B60DDBCF08F47A92AB4450B6EDE32C1606
6BD4CBA107E1829EC5BF9E11B5E08C26B580A7B3E894C1CD7726B1686D6A39F3
7D94E9CB1C336C76F718C87239F97E513A7DE8F130C7E8063710A7FDF1EE73C8
0E0B7F09BD4AD533748ACC4CB75AC2BF864F98CBA805168285653D0130E50963
B21D13C05BFFE7E9238DAF6C1BDC62B86FF680FFDA49C5E62CA20D5CF478AE34
2403FB49973DCAA29FDC9138DBAD65251BB6495DC8DB4C974069B8252F9E4826
7180A4A22A19D07EBE70DEC00E909F42EF4F99CBFCF1AA5386F2E1AF86CF7FAF
A7419697524D531199332F5D72409058493E4A0C1E9C01DF4808EAC8E0129A3B
32975F1D4197ECC5138950D0D4273CD8E4CBE5ECBEACA88E32C88363AC2B1583
9C98AA9B13AFB0C12DAA22E5CBE95D322590DE80AFCBA5CADFEAAC0D9EEB1A40
DDB47C2EB97A446D0DDCDCC5FA87A3994B5BB1882645BFCA161F30B59277724C
E35029DCEFFB924A8133DE64E67363EC0552A66CD17F153BA5E74B0600D21744
D51F00E6C059D98EB44F37EFFEFF504CCCFE1EA979812626DE7C44B2F4C86956
5BD5D1282A0CEF697B75C8859825D14F35ACA007B1086B38B58A06026D8CC785
FA5177B4FD5E80BB00FF8A36748C6F46D7FE3F96C4655C6C107BF2D0DB62D14F
636A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 51 /g51 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/g48 /g49 /g50 /g51 204{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
128.875 241.719 mo
(3\004\003\023 \004\026\035\020%\003\035\034\(\(\016\003\023\035\010\(\023\003\004\035\023%\003\035\015\010\016\023\035\011%\010\004\010\011\023\003\004\035\032\010\023\011%\003\024)
[8.68369 2.84604 4.75206 2.36743 4.74345 2.84604 4.75206 2.36742 5.205 4.75206 4.75206 2.36742 
4.74345 2.21353 2.36743 4.28204 4.75206 2.36742 2.36742 4.74347 2.36742 2.36742 4.75208 2.84604 
2.36743 2.36742 4.74345 4.75206 2.36742 1.90602 4.75206 4.27344 2.37604 2.3674 4.27344 4.75208 
4.75204 2.83746 4.75204 4.28204 2.36743 4.75204 2.83746 2.3674 7.12808 4.75208 2.36743 4.28204 
4.74347 4.75204 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 262.344 mo
(!\022\002\027\030\011\035)
[5.73782 5.74729 3.64963 5.7473 7.31805 5.22987 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 284.219 mo
(\026\004\004\012\024\015\004\027\011\015\011\012\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
258.484 284.219 mo
(\0350\035\025\(\035\026\034\035\032\010\023\011%\035%\010\016\035!\003\023\035*\003\003\026\035\010\023\023\003\032\022\023\003\024+\035\034\004\035\005\(\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 4.75204 4.74347 2.3674 7.12811 4.74344 2.36743 
4.28204 4.75204 2.36743 4.75208 4.74344 4.28204 2.36743 4.28204 4.75204 2.36743 2.36743 4.74347 
4.75204 4.75204 4.74347 2.36743 4.75204 2.36743 2.3674 4.75208 7.11948 4.75208 2.3674 4.75208 
4.74347 2.3674 2.36743 4.75204 2.84607 2.36743 1.8974 2.37604 2.3674 2.36743 4.74344 4.75208 
2.36743 4.74344 2.84604 4.75208 4.28204 1.90601 4.74347 4.75204 4.28204 2.36743 7.11948 4.75208 
2.3674 4.28207 0 ]xsh
128.875 295.469 mo
(\034\022\003\004\010\023\005\034\026\035\(\010\005\015\003\024)
[4.75206 4.74345 4.75206 2.84605 4.74344 2.36743 1.90601 4.75206 4.74345 2.36743 2.36742 4.75206 
1.90602 1.90602 4.74344 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
107.313 351.094 mo
(\003\016\037)
[6.17681 6.77673 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
110.125 379.078 mo
(\005\010\011\007\012\010\035\022\005\010\011\007\024\013\025\002\001\023)
[6.6879 6.6879 6.6879 6.6879 6.6879 6.68791 6.6767 6.68791 6.6879 6.6879 6.6879 6.68791 
6.6879 6.6879 6.6879 6.6879 6.6879 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 402.688 mo
(.\003\023 \004\026\016\035\023%\003\035\034\(\(\016\003\023\035\010\(\023\003\004\035\023%\003\035\015\010\016\023\035\011%\010\004\010\011\023\003\004\035\034\(\035\023%\003\035\016 *\016\003\) \003\026\011\003\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\005\002\003\026\035\013\004\034 \022\035\024 \004\005\026\013\035\023%\005\016)
[6.17085 4.75206 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.74344 2.21355 2.36742 4.28204 4.75208 2.3674 2.36743 4.74345 2.36742 2.37604 4.74345 2.84605 
2.36742 2.36742 4.75208 4.74344 2.36743 1.90601 4.75206 4.28206 2.36742 2.36742 4.28204 4.74345 
4.75206 2.84605 4.74345 4.28204 2.36743 4.75204 2.83743 2.36743 4.75208 2.3674 2.36743 2.3674 
4.75208 4.74347 2.36743 4.28204 4.75204 4.75204 4.28204 4.74347 4.75208 4.74344 4.75204 4.75208 
4.27344 4.75208 2.3674 4.28204 4.75204 4.74347 2.36743 4.75208 2.84604 4.74344 4.75208 2.3674 
4.74347 4.28204 2.36743 2.3674 4.75208 4.75204 2.36743 4.74344 1.90604 4.28204 4.75204 4.74347 
2.36743 4.75204 2.84604 4.74347 4.75204 4.75208 2.3674 4.74347 4.75204 2.84607 1.8974 4.75204 
4.75208 2.36743 2.3674 4.74347 1.90601 0 ]xsh
110.125 413.938 mo
(\032\010\023\011%')
[7.12809 4.74345 2.36742 4.28204 4.75206 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 433.734 mo
(\014\010\022\023 \004\005\026\013\035\013\004\034 \022\016)
[6.17085 4.75206 4.74345 2.36742 4.75206 2.84604 1.89742 4.75206 4.75206 2.36742 4.74345 2.84605 
4.75206 4.74345 4.75206 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
175.672 433.734 mo
(\035\010\004\003\035\005\026\024\003\027\003\024\035\(\004\034\032\035\015\003\(\023\035\023\034\035\004\005\013%\023+\035\016\023\010\004\023\005\026\013\035\010\023\035\034\026\003'\0351\004\034 \022\0352\003\004\034\035\024\003\026\034\023\003\016\035\023%\003\035\003\026\023\005\004\003\035\022\010\023\023\003\004\026+)
[2.36742 4.75206 2.83745 4.75206 2.36742 1.90602 4.74345 4.75206 4.75206 4.28204 4.74345 4.75206 
2.36742 2.36743 2.84604 4.74345 7.1281 2.36742 1.90602 4.74344 2.36743 2.36743 2.37604 2.3674 
4.74347 2.3674 2.84607 1.90601 4.74344 4.75208 2.3674 2.36743 2.36743 4.28204 2.36743 4.75204 
2.83743 2.37604 1.8974 4.75208 4.75208 2.3674 4.74344 2.36743 2.36743 4.75208 4.75204 4.74344 
2.36743 2.36743 6.64948 2.84604 4.75204 4.74347 4.75208 2.3674 4.28207 4.74341 2.84607 4.75208 
2.3674 4.74344 4.75208 4.75208 4.74344 2.36743 4.75204 4.28204 2.36743 2.36743 4.74344 4.75208 
2.36743 4.75204 4.74347 2.3674 1.90604 2.84604 4.74344 2.37604 4.74344 4.75208 2.36743 2.3674 
4.74347 2.84604 4.75208 0 ]xsh
110.125 446.234 mo
(\016\034\035\023%\003\035\003\027\022\004\003\016\016\005\034\026\035)
[4.28204 4.75206 2.36742 2.36742 4.74345 4.75206 2.36742 4.74345 4.28204 4.75208 2.84604 4.74345 
4.28204 4.28204 1.90602 4.75204 4.74347 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
179.457 446.234 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
189 446.234 mo
(\012\010\035\022\032\023)
[6.17055 6.17055 6.17056 6.17055 6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
226.031 446.234 mo
(\035\005\016\035\003\) \005\002\010\015\003\026\023\035\023\034\035)
[2.36742 1.90602 4.28204 2.36743 4.74344 4.75208 4.75204 1.90602 4.27345 4.75204 1.90601 4.75208 
4.74344 2.36743 2.36743 2.3674 4.75208 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
287.756 446.234 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
297.313 446.234 mo
(\012\010\035\022\023)
[6.17056 6.17053 6.17056 6.17053 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
328.172 446.234 mo
(')sh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 466.859 mo
(\001\010\002\010\031\003\014\003\002\011\035)
[6.27404 5.22987 3.6591 5.22987 8.3717 5.23935 3.1322 5.23935 3.64963 5.23935 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 488.734 mo
(\024\013\025\002\001)
[6.17055 6.17055 6.17056 6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
159.734 488.734 mo
(\0350\035\020%\003\035\005\026\024\003\027\035\034\(\035\010\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\035\005\026\035\023%\005\016\035\032\010\023\011%\003\004/\016\035\022\010\023\023\003\004\026)
[2.36742 2.84605 2.36742 5.21361 4.74345 4.75206 2.36742 1.90602 4.74345 4.75206 4.75206 4.27344 
2.36742 4.75206 2.36742 2.36743 4.75206 2.36742 4.28204 4.74347 4.75204 2.36743 4.75206 2.83745 
1.90601 4.75206 4.74345 2.36743 4.75204 2.84604 4.74347 4.75204 4.75208 2.3674 1.90604 4.74344 
2.36743 2.36743 4.75208 1.90601 4.28204 2.36743 7.11945 4.75208 2.36743 4.28204 4.74347 4.75204 
2.84604 1.63254 4.28204 2.3674 4.74347 4.75208 2.36743 2.3674 4.75204 2.83746 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 509.359 mo
(\023\003\014\024\002\016\011\035)
[6.79131 5.23934 3.14169 5.73782 3.6591 5.73782 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
128.875 531.234 mo
(\020%\003\035\034\(\(\016\003\023\035\010\(\023\003\004\035\023%\003\035\015\010\016\023\035\011%\010\004\010\011\023\003\004\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\004\034 \022+\035\034\004\035)
[5.21359 4.74345 4.75206 2.36743 4.75206 2.20505 2.36743 4.28204 4.75206 2.36743 2.36742 4.75206 
2.36742 2.36743 4.74345 2.84604 2.36743 2.36742 4.75206 4.74345 2.36742 1.90602 4.75206 4.28204 
2.36743 2.36742 4.28204 4.74345 4.75206 2.84605 4.74344 4.28204 2.36743 4.75206 2.84605 2.3674 
4.28204 4.74347 4.75208 2.3674 4.74344 2.84607 4.75208 4.74344 2.3674 4.75208 4.28204 2.36743 
2.36743 4.75204 4.74344 2.36743 4.75208 2.84604 4.74344 4.75208 4.74347 2.37601 2.36743 4.74344 
2.84607 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
354.344 531.234 mo
(\033\034)
[6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
366.688 531.234 mo
(\035\005\(\035\023%\003\035\032\010\023\011%\035\006\010\016\035\016 \011\011\003\016\016\( \015\035* \023)
[2.36743 1.90601 2.36743 2.3674 2.36743 4.75208 4.74344 2.36743 7.12808 4.75208 2.3674 4.28204 
4.74347 2.36743 6.17084 4.75204 4.28204 2.36743 4.28204 4.74344 4.28207 4.28204 4.75204 4.28204 
4.27344 2.37604 4.74347 1.90601 2.36743 4.75204 4.74344 0 ]xsh
128.875 542.484 mo
(\023%\003\035\013\004\034 \022\035\005\023\016\003\015\(\035\024\005\024\035\026\034\023\035\032\010\023\011%\035\010\026!\023%\005\026\013)
[2.36742 4.75206 4.74345 2.36743 4.75206 2.84604 4.74345 4.75206 4.74345 2.36742 1.90602 2.36742 
4.28206 4.75206 1.90601 2.36743 2.36742 4.74345 1.90601 4.75208 2.36742 4.75206 4.74345 2.36742 
2.36743 7.12808 4.75208 2.36742 4.28204 4.74345 2.36743 4.75204 4.74347 4.28204 2.3674 4.75208 
1.90601 4.74347 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 563.109 mo
(!\022\002\027\030\011\035)
[5.73782 5.74729 3.64963 5.7473 7.31805 5.22987 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 584.984 mo
(\026\004\004\012\024\015\004\027\011\015\011\012\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
258.484 584.984 mo
(\0350\035\025\(\035\026\034\035\032\010\023\011%\035%\010\016\035!\003\023\035*\003\003\026\035\010\023\023\003\032\022\023\003\024+\035\034\004\035\005\(\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 4.75204 4.74347 2.3674 7.12811 4.74344 2.36743 
4.28204 4.75204 2.36743 4.75208 4.74344 4.28204 2.36743 4.28204 4.75204 2.36743 2.36743 4.74347 
4.75204 4.75204 4.74347 2.36743 4.75204 2.36743 2.3674 4.75208 7.11948 4.75208 2.3674 4.75208 
4.74347 2.3674 2.36743 4.75204 2.84607 2.36743 1.8974 2.37604 2.3674 2.36743 4.74344 4.75208 
2.36743 4.74344 2.84604 4.75208 4.28204 1.90601 4.74347 4.75204 4.28204 2.36743 7.11948 4.75208 
2.3674 4.28207 0 ]xsh
128.875 596.234 mo
(\034\022\003\004\010\023\005\034\026\035\(\010\005\015\003\024)
[4.75206 4.74345 4.75206 2.84605 4.74344 2.36743 1.90601 4.75206 4.74345 2.36743 2.36742 4.75206 
1.90602 1.90602 4.74344 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 618.109 mo
(\026\010\035\012\031\036\002\011\036\014\037\025\002\010\035\021\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 6.17056 6.17053 6.17056 6.17056 
0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
283.172 618.109 mo
(\0350\035\025\(\035\023%\003\004\003\035\005\016\035\026\034\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\035\005\026\035\023%\003\035\022\010\023\023\003\004\026\035\006\005\023%\035\023%\003)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 2.36743 4.75204 4.74344 2.84607 4.75204 2.36743 
1.8974 4.28204 2.36743 4.75204 4.75208 2.36743 4.28204 4.74344 4.75208 2.3674 4.74347 2.84604 
1.90604 4.75204 4.74344 2.36743 4.75208 2.84604 4.74344 4.75208 4.74344 2.36743 1.90601 4.75208 
2.3674 2.36743 4.75208 4.74344 2.36743 4.75204 4.75208 2.36743 2.36743 4.74344 2.84604 4.75208 
2.36743 6.17084 1.8974 2.36743 4.75204 2.3674 2.36743 4.75208 0 ]xsh
128.875 629.359 mo
(\013\005\002\003\026\035\005\026\024\003\027)
[4.75206 1.89742 4.28204 4.75206 4.75206 2.36742 1.90602 4.74345 4.75206 4.74344 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
107.313 684.984 mo
(\034\002\027\024\032)
[6.77673 4.32163 6.77673 6.77673 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
110.125 712.969 mo
(\027\011\013\005\010\024)
[6.6879 6.6879 6.68789 6.68791 6.6879 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
150.25 712.969 mo
(\007\024\013\025\002\001\022\023)
[6.6879 6.6879 6.6879 6.68791 6.6879 6.6879 6.6879 0 ]xsh
grestore
.750179 .679652 .670191 .901488 cmyk
ZQVJYQ+DejaVuLGCSerif*1 [10 0 0 -10 0 0 ]msf
36 46 mo
(\001\002\003\004\005\006\007\010\011\012\003\013\014\015\002\016\002\013\017\012\002\003\020\021\022\023\013\024\025\013\026\013\027)
[10.2299 5.95993 3.99994 5.59998 6.43997 7.50992 5.91003 5.14008 6.4299 3.19 4.01001 3.15994 
3.89999 4.01001 5.95993 5.63995 5.95993 3.15994 6.71997 3.19 5.95993 4.01001 3.69995 6.02005 
4.77997 9.47998 3.17001 6.84998 7.29004 3.15994 6.36002 3.17001 0 ]xsh
547.2 46 mo
("\013\021\020\013\031)
[6.36005 3.16998 6.02008 3.69995 3.16998 0 ]xsh
36 753 mo
(\005\003\003\032\033\034\034\035\021\004\010\036\021\022\002\004\012\007\036\004\021\023\034\037\002\016\002\010\007\034\026\034\035\021\004\010\034\002\032 \034\037\002\036\036\036)
[6.43997 3.99994 3.99994 6.39999 3.37006 3.37006 3.35999 6.39999 6.02005 5.59998 5.14008 3.17001 
6.02005 4.7699 5.97 5.5899 3.20007 5.89996 3.17001 5.59998 6.02005 9.49005 3.35999 3.09998 
5.95993 5.63995 5.95993 5.14008 5.89996 3.37006 6.36002 3.37006 6.38992 6.03012 5.59998 5.13 
3.37006 5.95993 6.39999 3.19 3.37006 3.09998 5.95993 3.15994 3.17001 0 ]xsh
466.213 753 mo
(!"\034#$\034#!\030$\013!\026\033"%\013\017\001)
[6.36002 6.36002 3.37006 6.36002 6.36002 3.35999 6.36002 6.36002 6.35999 6.36005 3.16998 6.36005 
6.36005 3.37 6.36005 6.36005 3.15991 6.71997 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 4 4
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
[1 0 0 1 0 0 ]ct
72 72 mo
540 72 li
540 720 li
72 720 li
cp
false sop
/3 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
72 72 mo
539.5 72 li
539.5 719.5 li
72 719.5 li
cp
f
92 72 mo
520 72 li
520 719.5 li
92 719.5 li
cp
.0162966 .0119936 .0119936 0 cmyk
f
520 72 mo
521.25 72 li
521.25 720 li
520 720 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
90.75 72 mo
92 72 li
92 720 li
90.75 720 li
cp
f
102.625 72 mo
500 72 li
500 258.156 li
102.625 258.156 li
cp
0 0 0 0 cmyk
f
500 72 mo
501.25 72 li
501.25 259.406 li
500 259.406 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 258.156 mo
500 258.156 li
500 259.406 li
102.625 259.406 li
cp
clp
101.375 258.156 mo
501.25 258.156 li
501.25 259.406 li
101.375 259.406 li
cp
f
grestore
101.375 72 mo
102.625 72 li
102.625 259.406 li
101.375 259.406 li
cp
f
102.625 282.844 mo
500 282.844 li
500 669.141 li
102.625 669.141 li
cp
0 0 0 0 cmyk
f
500 282.844 mo
501.25 282.844 li
501.25 670.391 li
500 670.391 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 669.141 mo
500 669.141 li
500 670.391 li
102.625 670.391 li
cp
clp
101.375 669.141 mo
501.25 669.141 li
501.25 670.391 li
101.375 670.391 li
cp
f
grestore
101.375 282.844 mo
102.625 282.844 li
102.625 670.391 li
101.375 670.391 li
cp
f
102.625 284.094 mo
500 284.094 li
500 301.594 li
102.625 301.594 li
cp
.117006 .069337 .0465095 0 cmyk
f
102.625 282.844 mo
500 282.844 li
500 284.094 li
102.625 284.094 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
102.625 301.594 mo
500 301.594 li
500 302.844 li
102.625 302.844 li
cp
f
102.625 693.828 mo
500 693.828 li
500 719.5 li
102.625 719.5 li
cp
0 0 0 0 cmyk
f
500 693.828 mo
501.25 693.828 li
501.25 720 li
500 720 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
101.375 693.828 mo
102.625 693.828 li
102.625 720 li
101.375 720 li
cp
f
102.625 695.078 mo
500 695.078 li
500 712.578 li
102.625 712.578 li
cp
.117006 .069337 .0465095 0 cmyk
f
102.625 693.828 mo
500 693.828 li
500 695.078 li
102.625 695.078 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
102.625 712.578 mo
500 712.578 li
500 713.828 li
102.625 713.828 li
cp
f
gsave
72 72 mo
540 72 li
540 720 li
72 720 li
cp
clp
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 80.75 mo
(.\003\023 \004\026\016\035\023%\003\035\005\026\022 \023\035\016 *\016\003\) \003\026\011\003\035\032\010\023\011%\003\024\035*!\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%')
[6.17085 4.75206 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
1.90601 4.74345 4.75206 4.74345 2.37602 2.36743 4.27344 4.75206 4.75206 4.28204 4.74345 4.75206 
4.74345 4.75206 4.75206 4.28206 4.74344 2.36743 7.12808 4.74345 2.37604 4.27344 4.75206 4.75208 
4.74344 2.3674 4.75208 4.28204 2.36743 2.36743 4.75204 4.74344 2.36743 4.75208 2.83743 4.75204 
4.28204 1.90604 4.74344 4.75208 4.28204 2.36743 7.12808 4.74344 2.36743 4.28204 4.75208 0 
]xsh
110.125 101.797 mo
(\031\034\004\035\010\035\032\010\023\011%\003\004\035)
[5.2136 4.74345 2.84605 2.36742 4.75206 2.36743 7.11948 4.75206 2.36742 4.28206 4.75206 4.74345 
2.84604 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: MYABAA+LiberationSans-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYR+LiberationSans-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g3 <1C60D8A8C9B7A73DB685AE6E2D39CFACA07D80E0A1530F9F3B7D8F3E25B
822327C12BC1EB04EC7CE342D61FC2E43628BBC26CA06E773CC9CCF25EC3C30F
437DE9887BC836F59A9E8740F93E8622C90770BAFA96929E227A87FEDDD342A1
7D371B3D4F7786D39E603A1386FB7BC42E4CC6D59B4B624428BAC6D33C2766E6
E66C099C6FA26B06A815414803AC628AD971ABFBECE3EF09ACBD01C6F37E1866
BA21C0D207A2A25942ADA0BF9EFA204BA849D17629EAAB9631CAE38AE2EAE884
34AD0DCD3497DD30F1CC36EA6F0FF32B363B5BF6FC8A4AB4A039AC0A733EE379
B8B4749410BCDEB3C17CD8BCFA49F7906A3C77C73A4660136F8BF475EF5F2B45
D2534C90242E6C74DD49292A70498E40E73671CE1772F6D84CC8EE806819C59B
F637650D1B6118A1943662A2C411CB2FB9E580E5071A16C1761315F06858FD2A
A9321F021802AF1DD6232A0142995B2020CFF9038C779F2FA09> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYR+LiberationSans-Italic /Encoding get
dup 3 /g3 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYR+LiberationSans-Italic*1 
[/g0 /g1 /g2 /g3 252{/.notdef}rp]
ZQVJYR+LiberationSans-Italic nf
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
165.645 101.797 mo
(\001)sh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
172.773 101.797 mo
(\035\006\005\023%\035\005\026\022 \023\035\016\003\) \003\026\011\003\035)
[2.36742 6.17085 1.8974 2.37604 4.74345 2.36742 1.90602 4.75206 4.74345 4.75206 2.36742 2.36743 
4.28204 4.74345 4.75206 4.75206 4.74344 4.75208 4.28204 4.74345 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
253.002 101.797 mo
(\003)sh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
257.284 101.797 mo
(+\035\023%\003\035\003\027\022\004\003\016\016\005\034\026\016\035)
[2.36743 2.3674 2.37604 4.74347 4.75204 2.36743 4.74344 4.28204 4.75208 2.84604 4.74347 4.28204 
4.28204 1.90601 4.75208 4.74344 4.28204 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
324.24 101.797 mo
(\001\002)
[7.11948 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g32 <1C60D8A8C9B7C12A5D2286CEB768140BB1514329AC678A9E7E3E2B9DDF> |-
/g33 <1C60D8A8C9B7C12A524DBF00FB92B071C074D7C413AC9C0B29B4827116
119A158A448485ED198CB05B5CD9A0EE1F274E83628DBF27335CE60A394A2FF6
7B03C04CE295CC4219E152> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 32 /g32 put
dup 33 /g33 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 222{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
333.891 101.797 mo
(\024\013\025\002\001\022\023)
[6.17056 6.17053 6.17056 6.17053 6.17056 6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
377.094 101.797 mo
(\035\010\026\024)
[2.36743 4.75204 4.75208 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 114.297 mo
(\003\002)
[4.27344 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
116.781 114.297 mo
(\021\002\003\021\011\013\005\010\024\022)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 6.17055 6.17055 6.17055 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
178.5 114.297 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
188 114.297 mo
(\021\011\015\013\011\022\023 )
[6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 6.17055 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
239.75 114.297 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
249.25 114.297 mo
(\012\010\035\022\023\023)
[6.17055 6.17055 6.17056 6.17053 6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
286.281 114.297 mo
(\035\010\004\003\035\003\) \005\002\010\015\003\026\023')
[2.36743 4.75204 2.83743 4.75208 2.36743 4.75204 4.74347 4.75204 1.90601 4.28204 4.74347 1.90601 
4.75208 4.74344 2.36743 0 ]xsh
110.125 135.344 mo
(\033\034\023\003\035\023%\010\023\035\016\034\032\003\035\022\010\023\023\003\004\026\016+\035\(\034\004\035\003\027\010\032\022\015\003\035)
[6.17085 4.75206 2.36742 4.74345 2.36742 2.36743 4.75206 4.75206 2.36742 2.36743 4.28204 4.74345 
7.12808 4.74345 2.36743 4.75204 4.75208 2.36742 2.36742 4.74347 2.84604 4.75206 4.28204 2.36742 
2.36743 2.36742 4.74345 2.84604 2.36743 4.75206 4.28204 4.74345 7.1281 4.74345 1.90601 4.75206 
0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
253.109 135.344 mo
(\015!)
[6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
265.453 135.344 mo
(+\035\032\010\023\011%\035\023%\003\035\003\032\022\023!\035\016\023\004\005\026\013'\035\020%\005\016\035\032\003\023%\034\024\035\006\005\015\015\035\004\003\023 \004\026\035\023%\003\035\003\032\022\023!)
[2.36743 2.3674 7.12811 4.74344 2.36743 4.28204 4.75204 2.36743 2.36743 4.75204 4.74347 2.36743 
4.75204 7.11948 4.75208 2.36743 4.28204 2.3674 4.28204 2.36743 2.84604 1.90601 4.74347 4.75208 
2.3674 2.36743 5.21359 4.74347 1.90601 4.28204 2.36743 7.12808 4.74344 2.36743 4.75208 4.75204 
4.74344 2.36743 6.17084 1.90604 1.90601 1.90604 2.3674 2.84604 4.74347 2.36743 4.75204 2.84604 
4.74347 2.36743 2.3674 4.75204 4.75208 2.36743 4.74347 7.12805 4.74347 2.36743 0 ]xsh
110.125 146.594 mo
(\016\023\004\005\026\013\035\006%\003\026\035\023%\003\035\022\010\023\023\003\004\026\035\016 \011\011\003\016\016\( \015\015!\035\032\010\023\011%\003\016\035\023%\003\035\003\032\022\023!\035\016\023\004\005\026\013\035\005\026\035\023%\003\035\005\026\022 \023')
[4.28204 2.36742 2.84605 1.90601 4.74345 4.75206 2.36743 6.17084 4.74345 4.75206 4.75206 2.36742 
2.36743 4.74345 4.75206 2.36742 4.75206 4.74345 2.36742 2.36743 4.75206 2.84605 4.74344 2.36743 
4.28204 4.75206 4.28204 4.28204 4.74345 4.28204 4.28204 2.36743 4.75204 1.90604 1.8974 4.28204 
2.36743 7.12808 4.75204 2.36743 4.28204 4.74347 4.75204 4.28204 2.36743 2.36743 4.74344 4.75208 
2.3674 4.75208 7.11948 4.75208 2.3674 4.28204 2.36743 4.28204 2.36743 2.84604 1.8974 4.75208 
4.75204 2.36743 1.90601 4.74347 2.36743 2.3674 4.75208 4.74344 2.37604 1.8974 4.75208 4.75204 
4.74347 2.36743 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 167.219 mo
(\023\003\014\024\002\016\011\035)
[6.79131 5.23934 3.14169 5.73782 3.6591 5.73782 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g52 <1C60D8A8C9B81F2C04C7E56AC9C16836FDDFDD9F85150B08E4FC5E9D54
7C74445540ECBC39B303E15F62CBE6C4A554C48CBACF1A9648FE1BC2FC2E4AA5
1B9B3B2D03DE899BEE60C5BA0605F8219B10E679839F6A6462E043ED5DEE782D
BF86B4FADCE5A551D488B15E30474C46FAE77985283D2D00D619E4668892D8FF
481E8154EA> |-
/g53 <1C60D8A8C9B81F2C3A181ED183F10E7E61997FCF375CCD6CBE65A5A7F5
093ABC201EBE4A85A9F59D8E7E3C8F44B752772296713DA06D194513A6437692
A8A48DCF006CC255A1CCA9761187BD70F92393CD5C0F292E325DAF0B526B7C1B
5ED90F8EDE1108B6B4D42AD80D241E6C0117019DCA5348F4D20922D395FE0BF1
80B39E9B3176> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 52 /g52 put
dup 53 /g53 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/g48 /g49 /g50 /g51 /g52 /g53 202{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
128.875 187.844 mo
(\020%\003\0354\022\034\016\016\005*\015!\035\003\032\022\023!5\035\016 *\016\003\) \003\026\011\003\035\032\010\023\011%\003\024\035*!\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%+\035\005\026\035\016\023\004\005\026\013\035\(\034\004\032)
[5.21359 4.74345 4.75206 2.36743 2.84604 4.74345 4.75206 4.28204 4.28204 1.90602 4.74345 1.90601 
4.28204 2.36743 4.75206 7.11949 4.75204 2.36743 4.28204 2.84604 2.36743 4.28204 4.74345 4.75206 
4.28204 4.74345 4.75206 4.75206 4.74345 4.75206 4.28206 4.74344 2.36743 7.12808 4.75208 2.36743 
4.27344 4.75204 4.75204 4.74347 2.36743 4.75204 4.28204 2.3674 2.36743 4.75208 4.74347 2.3674 
4.75204 2.84607 4.74347 4.28204 1.90601 4.75204 4.74344 4.28204 2.36743 7.12811 4.74344 2.36743 
4.28204 4.75204 2.36743 2.36743 1.90601 4.74347 2.37601 4.27344 2.36743 2.84604 1.90604 4.75204 
4.74347 2.3674 2.36743 4.75208 2.84604 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 208.469 mo
(!\022\002\027\030\011\035)
[5.73782 5.74729 3.64963 5.7473 7.31805 5.22987 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 230.344 mo
(\026\004\004\012\024\015\004\027\011\015\011\012\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
258.484 230.344 mo
(\0350\035\025\(\035\026\034\035\032\010\023\011%\035%\010\016\035!\003\023\035*\003\003\026\035\010\023\023\003\032\022\023\003\024+\035\034\004\035\005\(\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 4.75204 4.74347 2.3674 7.12811 4.74344 2.36743 
4.28204 4.75204 2.36743 4.75208 4.74344 4.28204 2.36743 4.28204 4.75204 2.36743 2.36743 4.74347 
4.75204 4.75204 4.74347 2.36743 4.75204 2.36743 2.3674 4.75208 7.11948 4.75208 2.3674 4.75208 
4.74347 2.3674 2.36743 4.75204 2.84607 2.36743 1.8974 2.37604 2.3674 2.36743 4.74344 4.75208 
2.36743 4.74344 2.84604 4.75208 4.28204 1.90601 4.74347 4.75204 4.28204 2.36743 7.11948 4.75208 
2.3674 4.28207 0 ]xsh
128.875 241.594 mo
(\034\022\003\004\010\023\005\034\026\035\(\010\005\015\003\024)
[4.75206 4.74345 4.75206 2.84605 4.74344 2.36743 1.90601 4.75206 4.74345 2.36743 2.36742 4.75206 
1.90602 1.90602 4.74344 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
107.313 297.219 mo
(\034\002\027\024\032)
[6.77673 4.32163 6.77673 6.77673 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
110.125 325.203 mo
(\027\011\013\005\010\024)
[6.6879 6.6879 6.68789 6.68791 6.6879 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
150.25 325.203 mo
(\007\024\013\025\002\001\022\005\010\011\007\024\013\025\002\001\023)
[6.6879 6.6879 6.6879 6.68791 6.6879 6.6879 6.67671 6.6879 6.6879 6.6879 6.6879 6.68791 
6.6879 6.6879 6.68791 6.6879 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 348.813 mo
(.\003\023 \004\026\016\035\023%\003\035\005\026\022 \023\035\016 *\016\003\) \003\026\011\003\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\005\002\003\026\035\013\004\034 \022\035\024 \004\005\026\013\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%\035\034\022\003\004\010\023\005\034\026')
[6.17085 4.75206 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
1.90601 4.74345 4.75206 4.74345 2.37602 2.36743 4.27344 4.75206 4.75206 4.28204 4.74345 4.75206 
4.74345 4.75206 4.75206 4.28206 4.74344 2.36743 4.28204 4.75206 4.74345 2.36742 4.75206 2.84605 
4.74345 4.75204 2.36743 4.75208 4.28204 2.36743 2.3674 4.74344 4.75208 2.36743 4.74344 1.90604 
4.28204 4.75204 4.74344 2.37604 4.74347 2.84604 4.74344 4.75208 4.75208 2.3674 4.74344 4.75208 
2.84607 1.8974 4.75204 4.75204 2.36743 2.36743 4.74347 4.75204 2.36743 4.75204 2.83743 4.75208 
4.28204 1.90601 4.74347 4.75204 4.28204 2.36743 7.12808 4.74347 2.3674 4.28207 4.75204 2.36743 
4.74344 4.75208 4.75204 2.83743 4.75208 2.36743 1.90601 4.74344 4.75208 0 ]xsh
110.125 369.859 mo
(\031\034\004\035\010\035\032\010\023\011%\003\004\035)
[5.2136 4.74345 2.84605 2.36742 4.75206 2.36743 7.11948 4.75206 2.36742 4.28206 4.75206 4.74345 
2.84604 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: MYABAA+LiberationSans-Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYR+LiberationSans-Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g4 <1C60D8A8C9B7EF322BA8277E367FDCB97A07D634059B767A59062C068AC
7EBC9FC57F0B4FCF0A2E8FE2628D900803CD8907CEA5BB3DC6651C15E816CF59
4B7DFB76D71500DC96E57C05CCA0C2C3B99EDFB60ABD05EF3336F618FFD40B4C
96BE041BC090FF7BDE9B5A7ABBB19162124D66E6A223E7C1A1F986F168E5182C
14C3F368B21546ED1BBB53649CF8C839926B0C3EF989FA9F2D2697B62F051F1C
EEF1061A1E34F25896746F913CC603A3FEE86D0896684FBA5AB9FFE8E0B0FB7D
F56D48F03F1D4583AB4DF0895D7AA4FD8FA8B38349C859247582C1095DA6E876
C9070B2C5542934E6EC46C6FF01A24BDA20737EFA9A97FE6E2AA9F38752EE61C
4803485C12F8C09152AC1702A08871EC19F44B775D591F636D78ABBBB739BD3E
9EFF2B581ABD1F887C4AAE14B2DAD293BCB22D0F0853265EB9574CB4742848A6
013A9E629D0507C1B6304EC619CEDA71FD31FF715B5097B09894E03841196528
3C179AABB81035F99A0E8C144D8F13A0C05A83EA46BDF58381F40B67FA643035
3A857E6C3CB8959BFDAD9282EDE28517023EB20357F65A344A477203B8197043
92979392A77A2DF8B9B94E4AD517B4E6CC3AE9754A464598D9AD41653CDC9169
733> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYR+LiberationSans-Italic /Encoding get
dup 4 /g4 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYR+LiberationSans-Italic*1 
[/g0 /g1 /g2 /g3 /g4 251{/.notdef}rp]
ZQVJYR+LiberationSans-Italic nf
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
165.645 369.859 mo
(\001)sh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
172.773 369.859 mo
(+\035\005\026\022 \023\035\016\003\) \003\026\011\003\035)
[2.36742 2.36743 1.90601 4.74345 4.75206 4.74345 2.36743 2.36742 4.28204 4.75206 4.75206 4.74345 
4.75206 4.74345 4.28204 4.75206 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
237.814 369.859 mo
(\003)sh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
242.096 369.859 mo
(+\035\010\026\024\035\013\004\034 \022\035\005\026\024\003\027\035)
[2.36742 2.36743 4.75206 4.74345 4.75204 2.36743 4.74347 2.84604 4.75204 4.74347 4.75204 2.36743 
1.90601 4.75208 4.74344 4.75208 4.28204 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
310.454 369.859 mo
(\004)sh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
315.198 369.859 mo
(+\035\023%\003\035\003\027\022\004\003\016\016\005\034\026\016\035)
[2.36743 2.3674 2.36743 4.75208 4.75204 2.36743 4.74344 4.28204 4.75208 2.84604 4.74347 4.28204 
4.28204 1.90601 4.74347 4.75204 4.28204 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
382.153 369.859 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
391.844 369.859 mo
(\024\013\025\002\001\022)
[6.17056 6.17053 6.17056 6.17053 6.17056 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
428.875 369.859 mo
(\004)sh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
433.625 369.859 mo
(\023)sh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
439.797 369.859 mo
(\035\010\026\024)
[2.36743 4.75204 4.75208 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 382.359 mo
(\003\002)
[4.27344 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
116.781 382.359 mo
(\021\002\003\021\011\013\005\010\024\022)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 6.17055 6.17055 6.17055 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
178.5 382.359 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
188 382.359 mo
(\021\011\015\013\011\022)
[6.17055 6.17055 6.17056 6.17055 6.17055 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
225.031 382.359 mo
(\004)sh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
229.781 382.359 mo
(\023 )
[6.17055 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
244.5 382.359 mo
(\001\002)
[7.11948 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
254 382.359 mo
(\012\010\035\022)
[6.17056 6.17053 6.17056 0 ]xsh
ZQVJYR+LiberationSans-Italic*1 [8.54688 0 0 -8.54688 0 0 ]msf
278.688 382.359 mo
(\004)sh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
283.438 382.359 mo
(\023\023)
[6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
295.781 382.359 mo
(\035\010\004\003\035\003\) \005\002\010\015\003\026\023')
[2.36743 4.75204 2.83743 4.75208 2.36743 4.75204 4.74347 4.75204 1.90601 4.28204 4.74347 1.90601 
4.75208 4.74344 2.36743 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 402.156 mo
(\014\010\022\023 \004\005\026\013\035\013\004\034 \022\016)
[6.17085 4.75206 4.74345 2.36742 4.75206 2.84604 1.89742 4.75206 4.75206 2.36742 4.74345 2.84605 
4.75206 4.74345 4.75206 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
175.672 402.156 mo
(\035\010\004\003\035\005\026\024\003\027\003\024\035\(\004\034\032\035\015\003\(\023\035\023\034\035\004\005\013%\023+\035\016\023\010\004\023\005\026\013\035\010\023\035\034\026\003'\0351\004\034 \022\0352\003\004\034\035\024\003\026\034\023\003\016\035\023%\003\035\003\026\023\005\004\003\035\022\010\023\023\003\004\026+)
[2.36742 4.75206 2.83745 4.75206 2.36742 1.90602 4.74345 4.75206 4.75206 4.28204 4.74345 4.75206 
2.36742 2.36743 2.84604 4.74345 7.1281 2.36742 1.90602 4.74344 2.36743 2.36743 2.37604 2.3674 
4.74347 2.3674 2.84607 1.90601 4.74344 4.75208 2.3674 2.36743 2.36743 4.28204 2.36743 4.75204 
2.83743 2.37604 1.8974 4.75208 4.75208 2.3674 4.74344 2.36743 2.36743 4.75208 4.75204 4.74344 
2.36743 2.36743 6.64948 2.84604 4.75204 4.74347 4.75208 2.3674 4.28207 4.74341 2.84607 4.75208 
2.3674 4.74344 4.75208 4.75208 4.74344 2.36743 4.75204 4.28204 2.36743 2.36743 4.74344 4.75208 
2.36743 4.75204 4.74347 2.3674 1.90604 2.84604 4.74344 2.37604 4.74344 4.75208 2.36743 2.3674 
4.74347 2.84604 4.75208 0 ]xsh
110.125 414.656 mo
(\016\034\035\023%\003\035\003\027\022\004\003\016\016\005\034\026\035)
[4.28204 4.75206 2.36742 2.36742 4.74345 4.75206 2.36742 4.74345 4.28204 4.75208 2.84604 4.74345 
4.28204 4.28204 1.90602 4.75204 4.74347 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g34 <1C60D8A8C9B7C12A5D13DC946DA58D46156E8061C9E281D8160D145C23
51E0A78248902AF358D861376BDD8A3453C8D010952AE92DDD9FDE248712D548
48C5BCAD3398D8D59985BFE1238F082BF1F5E758C598D0B26FBA213DC6F15827
10D8C2E2C9B436117FE10A04BE31820B11EACC1D21139A3230AE0826075F011F
94C97F25C73E6AA18FC7A3BD22F9A6ADDED2C4ACB9A8A6CD0A293F4A9ED1> |-
/g35 <1C60D8A8C9B7C12A5D280583002C8EEEEBD25DCC585F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 34 /g34 put
dup 35 /g35 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 220{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
179.5 414.656 mo
("#\024\013\025\002\001\022\032\023)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 6.17055 6.17055 6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
241.219 414.656 mo
(\035\005\016\035\003\) \005\002\010\015\003\026\023\035\023\034\035)
[2.36742 1.90602 4.28204 2.36743 4.74344 4.75208 4.75204 1.90604 4.27344 4.75204 1.90601 4.75208 
4.74344 2.36743 2.36743 2.3674 4.75208 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
303 414.656 mo
("#\024\013\025\002\001\022\023)
[6.17056 6.17053 6.17056 6.17053 6.17056 6.17056 6.17053 6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
358.547 414.656 mo
(')sh
110.125 434.453 mo
(\025\(\035\023%\003\035\032\010\023\011%\035\006\010\016\035\016 \011\011\003\016\016\( \015\035* \023\035\023%\003\035\013\004\034 \022\035\016\022\003\011\005\(\005\003\024\035\(\010\005\015\003\024\035\023\034\035\032\010\023\011%\035\010\026!\035\022\010\004\023\035\034\(\035\023%\003\035\005\026\022 \023\035\016\003\) \003\026\011\003+)
[2.36742 2.36742 2.36742 2.36742 4.75206 4.74345 2.36743 7.12808 4.75206 2.36742 4.28206 4.74345 
2.36742 6.17085 4.75204 4.28206 2.36742 4.28204 4.74345 4.28204 4.28206 4.75204 4.28204 4.28204 
2.36743 4.74345 1.90602 2.36742 4.75206 4.74345 2.36742 2.36743 2.37602 4.74345 4.75208 2.3674 
4.74347 2.84604 4.75204 4.74347 4.75204 2.36743 4.28204 4.74347 4.75204 4.28204 1.90604 2.3674 
1.90604 4.74344 4.75208 2.3674 2.36743 4.75204 1.90604 1.8974 4.75208 4.75204 2.36743 2.3674 
4.74347 2.36743 7.12808 4.75204 2.36743 4.28204 4.74347 2.3674 4.75208 4.74344 4.28204 2.36743 
4.75204 4.75208 2.83743 2.36743 2.3674 4.75208 2.36743 2.3674 2.36743 4.75208 4.74344 2.36743 
1.90601 4.75208 4.75204 4.74347 2.3674 2.36743 4.28204 4.75208 4.74344 4.75208 4.75204 4.74347 
4.28204 4.75204 0 ]xsh
110.125 446.953 mo
(\023%\003\026\035)
[2.36742 4.75206 4.74345 4.75206 0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
129.125 446.953 mo
(\010\002\004\004)
[6.17055 6.17055 6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
153.813 446.953 mo
(\035\005\016\035\004\003\023 \004\026\003\024'\035\033\034\023\003\035\023%\010\023\035\016\034\032\003\035\013\004\034 \022\016+\035\(\034\004\035\003\027\010\032\022\015\003\035)
[2.36742 1.90602 4.28204 2.36743 2.84604 4.74345 2.36742 4.75206 2.84605 4.74345 4.75206 4.74345 
2.36742 2.36743 6.17084 4.75206 2.36742 4.75208 2.36742 2.36742 4.74347 4.75204 2.36743 2.36742 
4.28206 4.75204 7.11949 4.75206 2.36743 4.75204 2.83743 4.75208 4.74344 4.75208 4.28204 2.3674 
2.36743 2.36743 4.75208 2.8374 2.36743 4.75208 4.28204 4.75208 7.11945 4.75208 1.90601 4.74347 
0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
339.547 446.953 mo
(\022\015!\023)
[6.17056 6.17053 6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
364.234 446.953 mo
(+\035\032\010\023\011%\035\023%\003\035\003\032\022\023!\035\016\023\004\005\026\013'\035\020%\005\016)
[2.36743 2.3674 7.12811 4.74344 2.36743 4.28204 4.75204 2.36743 2.36743 4.75204 4.74347 2.36743 
4.75204 7.11948 4.75208 2.36743 4.28204 2.3674 4.28204 2.36743 2.84604 1.90601 4.74347 4.75208 
2.3674 2.36743 5.21359 4.74347 1.90601 0 ]xsh
110.125 458.203 mo
(\032\003\023%\034\024\035\006\005\015\015\035\004\003\023 \004\026\035\023%\003\035\003\032\022\023!\035\016\023\004\005\026\013\035\006%\003\026\035\016 \011%\035\010\035\013\004\034 \022\035\016 \011\011\003\016\016\( \015\015!\035\032\010\023\011%\003\016\035\023%\003\035\003\032\022\023!\035\016\023\004\005\026\013\035\005\026\035\023%\003)
[7.12809 4.74345 2.36742 4.75205 4.74345 4.75206 2.36743 6.17084 1.90602 1.90602 1.90601 2.36743 
2.83743 4.75206 2.36742 4.75206 2.83745 4.75204 2.36743 2.36743 4.75204 4.74347 2.36742 4.75206 
7.12808 4.74347 2.36742 4.28204 2.36742 4.28204 2.36743 2.84604 1.90602 4.74345 4.75204 2.36743 
6.17084 4.75208 4.74344 4.75208 2.36743 4.28204 4.74344 4.28204 4.75208 2.3674 4.75208 2.36743 
4.74344 2.84604 4.75208 4.74344 4.75208 2.36743 4.28204 4.74344 4.28204 4.28204 4.75208 4.28204 
4.28204 2.3674 4.74347 1.90601 1.90604 4.28204 2.3674 7.12808 4.74347 2.3674 4.28207 4.75204 
4.74347 4.28204 2.3674 2.36743 4.75204 4.75208 2.36743 4.74344 7.12808 4.74347 2.37604 4.27344 
2.3674 4.28204 2.36743 2.84604 1.90604 4.75204 4.74347 2.3674 1.90604 4.75204 2.36743 2.36743 
4.74344 0 ]xsh
110.125 469.453 mo
(\005\026\022 \023')
[1.89741 4.75206 4.75206 4.75206 2.36743 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 490.078 mo
(\001\010\002\010\031\003\014\003\002\011\035)
[6.27404 5.22987 3.6591 5.22987 8.3717 5.23935 3.1322 5.23935 3.64963 5.23935 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 511.953 mo
(\024\013\025\002\001)
[6.17055 6.17055 6.17056 6.17055 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
159.734 511.953 mo
(\0350\035\020%\003\035\005\026\024\003\027\035\034\(\035\010\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\035\005\026\035\023%\005\016\035\032\010\023\011%\003\004/\016\035\022\010\023\023\003\004\026)
[2.36742 2.84605 2.36742 5.21361 4.74345 4.75206 2.36742 1.90602 4.74345 4.75206 4.75206 4.27344 
2.36742 4.75206 2.36742 2.36743 4.75206 2.36742 4.28204 4.74347 4.75204 2.36743 4.75206 2.83745 
1.90601 4.75206 4.74345 2.36743 4.75204 2.84604 4.74347 4.75204 4.75208 2.3674 1.90604 4.74344 
2.36743 2.36743 4.75208 1.90601 4.28204 2.36743 7.11945 4.75208 2.36743 4.28204 4.74347 4.75204 
2.84604 1.63254 4.28204 2.3674 4.74347 4.75208 2.36743 2.3674 4.75204 2.83746 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 532.578 mo
(\023\003\014\024\002\016\011\035)
[6.79131 5.23934 3.14169 5.73782 3.6591 5.73782 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
128.875 554.453 mo
(\020%\003\0354\022\034\016\016\005*\015!\035\003\032\022\023!5\035\016 *\016\003\) \003\026\011\003\035\011\010\022\023 \004\003\024\035*!\035\023%\003\035\013\004\034 \022\035\024 \004\005\026\013\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%+\035\034\004\035)
[5.21359 4.74345 4.75206 2.36743 2.84604 4.74345 4.75206 4.28204 4.28204 1.90602 4.74345 1.90601 
4.28204 2.36743 4.75206 7.11949 4.75204 2.36743 4.28204 2.84604 2.36743 4.28204 4.74345 4.75206 
4.28204 4.74345 4.75206 4.75206 4.74345 4.75206 4.28206 4.74344 2.36743 4.28204 4.75204 4.74347 
2.36743 4.75204 2.84604 4.74347 4.75204 2.36743 4.75204 4.28204 2.36743 2.36743 4.74347 4.75204 
2.3674 4.75208 2.83746 4.75204 4.74344 4.75208 2.36743 4.75204 4.74344 2.84607 1.90601 4.75208 
4.74344 2.3674 2.36743 4.75208 4.74344 2.36743 4.75208 2.84604 4.74344 4.28204 1.90604 4.75204 
4.74347 4.28204 2.3674 7.12811 4.75204 2.36743 4.28204 4.74344 2.36743 2.36743 4.75204 2.84607 
0 ]xsh
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
462.375 554.453 mo
(\010\002\004\004)
[6.17056 6.17053 6.17056 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
487.063 554.453 mo
(\035\005\()
[2.36743 1.8974 0 ]xsh
128.875 565.703 mo
(\023%\003\035\013\004\034 \022\035\(\010\005\015\003\024\035\023\034\035\032\010\023\011%\035\022\010\004\023\035\034\(\035\023%\003\035\005\026\022 \023)
[2.36742 4.75206 4.74345 2.36743 4.75206 2.84604 4.74345 4.75206 4.74345 2.36742 2.37604 4.74345 
1.90602 1.90601 4.74345 4.75206 2.36743 2.36742 4.75206 2.36743 7.11948 4.75206 2.36742 4.28204 
4.75208 2.36742 4.74345 4.75206 2.84605 2.36742 2.36742 4.74345 2.36742 2.36743 2.36743 4.75204 
4.75208 2.36743 1.90601 4.74344 4.75204 4.74347 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 586.328 mo
(!\022\002\027\030\011\035)
[5.73782 5.74729 3.64963 5.7473 7.31805 5.22987 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 608.203 mo
(\026\004\004\012\024\015\004\027\011\015\011\012\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
258.484 608.203 mo
(\0350\035\025\(\035\026\034\035\032\010\023\011%\035%\010\016\035!\003\023\035*\003\003\026\035\010\023\023\003\032\022\023\003\024+\035\034\004\035\005\(\035\023%\003\035\022\004\003\002\005\034 \016\035\032\010\023\011%)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 4.75204 4.74347 2.3674 7.12811 4.74344 2.36743 
4.28204 4.75204 2.36743 4.75208 4.74344 4.28204 2.36743 4.28204 4.75204 2.36743 2.36743 4.74347 
4.75204 4.75204 4.74347 2.36743 4.75204 2.36743 2.3674 4.75208 7.11948 4.75208 2.3674 4.75208 
4.74347 2.3674 2.36743 4.75204 2.84607 2.36743 1.8974 2.37604 2.3674 2.36743 4.74344 4.75208 
2.36743 4.74344 2.84604 4.75208 4.28204 1.90601 4.74347 4.75204 4.28204 2.36743 7.11948 4.75208 
2.3674 4.28207 0 ]xsh
128.875 619.453 mo
(\034\022\003\004\010\023\005\034\026\035\(\010\005\015\003\024)
[4.75206 4.74345 4.75206 2.84605 4.74344 2.36743 1.90601 4.75206 4.74345 2.36743 2.36742 4.75206 
1.90602 1.90602 4.74344 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYO+DejaVuLGCSansMono*1 [10.25 0 0 -10.25 0 0 ]msf
128.875 641.328 mo
(\026\010\035\012\031\036\002\011\036\014\037\025\002\010\035\021\030\031\006\012\001\011\005\025\010)
[6.17055 6.17055 6.17056 6.17055 6.17055 6.18088 6.17055 6.17055 6.17056 6.17055 6.17055 6.17056 
6.17055 6.17055 6.17055 6.17055 6.17056 6.18088 6.17055 6.17055 6.17056 6.17053 6.17056 6.17056 
0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
283.172 641.328 mo
(\0350\035\025\(\035\023%\003\004\003\035\005\016\035\026\034\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\035\005\026\035\023%\003\035\022\010\023\023\003\004\026\035\006\005\023%\035\023%\003)
[2.36743 2.84604 2.36743 2.3674 2.36743 2.36743 2.36743 4.75204 4.74344 2.84607 4.75204 2.36743 
1.8974 4.28204 2.36743 4.75204 4.75208 2.36743 4.28204 4.74344 4.75208 2.3674 4.74347 2.84604 
1.90604 4.75204 4.74344 2.36743 4.75208 2.84604 4.74344 4.75208 4.74344 2.36743 1.90601 4.75208 
2.3674 2.36743 4.75208 4.74344 2.36743 4.75204 4.75208 2.36743 2.36743 4.74344 2.84604 4.75208 
2.36743 6.17084 1.8974 2.36743 4.75204 2.3674 2.36743 4.75208 0 ]xsh
128.875 652.578 mo
(\013\005\002\003\026\035\005\026\024\003\027)
[4.75206 1.89742 4.28204 4.75206 4.75206 2.36742 1.90602 4.74345 4.75206 4.74344 0 ]xsh
ZQVJYN+LiberationSans-Bold*1 [11.1094 0 0 -11.1094 0 0 ]msf
107.313 708.203 mo
(\034\002\027\024\032\006\027\024\016\014)
[6.77673 4.32163 6.77673 6.76554 6.77672 8.02098 6.77672 6.77672 6.76555 0 ]xsh
grestore
.750179 .679652 .670191 .901488 cmyk
ZQVJYQ+DejaVuLGCSerif*1 [10 0 0 -10 0 0 ]msf
36 46 mo
(\001\002\003\004\005\006\007\010\011\012\003\013\014\015\002\016\002\013\017\012\002\003\020\021\022\023\013\024\025\013\026\013\027)
[10.2299 5.95993 3.99994 5.59998 6.43997 7.50992 5.91003 5.14008 6.4299 3.19 4.01001 3.15994 
3.89999 4.01001 5.95993 5.63995 5.95993 3.15994 6.71997 3.19 5.95993 4.01001 3.69995 6.02005 
4.77997 9.47998 3.17001 6.84998 7.29004 3.15994 6.36002 3.17001 0 ]xsh
547.2 46 mo
($\013\021\020\013\031)
[6.36005 3.16998 6.02008 3.69995 3.16998 0 ]xsh
36 753 mo
(\005\003\003\032\033\034\034\035\021\004\010\036\021\022\002\004\012\007\036\004\021\023\034\037\002\016\002\010\007\034\026\034\035\021\004\010\034\002\032 \034\037\002\036\036\036)
[6.43997 3.99994 3.99994 6.39999 3.37006 3.37006 3.35999 6.39999 6.02005 5.59998 5.14008 3.17001 
6.02005 4.7699 5.97 5.5899 3.20007 5.89996 3.17001 5.59998 6.02005 9.49005 3.35999 3.09998 
5.95993 5.63995 5.95993 5.14008 5.89996 3.37006 6.36002 3.37006 6.38992 6.03012 5.59998 5.13 
3.37006 5.95993 6.39999 3.19 3.37006 3.09998 5.95993 3.15994 3.17001 0 ]xsh
466.213 753 mo
(!"\034#$\034#!\030$\013!\026\033"%\013\017\001)
[6.36002 6.36002 3.37006 6.36002 6.36002 3.35999 6.36002 6.36002 6.35999 6.36005 3.16998 6.36005 
6.36005 3.37 6.36005 6.36005 3.15991 6.71997 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/3 ]]
] del_res
true set_gvm
/ZQVJYR+LiberationSans-Italic*1 uf
/ZQVJYR+LiberationSans-Italic uf
/MYABAA+LiberationSans-Italic uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 5 5
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
[1 0 0 1 0 0 ]ct
72 72 mo
540 72 li
540 720 li
72 720 li
cp
false sop
/4 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
72 72 mo
539.5 72 li
539.5 719.5 li
72 719.5 li
cp
f
72 288.328 mo
540 288.328 li
540 321.64 li
72 321.64 li
cp
gsave
grestore
/198795660.0 
<<
/ID /198795660.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 500 37 ] 
/XStep 2035 
/YStep 2035 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
500 0 li
500 37 li
0 37 li
cp
false sop
gsave
/4 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[500 0 0 -37 0 792 ]ct
snap_to_device
<<
/T 1
/W 500 
/H 37 
/M[500 0 0 -37 0 37 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J2<V_-?L"+c\+RAE(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:8e$Mr?`Hr$p5+c(\Q5-Q
X&HWYP1N't<p!HjA]i,DVVS<)Mf%b"%^OhAFITEWmsq`H-b(Y?',ON`hD.$ZV=,jBM;dRH3ip15/W4=`
FaYN&9r`q]E&u3:;aD_Zla;%%Xtrk`U1h%uh1"["^Q<I2(%&I#-+VuNXaJtI5HDE^m5V\;bhp%_PB-Hq
%eiVa^@HMs?GC-^h=(,dIU>=;fBr>1IXb_>kP+oS^^pnWrAj/tFJZRkb8dIsD=SVK0b4[#"sco"*hU7s
e/&9TY>cju_D($m%7@@a)O3]F,Y&P:YnSo,`K=C8Nl'0@@b8M;<+uk2nXN:37F3kDRmSpB)%X`lln9HT
Z.piJ3mr[+.4PsPRjo`P"L0>s18M<,9/>kM/kQccV_Q?c'YQ!@;Z+p"c*NAT2pN(Ik:93S1s7XM;q11t
bqo:r5>BVFk[te<JY,A.BRLae;<UFd8Q(df'1gR$PnQegFQGYZe+E#^;,_SU.nEY3F]1r`FOa5b;DfIp
:XsS6?Vs^dQ!%9i1j)G`eMYlm=k(r,Iooc0D0oR@ZqYIJ=`tgR?s)!.VdWaec(/0A2H@##\IK!QE3q>e
LN2+O/]>E7Y[u.(]GE0PPhjTLd*pd:`THAhf<sQ$?#^><"^UmE!I8'SjmK/-GE)9Kh08hJFQ'\e-[fH+
Xn%U_3&UQij&j#UNSp/s$t^Bf6(*rT\SbQ9AN<e"Pi^SY>FOZ![VqFCREg#Fjk5r<RV01&KqDur/r,eV
H5;",BDKi8T'@3u@B!qn`j;a\HD[U;BK=YGZ"[D@]r^Fc[`ti=]&),ED-KK#X_aEfkFu_g^6u<CRZ?9u
DE@4c^?I`2!Q&aoY61`bHuC$tEVtk:R.=Lc/]hZg^9Pq(S?F`nEh)Sean.^19@<@Ds%V!cSQ@Dlopn$M
b]Z,k?-d]-(N8#O4Qgq0p3c+kiV7"^Q/_S18!DtY?=/_(q>PT-l$=CHX6P!p-^j;t*k.'jq`a2Xl26#I
bOGH/\&7V3+(r:]IK'Q&omU8Galn2g\'=UG51fZ-?]3upO59RofE2'0e*VYRiVUF3&HSPWrdh9h!C4.D
!$;$WI?8,Q]Qc:=i639qE/G+A(e-9RlhH-0RLhfa8GV4L/ql!An3]`^%3^BVKCI/&_WYJ=Tr]eu0_-='
BNYP5bXdIbH61!1NsT7e2h_i!,/]53&tqE8LlgmH7<kL>@,t:FO]j+tkeQ__gfTK>Q4XOm3sT7`;iVHa
2oZ]l*FRrPMK-Wua114QTgX-dn[^tV8IZMHluS2lc9TG7(EfMiLQ@SG7n<@g*MeWUO&@H%8Qd2^U`?"j
E["+Ia[ISQb__EZ1/LNP4"7""V3Q)89M3E>.-4EnP4?Ojb6^H[AXpAoEme8e)1a)'6uJ*M-92KcOU<F/
ar+,52pE1$2'u;NRZg'SbrHRrVW?I#o85fXRBJU5,h8=C->QA%RlY1=m[CJ*D9g8T4(e-RR;q)):RUB,
Aq]oMPG3=u)>uO-gs)Kk!d7?Gq`ST2&>=1mJ'_@@5pqouTbM*nd7Oj9-liYiF<6IiC-tF'jPZi@VMA&p
"#HfK0qG\kHW*M,2JKi[T%*2!9WDMgBtZ^/']tt8l>9:r,sdO?rgqWNLJd<T:o?0;UK'pW9WGK_Vj/I#
e@Li;l?u%"22\Ba.]Z^P]euo,C9lCdUK2+mE2loYV,jUc:b/qZXd(*@<sliNlZI'J<AMDBqZgBlgubQ"
ihokI).Mn(>-XAcTi'PNA*KgZZBdDi=j"EiC)*;D<_grnCHkGW-"F<g7b-28>A1%uUpLn`a''EpB^Dk'
ZIZbEgDb3Mm5;;Op@cbc]2<>q4RKO7C>E.LP@CWL\?!Lgl<R8LFfqk"]/O']?-B^#Y1;Bsf7NO!$c@-@
4m'Ac>45dKO*be&jh3UQnQu[]H`s:@]m$LRh:q=EYN>i"=3g?o9DO&*mGG]<ZLVBc%=IW)%)M]l"CUQO
JT+Wr^Go:)?q^NRYeCR`Qb6c9;2L-L2CQN((DC9%;i<A:0?,ut'&uYoMXe,.`OOeH@k:W@n^]P:\H<u6
luS1B-:l1eT-<:.<KXR^9uo=f+_<d&PVRD_a4WO(A=ToiZ9DR6q26HYS@=k@Nb$.TIiDu>[?ECq:X%KB
1hFnkN&,'2c.RbYN'(%&"sCh*RJ/pYm/`(9(.cdj)^4FY&Yh1+O3kH;60A[fTQ0[fcam%CBK\;M1p2__
H=p(=]e?+%%\M4=#>8`Y)63=(VUaCI8a:_.U@fk(eN1TO$sc0%Zu2Yg>3f=**E0(_T#9"r.p2-9=erJ!
]\/b:BC&nkZ1a3dg3YVGm4GTL[77CSRNu<Z?-Tq"&B!;8X$5s2capT/n_Q@FH#B2)\p(%>h`KG8DnYhW
pMTreS.C*eNT%K/0)+:Nf7`R0&&(#9$fX8>L[Z>I`4-Tti#F\1n@gut\$m.1r*tlZ4qYa/-L]l_Dj5:5
mP"hN_&-FtR;Q>Fbk\.lk5<u'o=e_[3QF#>@geZFY(+bY2a-C'#Ggt:J^4*67Hch&V0-+De[g6)k1p]C
oa\%SH=&\tI:ohX*l647s'"ZXO0Ee6A^n<cBC,S(\b8e3f/m&JmG29\pO;)RH^B$HSK#%^Nq^tKYA<=X
'>Jd`p"XntII&0U?jludjZKKWo3PeLH%.d8]W[jsrccP2s$u7bc^XQuUWe$+=mNa;WUi<of)!-glFh\J
o\RpKq[Z9dr9pQY50M)q:I4B]0?!YBlf*7%Jau!S\bH+_j*QiTm=&Ekp:i]NHZ,\MIP9FMs)[OTn%8?X
pZVBYA+KSJO7n#E[26^X?[jeZ07TVhrk;b8s1e"%0D>FlnFFp-rm1lMDu0O]!<:C/rf@ion.P<=#6E1"
s6qTA0J*6"m/aEp!H9OjE!l_D!<\E*"&J^pn3$lX#m1_Ks0,?%&2scS;ZZA:"],d7n4`nEE<IsI#-^`(
ctr]c@g?sa"`SYgO@9?b:C&Y4#LJY=n<jQ$R0E)N"#,92n/2M8oa6e+"eg8NiH?#gFr.C'$rFYSTm7(j
GmoeZ%'[b\&DIX*faX%`%FEE2ON@qCh[L.I%hS+<&F0g&_[k,e%e.@I0[1!peI?L/%l"_/OVncd&J&k)
%riBuYg3ocb78ML&@"#$0cq%u3t_!Q'9PQnO[g&2q\:hM&J7_ME=EWOcP05f&.ootnJr>VCCcNU'+o'p
E<d5@>8K#,'leF3Z%Ej4I2A"l(m0:Z;4A'C%Ms*%$rGCkOg,gd`>_[V)f`2&nZNldWuQ,e)\Kn*dD$[K
],X\g*&52KEQ];`aW+0k*:_]'dHM\aV]E%i*7<:XEW7'-"!4`Q*Kg(<&`4]CjW2b7+&UK1EVgi?miPFH
+]78D;=c![&L+La+4;;VE]#&($Qek/+Yl,(&e?/64XC_6,[kd26$"A.?R@O=(G]VMP%>sQBdZf"-PChS
noH1AJL8f^-^&[%dZGs+Ijm.,.2%Odd[qn-E@>jo.WU(gEa^G\UF*:-.MB?Ans_+L[k%$[-aLE:EaL@Q
V(5HK.alWp'!Eb4fdY@k.MB!=1;tkd`@eHs//%8!16jF(h(8-c/Q-@;;Pc%1#:;`U(?''FdiC1EC_ma6
134s#o-H.j-l3OO1,Bq,P;>#D/M`MY1K,e[F"oL-7l.In1\4g.o1_'*@5ILN1@o-9F)NlK9/_uF2,d@0
'3R4LK/M+X2DZ:21M\f\OZ??/2cH&&o6iVT;`V1$3O<W`ds!ZjJN7e,139WXPG(%$3BM;W3Kmf1e&sj0
cT5":4*.M`Zb\^ZIl>d!4gVm[@;$EtoG2N>5G;dUe+Z(Jq`g;E5Vr^11]ot,'gM<u5ZAObZl;9[+$gS5
5kG^UF9t8j0gV$16M(dU<%UBm5=?256aT9MZlMDR:I!?#7?gM5<*_pL'h*4#6BjDq'Q$1D;+FSc7MKW.
e2]lqGsaE>6e!JQe42t"AOD]K8CUd6'MCtrDb:^j8T^@kFG!(?Vb"1/6%NN=iF3QgAP=qs9U*Li<52-A
a%R3!9iT;1[)Ym_b=shR:%Z=so]]&6fhXHd:K6.FFSS\]cV>2I9f3#KFRN&5k>1a[:j!:FeIt`d#u@qc
::0ameK[i>1Jnl);0=Hf[..(;+]Gcr:_b'GeO*<$:K4_r<E1bR<CK^65?$)I:,PsNF]h[dB2Z-Q:@uq7
202eu'heX9()4qoeVY,"MceMp=d6[('qnb&Rp'rk=]L;]eZDt3QWa!d=uDLI[C'5HX]q'e>W%pRoq,E1
d9AK'>SXGI[@pju`EY:Z>*[Q>e^n$U^L&kK??P"/p"s!hj'7lR?Id_:eWF5smpL;N?a]3,Q1853RpK,;
@TFX\<Y&DX)d\g<@eL+:Fsgen1Lens'u=,i[SR^I:LuFYAJS?Y2H=?)>@j+/B!u2\Q=jd[AS$$lAsRFK
<c)LcEG)_:B9mCJ[Y8BQDe7L@Bm*Kien\t8I;)`?BU3jT<hjF'Ve@uhBf;T!(;4FjHYE+sC=[lKf"l.q
[qq@cCc7u(f"GpdR;CHBD)TjZ<g@RrnSIp>C"E#nQHNol>SVfmE->H)[gd&<$#nI.AChW4(EIJ(&TP8b
E`Wckf*-/<-ZN3"CDS48QRQuW06&nBFB:hN[Vp6]-Z_3uAG6[T[lJOH@r`A9F;J)"JQm9kDf^+qFVf74
f2$T,F`o]hF8'Bjf7S.RLNg4=H'aS7\!(oX@<n2tG.4)ef84fTIs<oUFa(07f.hXHDgSqt'mIoAJQ[BP
eU9C0I<Q!G=3l9ghgQBi'mJ&S([ZY&l[=!KIs:@1QfW^@j*oVCJ!^=f(YaGl$\3I$JCkfkGR8n%qgUR9
J/BM^(b:-h07XknK/aa"GU\4=.>)j?K=FL*pa(C!7=eQ>Jp9G33'i7#@t.T8K\0@[pgo/hEJ<%@L)>&f
pihJFB8=!<IfWF^@9&.$O*ncC'f_81plZ@OPDQd!M7B79=K@=(VhoY`M:drK(n$<7YDQGuMn$NZR$ik7
bDOrUN>Tp!GdiR?]oG)$M&>K8\D)q/X;-!=NHjWGGh%f+fo5_!N**iRR0AZI"ct_PO]`WaR1G>QpQAYs
N`dBcfcc55-'J&g'j3JZR,=&drJrqENnHpeR)=dV7?KT-PhA3aq$E6%qj!RZPIWjl(n;=$EL0gJQ_@9C
q/_m)SX::AR!FIRH%hYHM4$AhR(7^6)0;-iQ^V'<RQ6@oR>%%HV4$#/QoVXF3NnkhQ(#7AS2n-M=dtp!
e!rG?R@1gVg!QAda.!t"Ri0D?3T6ADnXb$FR[NQ6g"Vqjoq#=bT=N4;=neRl]q@CsT"1bfg&IaL+ee_`
T:)7EH-`.0)5=\MR%[6BiD66m;5<tXUq0#0q1#2$;5BXO'cL)Jg0LO97AZGWV>=>j_+gaE?)DmsVRh&L
3b>.6H`,SOUq0^,>&C1K6)XQhVg=47g52^GEN'k+W]Fpo3cV1RQ)OPaVY[p#)S`(o[A_f+Wg]QZHAec6
PH7s8W`ls4g81l3eZ-4$U\`lMHH317T<>c'X?,sSg9[omDm&r;YZelG)K1ud;kuCC'`&uXflOEf(U70\
Z5Y6u],R0-)mUD7Q[:<j)^hmp-*mCoZ.\fW)`tAf,I<jg[!Q#bRnpE'+.,-$Zs,c'gG?9"=do4P[_$7^
qgZ(:EO7`i\%?jo4"mu\27Zq:\Jp+-gP</jUUGMN[9Jd#RpimTS%?4g]:6(8>Fi?p2nIbW[JM^%+9~>
/LZWDecode filter
<~J0e+?,chaaQ@qN]E(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:8e$Mr?`Hr$p5+c(\Q5-Q
X&HWYP1N't<p!HjA]i,DVVS<)Mf%b"%^OhAFITEWmsq`H-b(Y?',ON`hD.$ZV=,jBM5B]!I2/qY-A?/R
'MVS.'s,@<lrr4oVaiAnCaL*7PZe7$L2O'H/]=!'QJcV(S31F;K?ftU[%,tP)l:s/m!>1^[q7qPk\ddK
?12)[`RB#(S:470e%>0:P5L,+bqJ\br]\*3]Kbo_50r!Irh+3=#5pfK'EJ.tO>Hms56S&.#U(lpkl\b`
`#fCQYe1bL__D!'$:Ae1,nE>)"=j\p0dK6j7.>R;$V!qA;#\D<9Oei,;1*4!`=V*S%Ri,E>9$2\m"$4t
nbcN0`XnYQ-V0D:K+F-.bd;tbKWMd=b9XI&0$D]pa"g=%4Lm7B;`*-!9N'[%2U+#tf/h)2]\b]p1S!hk
cgq"I3`"4Y"$fQp*=4i*1_d>];7'="7T)$*.n*>LeJCkW<*]/bcP*uP6I&PQ0i1bID+@)pdnMVr<E3m?
;q/0C78FOaOXFGdKUm6l=&mLl?s%RmIq%#PrIn_5p%<`FfTnsiBj,\.O_36(Kr\ol<UH&hgD72bC0B,a
^MDTU'od6<[Z-VrfU%$8F'Y)+_0"O7NOaAk=.Q7:gNQ*NIc"1L!HR(B*Y35KGNKQ998&hO1<l2H-V<;s
*]5T\3/0GOj2@fN4Q@9kd>m4rr\[\bfj7I<A[r:@6"N%l@?kAkH4>_o)5_\KA_CsBR-(rN.A,hW/q]F$
=U'eRkSbM1Vr`5BQ`0-^-E3/Cg6T"'kSil;Y\?,K]oh?2/gO$9>@B%jA6W*p1%!_%e%"fBSk6N^>K5X9
DA(P%]C9jtrP%^3:@l9E4>-ZEEL^(s_/3GCqnqt%`>-R9S52#REZ?Go_f38,/'mdV?U`LeSKCS8o9>R^
f_)pj?cVlr^?=9lHf&,DG+DDVhJ^+=J^emKcV&q!ei!&,hfj"4K)0WqTB9K%NW&"ohS5oR?9[8IHWhL5
ZZKG:&%hE1(]Uo.HPOl[n,Apqj6qEj+4Kt4G@0Y3+1('Y&-;ne(X2fLoD*qelq"1E)C/^D%2)K0#X9^Z
"CQ<hJhU(36&6ln+P[ien6-@===4>^1a%FtV@p_d7g^D](PRsB&An3R$t,;VKlFm@6[0UYTq!Hb;$IfR
fS^354;<Q)q@ge,@hN5R3/!CE.)]eu'k1uGM327"7EBrmiS71cd&o#gpr+"X9K[o94uPmH+=%);DiPFL
3_)0i*$^\bNR?`I7bHT=j6V,S&\:$DkkQ?2r-sc)hEf5n'-a3iFHBA^4\5Ab,:'(MORa#TaZ1(ZUh#LL
Ef*?.)!rR/7!t0gU/f>r9dh:2Ss?T>9hJOr-`'M1QEnM88]`8*,lFs4P4E!N3F=FNgjtiuc:UcUQSN/`
IhBOW7Ypl@)^^r3Ro<ujbt4rnk3UroPCdVqBtkU!aGl^rP&X4<]eu]Um@Fu#C//L+3+g\+Shk8.:-&&,
kIg,No?r$4=kQ"dXRDhS!e\g6(I"cCr0t%hLs\fa6`9koT+jnO:\lY.W!qOX;l5(Bg+,GP]cX%L)NR\J
;+W3b#,X3mRF0/W7&Xr]SQ)nYd$f)Okf",GdBH)7g5Ag]I74a3:81^FO]&3%6`BYl7oXf82em22WV%U8
<19R].]$1HeU">tHA>WQ[:$&CL29ltUKHhn8?DL(X440$=6fI#Xqfs,f8As&CFsG*[I1i\MU>XDc$-D"
6G_25q,V9*M6Iab``=T1@;MKjYP(<-=F.5`m#@F6FY;'C><Prej`7aeRaPBO"_FfTNtGhX7U&_.,/e$H
&V;XggUh6<Xi7l\(BWCH97Lq6'um^A#&RSVHZ8CAc+4\IinSmUD(Y/,\^t<Nh+NH?me+`8(Gb>^X2B*5
IGMQ%qWQaNQZ6pqj1Z=Ip0F_sF"_\![s+;6gWR-TY5Rb!fBV_Zqh9?8"k(4Gk5O8]kC9\<#/OCKojI\<
Ja`R2_0?Ipi1&,KE0_BS3&:eqX@shV<[bpFo+YZh9o<qF/%:n<(uhW6NH&P``Rr?M@]X!tZ-GSRR+E<f
4DBm3Sib"qo-<<YDiujK42mT]*FrEIPHo("b;i?EjLi$iZGo_`\VhbF/;'1n%O]=XHQ;0QXd8QR>0WH_
)!=#bOYaFUburLDk5<&X1DX3>\^rWJCsen3hM0(&/4<^e)l#/P;pi0H7:Z9BU9^ALdFpZSBtZTqFM:Q#
3]ofEh)2,&#,0Q#P>5h.=et_62qC$*;/6%gUc"aJ`OVU@l&A36Fl'RW)V83Zh.`j2cG\3NgL=uIJYMhg
>1pJO@qn_bYkC!*g%o>pjo)&"`(&_@+rbK=*Qtte(?=3IT65%Bh75HULY[P,G]%BH+h)pdh`JGsm_.es
6q6P#)u"UG^%o9a2ZMZ=Mh1BC(W3aI#iIfqK(.%p^j*Tki#Bjtn1HfBGjc@'gfoAN4s@jhh]h)#PEYRO
>K4/H+6B"cQ#dDpb..0ljkNLuDIEeo6m.-o>m$_k5me`f+%POc&"n_bNR2ua7Htm\UNB7\eN.V<koD:U
FY9lE]!#'!*G;&<rhIrRDd2KiT;VBH]HFfSB^*4NX`U/dfR#Q%mN&pMGFlq&qc?GZ*XfaW^=h1e-XQ$8
gVih>)q+V]M"3_3`d'cjfXsFin"&(5H+u6!HoH<=hCHD;D^Xaqs.f,@Qd9u]+mVN<Z08k\6ARg`m!Zp_
p74;$HXCFS4kIC@T*O%r^O>T7cbK8T0B)gNQ17$S]_;?fkkr2rnUA5;pE)War1Au;I_X2*s(gWk^VTS,
kL08-Mt;BnZgp<;j8E>Sp3]*\qL,R2ra.J>IBV)u0A?C9b5T`Lq60_q:]UQWo)$c8s,ZaOn,i\Ek5(.r
!RJ"MmZ7ug!qn<+p+DF<+U&!&1BXjB&9'E-:cS2'8Hge2"OL9SYWi7e7g4u["n5Lrcs$]n;$F0i"Aj(B
Y]g5SK*I?u#>eh2:h9n$:BbZV$':2RcZ'.CI0adr#On]!n<F:kV[8H9$]qP!0P_&XV$&KY$IG=P&>9>j
P7!D`#*?S)0XD"gaUO>u%FEE2&EsR!k6t1V%a^FO!;mB?"V>Y[&?uZUnIZ?f#nSg+&[<>gnHBMe+VJcD
&htmLnKANB0b\O;'2^b'nLYFe71^&$'N%"-YqHg];%d:7&"r_5nQQaDq\ET8'qkL@nR!':Bbk\o(GTA0
Oa@m!FV[he'sW0'EG639E>B.K(bpd_&VV*bL_$bM)Gu&'0rZ%1T,3WD(\+%7d<QY8[i5os&(-FVEP!$,
UE"9Q(br]DOgQ5"SK#u.*`9lt;0<k`cPl?:*DrRQdG5\Fo,]Xj+*#%9OmaDiPoS2f(6T+JZ'umkd33N>
+jn+M&Z6gMq&j\q*Keed;DB8Dp((R(,[g6T5k?7a;^Bde,a):V1/T=F?R1e--.6KS&m$F.:F?cF-B_"K
Z?ITmAL?t^-usqe16!V9OXJS".8j4q&sXjXB.7kp-^%U[nu!r-V^bT$.[%+cZ;2t`].6dk/!>r@192g$
Y:6cZ/M^N^P1;/tW?nk+/<Z&Fd[_p%^FaKl.5G<b'!3cad4UUV/^j_Q1A`_g$S-8r-p[AYi9h+3,;M&$
1%QtPdjHoW2);Ko1(uf,ZRI^%2)I*B1Qt<b'2::39eqo(1G`/jZV`Om@l&152H+6Go3jLt<B!iV2:Hb.
P=[P$I5[9f2"PQ@;fO]/LGUfB37CY]o7&_u;`U&"2RB#9';IT%M)2K/3AZ4F1VZ!bHTH5E3:fd'F1"*9
4:]0r%b'2D'B)+gh`[1X4gX$01[RBTkrpoZ5I:)J;s-@9q)sr+5a2F;'D4R'ofoeu6'N6O'B_PY'1*BB
5P,aWoFjO_#<oK[6W=Xbe1X/<*CCMc6aTEOZl;6Z76i\26^1G7PUA_;rC&PM6Z`]*1d=D#B0qhu6hDZm
'NmniJOhV+7eDI+'LP?SO[QR'5;\-cF9W5*kRM"_%^`')Pc,(VX\*]?9!kcp'X^Pt[nF*/9N8c"1qu_+
_+dn69n;D#1qcPHgJ$,Y:%Zn.o\WBmj%Hc<:I+5@Pke)HlUt4I:NY2b'Y@06%8@PI:"9PF[22Ur&PdHn
8lZg+'d$,7*Dof7;KV;(o`n:C0iO>F<0[\b<;BKn6W;LX;RK@rF\>\V=]EoR<#&>42-3[5>>`nG%RB(b
Q$laL/Q_Ul=4Me&22PEMO]_:A=gaAieVdS\LKJ\Y>#gJ_opJs*X]h"!=Z)1C'noiaV-?rl=r#._Fg#$b
]j16P=d@6;<RFrLcWjJB?+%RSQ-3M,^K\,!>uf]f(&qQ^k?_0/?e+UK2=k3UiEheU@+CHL('@a+#?nP$
@F_&Seg"HXq-Fg'=WlW3ej![\6k0u(A/7aHp-WC,9k@?qAAI#3<a0,.=_1W0ATh]sG"ZC)EFnidAJT&o
[T@(l@:kgHB9maTG&_3(@qR]LB\%TDp3gW*QYBKWC%e662M#DIO_WIVCDNCSG.VNjZYT98BNE/gp;Las
c#$L2CmL9$2K`bXd:noGD>)"b<i^+]\SUuuD\eKF@,#WCfF<Ab%@7*7(Cb=b$#m?[EAnJL<srs`"`bD!
%C[X'QQpP&1NO?eEjlj(G;jKM.<,#=FE]T^2`Ysr4`o:'F14_]pJl=%;03U[FSAp[=)2oE9lUsqG*c]^
f5#N<Is4t8F*E%P[q0aW5C"&&Fr-QjQQ^U_QZP0aEjqT\2kb@QT6D*$GZVA#pH<`0X*HXVH^DKd2l1n'
GC8#AI:1ZTi7JK?hgP7[%9F!XGN93Wj*kCfI^ecq2sGfnjaVL;I^eKjQihfhomiDAJ%,<)p\B>a-%\)s
IM`*:fG/lQ/V9?GK(p^E\.+(8$\A'hIlK`IQqr3V:Oj9`IeXe5fMRA?<JD>nL6u8"fPQ.@.>E(-JG=2<
=ET:A4,8&.Lff(XQu@X['7q&kLR='X=>>XlK8FiNJ_6NE30/ktV1lF[KD9*h!7207`!mj9%,fTnfY@pR
c]#BYN-NO)prSISh2L"@N-N=$psG$;m>i+ENEFkpGj15K!KJ#aNqid9)!-k3iJfhKNEHLI3?O?n'ot?g
N0t39R/`1l(Qu<(P$%OB)'b931Qm"eP?@.83;&NgqiSEbPPI5#3B`Q$?^#a5OkEa"3D#Ms2jS^[QFU4_
q'25/.?td!Po549\QtPi=-Rt^PBi4S)%huKCRSASRQ3*^H**8JZ]nUtRlRC8\BC>o^RSH=S(SaMH*<[)
_jWU+SXIZkRFdt^j-pqDS[kSfq;%W&iL@CBT6[o,g!QDEn"+g@TR$'s=oY#g';1cdSN5f)3Ye5hq4P:/
Tm@lU\db35l_6E2UA>Cog"3!F0qfL2%04YKqGF(3a:*UDV4(2Vg/FjE@AZ)"VOCS`\l#@$@A\?NVj_V&
\o4MCFf.9?W&fF,>(*<[>H"!AWB-*<3h<-OQ_jP:W]HcNg7,*g[AH!iWVX0*g4u\sZ`Dg#Wk,U;g:OGT
V5YBZXP24*qN%^=\#EQgVkD$<TZR[nbHC^3Y@,?YRea0+o<3K;YM/ZQ>5>A5orrcVYM0/`RedG=s0+QQ
Yo=(V>7\"Y'sAQ.Z9'A=Rl.G).C#?qYPUnq],.fbnZl@@Z+D`tHW@<):U>C\Z.hRPgF'=s/$qAm[^udQ
]32T>9<_Uk[sN,$3ub[+A%4UO[l]MY]90>0Q+*5I\f5(hS"mA1KsTN<\9kEhqgGk6WOoc*\=3Z4HVLq1
VmuUYYT!P<@)NI]`!fgN^"QQ$TZOo0j1bEJYT*&GS*Rh9gV4^#^755<gYokNhnL-I_#*`/Hl'Q1$bj7Y
_H[hlg`+'L+2Jp'^0D,bS1VL'28_O<`#JlsgaU*&:W-KU^\ft)>ZJU%kJ]P(^Kb9`gi:9F/&cm#a*_I<
r(4c\9u^Fb`r'\k**pTiNPukJ_n9-e]S"0#LV`n$ah1!^*0\7T_7k<-^3m?t>dqoS^WX:+bM:4`gs=06
`QW_AbZr?9r5m4=ccr!CbM;@,*5g#@j3LubbrjP%gsaO'jj/>5cb05$i5*_;&^c!ld(KD*r7B:Xc-UkJ
d9RL7r=dUabL2q9dp2k"4WD^1*R>`hdp4cZ4W2V;/^XG.eU9C&SNG645Lpgje"$lrr9r/6"4l:DestFF
*9YcKHdmJ!f0%g=h0%@5C"U+1fpq*T?%L[78([^%g)YIm4UoaYVqTsngDqBj?$"bkM;-h]gms5PICn/Q
O4W4,dbWHu?)uBng`R^~>
/LZWDecode filter
<~J/ZZd,?tueBnSb0E(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:8e$Mr?`Hr$p5+c(\Q5-Q
X&HWYP1N't<p!HjA]i,DVVS<)Mf%b"%^OhAFITEWmsq`H-b(Y?',ON`hD.$ZV=,jBM41Y+I2/qY-A?/R
'MVS.'s,@<lrr4oVaiAnCaL*7PZe7$L2O'H/]=!'C#EiPS31F;K?ftU[%,tP)l:s/m!>1^[q7qPk\ddK
?12)[`RB#(S:470e%>0<N<Z#Ie*6Q&_u@D,8)rt55HjtXr1OY^$N`U*'GCM_0H:)j5gXfj!5`\;.0IF`
F86)-:qSFk^X-L9&ON`J$P:2&6o,6=E@b#p`DLG%'uU]+,nn$jHtO54:ddeq7PJ(S*lHC,E?3+tUeLhZ
;G:X;5;FJKNj<Ce%Z7[BUoQ%>.7C?h.ZX@4/Y`sU7kH,&"4&a2o28"3:%IZ(3(jnnaYuq1FRM1`'?o0b
bgYYC32dMogG@2sjU0kiPT9Ou9U%CR6oO(%eC6JaI4n5l'YQ2R;q1b/:,Naq1K#LK2+p`p'a7T<TetS4
9\#E!@olU9dudeaeV-Fs<HYuP>un@EBjoTd'mX:j[QTsg=#MY,A67;ET3p;q]rbu&(<*7V<OVjqEM3I_
atqiI7FQ>epLVTm>utn%FPZ\.l$H][2:$SU2mq[p?<=i#IpR?Dhgf+$h=l;)3)0:%i&En<K\uQqkDN_L
Xjr-`GePJaj#DK"NT(eP5E025DG-.'GJ6k8@i0A6Nb'%#?^535Q1:;T)87P]B3AhVGA!>`LR-h"Xn@BT
pg0;aC)VgcUuGQaS#'lRY+q_,3d.L)iEH5;X6_n`bHbp<2US[E>40M3l<$71Vs>:fhn!T-^@ASs)s6=s
D;.8AX_kZSiOSH*7gHHg]O(c[Du=b%1(;&J/]r,S^F1mY][n[Zo3Aahd.7,W9@%ZB00.DOh'ZFXFZkdm
c1E"mA(5\8a&1=[4Qh(GpRN[KgA%5RIFra-%u&X1^$f%YH%$!Rh>2NnTB14PQSILs*>bpEq`[flfm)BR
\)D`6O1FfSSk%2]qZA7d1&b?`kP9S!a6ENWhnT*fTA06n&,$#WVu6O$S-=G(iVL?'!s;q9%"F@2"@)Z%
"J?_MJhUpH5Y)Up@%7IR&2FY[GOGI(*$U%i4r(lC>7'4].><jq&&SZg"5uX$L@CK<_mjOoU'*6*d*`Fm
-ohX-*'AkXjs!0kK]ld1A:Z@80uYQC'dB_XF&>CT`<`dd@bb=JZ!&]hGe"Y8`);P6L,DH1bo!1NA<$,f
01Mj2)<5gQMc#cta,'%",Lh7(dI'"c)"SX*]Prr%G!8DU[3MHjK9/t,3Cha;,U?'*O`?CNaCuG;A:0K&
OqpV[GeYXPS;NN9Q;>W,a;BODYEe[q=@Kc9/>]/OEmhs4bK4rZjeTMTde6m<)0%96e@_1_)J)S[B//Oj
<0m,6>tkW@1F<7RQuaH-9f]O7V>S9$',"s&8\l+<o]2Mu/p5D&Y;bSpm@(AM=\WUu2Wft^S9&^r9Bkgt
Vu5ACF67dF3OM+aPm3cN(4OU:ks21_Q_BWH0a7Wn(de:4UD.=!;;#AHW5T[Le;B:6b""nb"X^%p<g6K3
9h20o+es.BQI@ll9kbUkV)5cP"r]^$.=FIUZu2:1RPR_'SL(2``g'KVRn`0"/#a7%QrQ2"<,*FSUfB1A
<2tFK.TK9CPr>14._Sn59dm%W6F'R:c!%.GD5=Q0[T2&;==])=Wg*q&esc83l]$(jFP="O@)*Sr%>bJb
>VFa`2e"2KM$u9pak5o(AF*l`Z;rI!faBZL/?P#<oQJ>Z9,hCn/X`qgEmW3l5A@4,UU'TFe(RH/BC/Eq
[!&b/d;)TsD=,-J(@oXPq`A<T[C<X=hUUD^?#Zn\bIQ21fNd0>B<Hs0[Wc'4?!CBS/`"ma<c7D3/$3g[
%H+mCB'NR#^NqLi]"N;#jk]7EEPhAa$lA((hlseDn(n)>fCK%#qtkpu('hZ8)Z='&%=p2#!PnId$",kI
Kl?Yb_UqWa@#QgmnD4tt=E=c+lktS`2B'EaMZr(@5DekF0?%$@(1KrVMf=D0`n5bZi*9QFER#`F30+hb
/5)!W`^\$O.j\`=@?L*:/&mtF-";gqO#!:j$\<7LL"s5)o*/OEq/\1N4N!RC2JC=FM_jLs_3X[.EQrdD
0BYI8Qa=,;cT/m,Ak_`c1WFpiq7ATK/CU!XQ@d?Vmks=1qk!FLE7,X02!Ea+TsJ?ldTS^nkj9t!F@MeG
3c@[T9dQdGI\P@RX%$et6)HICX44_i<,*FHW-)^De_7qnCYa:Po%7-u3r<<#i3fcjk/,e5)e<c%RBU`:
cIof??gPJ,Z?E+sg"R0RD4Q`sG(.cl)d@/r]t_)O-Kj&dLMgumV73pOb2#-TEbo%A\$g2:hODi1D9^&2
p\t$D]CU5bmI.kM2X9!Xs(q.@[D"ST&)nQFC@KL\^pcf%igYFUENTtg!pEk4]ShmB9p)Y?+C+!_RuugZ
\&ru7--NrVR.C5^QMF$.jdCI\l#(jk\^re%>cXOh:3k$nLI^K4"/U'V6d@_?:$6ppVe1s=dCQ5&l5Z^o
p!/]G])PIi4U[eQ0#c05[peSCGHLLD^!cdR9C7._PP$!;h"ujqmi=L$pAXm8H]LqjI;>PNm\ec"0#%d&
B?#2@O5mYIa74U8/GS_@bP\9'o,_DaGlJN@I($ua?A$AqcPu*H2idEWJ'RjS7I#9PN:n<fangKgkl#F]
f`'pcHS91"]O/#=rsRWd^No+XpS@RJs4I1oHf]X9`:Epag3QPgoY#b(oY52'rGS7t5)6cH?OQ<!T>0`B
&'"NsF6WYlO8;&df)<=lo)$e6'uHnL$K(%Fs.Acf^om_knGc;Zs"Eg@chd[G$NQ8+!:U3o0F\!N"Te*/
!:Ud*:`0<Fr;t>'!:U!h:bMl(&H]0m!jD+qO;e6t5m4DN">E=LO<"MO4T]S6!,u?MO;.ofCB%+E"qYVR
Y]0eB;$Se#"`QO.n4<^YM$S&h"7QBtE+K;/2[PR)$.,XQcu04eKa2S!$4sNJYP&<RW!^nj$t-1GOMqY?
b7.:o%8b(SE7#.Li=(gc%IhgTnCJ)Qdgg?i%?TZ]d*3&NWt01<%?U5o&DI`"i=M+L&5``F0_5lR$PH:\
&WleuYo=<12%_Q%&+MFh&GZq.*tsc,'@AHEE=i]n727N4&()sAEBt4W<td;M(%EF_0d.<P6PQeB&M\8>
OPLY6.2>\Z&cegE!3$h*#6</7$D=:7nB2\7W>Uhms"UD_nXCD7o,."u)c6hWnX^)-],G[k*-%)\dC0u*
V&>E3)A'k.EQ]BmXW6lm)pu2;Z,msTSK6+a+#*@.ENpPsSK1Sj)U[:Z;=PQf'-K%<+E>dN;8XRIruQ1u
*mt?6d@2=8'-8n**g/T*1*n(6,ok>`+#34/nf]*<"X7rQ,d7_'nlI)72]VAh&For25bna-E?$`T-W5.+
noH2LFXRlT-aJLTdZGpjM(#ZT.<:n+;L9d3TdZ(f..V@,P*IECN@PXD/!?YXd[_k.[41[U.[%b#;TgV3
cRNte.^Hf@d_dXlY:Pj+.2(AeEks;IPqMXh0/D]D''Uo%d4Va10N/?0ZHFnb#qsa</+XE-ZJdFaj9ab=
$6YuJo.Mlj0f#Do1UB.udkN[82_q]q1fH[s'2(-&.5_c,$55EUdj[,[2)WiS1c%!Go49_a>r?\E1im(`
1Mo'L.lEN/1@p>^;gC>YI5Vb"1io-F'9tLtCGdn^2tNLsPFjh`HTG*/2=ismZ_oY/[5oG*3A[Wrdm#p8
LGuQ54S-fTZdC`GcTF"A5#^E'o4L6C_)jI?5;Vgh;p.1beNT2G5I6"L^mGGX'FC!;6'N*MoG9gc*C80u
5nk8(1b1n70gQL"6M)cp1`&O/1IP1c6W>@!Zn4Z;3CG]&7!)X$Zq3W,9gePa7$LP8P[R#QCIRkg7eAW0
e7hB/JOYlZ7l53V[!,(5:IUM575UK'FB;&`In=aY82PT`P\!CmHV5'T8b@^0P_i'JNCn;m$,Di5@%%D/
cV4D-9f1Hr'[oe+c3^l49iU(GFQlOWmnRuj:DE1jPiYY^j%o==:=TGC[+/"FqbU8^;0<%<<;B9h'i.gW
:mD>aeDX:?!Dq<";O'=AeJh=B1K(Uu;Dd3/PtP%thb\G[<Ab@aF]DGl0iaK+;jD,q2-X*]795[J=&i$t
2.9=h=&=$T=4M:m[=)/"2-<k2::6-aTTfa*Q!-&C>#hJ([B3X*X]mZd>*Zd)[D?)?_cq8q=uEipe^%KC
]3LW?>nt7]<R4s9b?e3)?+&?l2</!8f3_PH??Oe(Fn8nHs'PI%?BrcBecfBg$"4SX#rW/r[Kg-I+(!MG
@?pRq<Yo-Z/RfIZ?a_Ur[OYk]79i*<#o60EekcYG<!a<\ATgj[[UEa_O_$FFAbKbK(2IM_Bk:=<A[ZSk
G'.F5=(N.uBJre#G("%iKkT%IB(hd-2OS29=:$m\B9nfrp75m*Iqa(QC6l>Bp:k=MYA+ijC0$O1etHo'
CMPi=CppH^p7H)#d;='WB9q@f(;4UoX(KqjDcXJgG40:6_/AuHE0g09<hX<EO(Gd<EH]$.f,8=i-"U.&
B9s]\=!quh.ruLUEq^SoG<p<DI<7D,F>lX02a)9W6$(XJFdFn)f/[o=5BU$TF]U#5[mbDj96(hSFa%hJ
[srPpK6;B:GB\gcpM"hQ@s3'AG;jko(QEZ`AU1a(H1smUG;X^`MgH8$HM<tR(S,ns^NS5BEM/<tTSa#*
Me,u;I<X*Fi/)k`d=#*LI2C4X=6Y,,gO<5qICIOP=8RHuhgRNYI<Y@4fC=CCgO2$DJQN)+(`e/DiI4lH
I^fuA\.=.X0n7g2K6RM)Qm[Eo/UmIXJ[e@&p`"m2#D/<FK(rQ&=BgIr:PF$^JG;]ip\BD#AVN0YKfEq#
QuRo63J&)JKGY#O=?hJK@>@rHLR='TR$iLb/W"^PLmW[KphPMLV1UaKKg:S&fAh<&NJJFdI2L"Q35^]!
nVd1Z#aj/%(u(&&ac2\:Nd/ftGjC?6_2gS7NO[l*f]e>slj1,IO4`WWfC=k\jc<O<OBD19q"p-J"-Ij*
O-p$2\LEUX+d!SiP'I"h=XB9b#EZJJPZ\Z[3CAuJ6^)dgPurU%)!@1;+-;l[OkDg^=Y#fk09_e]QC/tZ
q(7mM)4-`6Qe@4^)&8>XN!NgFR@o3=H(gZeR@3l=RX(m$=fn.gTpaT)Ri.ujRD#&7\!l!fS/J/mR@B^,
Z^eS*RJFIag!-#^d@FG#SGCp0RGj_4jds$MSN6;3H1df?[@92TT/m@Og&[lBpRlfZTR%EFRM2CJf:Z:^
U&"_W\c\\\(S\ILUH1K23SC*0)kNK]S6@YBRJEY(]EfEX#T9,.TR[:jJd=VoV4)+q^kJX(AZ%RpVj_%l
RU;o&AZ,BQVE/@e\m;9RK;G#\V]'!@g7>0GOfCI1W;:A1>)TAkH`?jIWg\pGRWYXaPH3EFWHqdI)RHGi
\#NVMXErKu]$[RIj/Q;!XdYNU)T/_(J#o*hXP.m$qY@<uc``f'Xr@DDqMh^_Ts5MkXSUDJ]-4HU]s2n^
YIbm\q^\pT]<Rf>#N1%:+FXS84gWk1Zs,c%>=#XN8Z"R6Zo^dagHi6Z<O=ei[MrMZHV:dd;7?@'Zl;rO
qcgL5?_tAO[X3)&qh;Ku=h"98[QBnbHVM'JBsYF6\ltN44%Hj9H+'3;]6fUF]</Vj\%"N;]=X'"4/993
caVZL]3EUogP<H]Fh8Tj^736VgM=Nm^V*k3]piZKqqnoqqn5)a]NbELgZ-!eQ+EI$^Dm-]*"f_HIAMIB
_I.r3]Ih!j/&PUL_`TThgbH_E7Do$h_jj;q*(.Yl;oIHY_gFD]r%H$Z?c0Nf_q\V<]I1_sDoTFea'<>T
]QM7WKua*WaLlB1ggS6n?-(eMa.._&**:*aQc`Q+b+*h"]RS%.LW1==aZR,US=dfkVotU$aIL)i>cl".
e'-URb1t%V+FhI;2pNOo[G3:X4A!D;l*d*:cWl7O]1($Cn^&9McogX>>lDs\43u\Nd%(?f*=^<M&'mB`
d<u,E]L1"n#Lbg(dQJc#]d_EY6dbj&d9QFprB&MW1!Y2=dG7OBrDCsJ<QTYlcFl0f]d;8.'@340eU;Yn
>q=G'9@o_;fA.\(*=LM*?.b\cet%<A4`f<t/_"'mesa.q][+Y=^"%P7c<\'$4JU$3_qNh:gmkRh4g3Ug
c-/>gcTSVi>\CsFgYI8oh>Cd<ID+FLoA'<3hgOVC4o`FUlcm-%i*GU%Sb:bZ!T*eVi;ObD*Ok"!%H$"E
g\oOT^")+mJ05s~>
/LZWDecode filter
<~J.77;+g`!f22"6QE(F4L'*s1UU(FhN*[_PT6fKeu1g2OFN^b8?aQu)X+cO9K;>@5-;'(qDjjI:jJhJ^D
aX5F1b\h,RT?AQZWPnXW3gA!h'M5,>P=V':WH6-D3_(ie<2_[2XZj9hW)dT:8e$Mr?`Hr$p5+c(\Q5-Q
X&HWYP1N't<p!HjA]i,DVVS<)Mf%b"%^OhAFITEWmsq`H-b(Y?',ON`hD.$ZV=,jBW`<J1/06QR%+*8k
R9_Y-;5_rZE`-b->@"MdD!Y$TIbm(F]B`q<hB(^*4PFZGgg0o_J]ZpBpRH,6,BkHu@!.tWL=`!@flae9
;4,RCk4AEI*iOR`c/nZ94oYJJfAZ)jHTkcN:T*XW^X&\Oq7gkfo`N"Ur"B)q0>$0I]l6pnpqSR?.f;KW
Mtm[Q0UqYA_=5Z1%E)*071[1q`%M6\O9>k(5>_hj#t2%?<=VJq9N`:ME3rO`_""4%*l\aigA4'/UdG&L
8Mlb[8It0\s%1X4O"*c-UmVh<''-M196,Ep0M=2!T/+Tr7%"oe;OjK89Tm'52pP>qlSZi5oVF]H1ZZqB
:N.lL2U8Z4_^N`M4S;'(Tp6WgL-_@R8PujK*D'/YSMNu<1rV%B;Ddc":fB4t5>0MV%3J2B2,..Heb'YM
9iAA^@9$>B`G84Hop'B!f(E$e=P'u%HX#%O4cN]G2I2MY<d"(\B%==!T3YX.I@Y.XQBd;A<-IYZ)$SuD
@rkoL2:NJupJ'Cd?$C_?G23t:f5f_,Sb%)3Qdt2HhY6F=H=,:cl[E6o()(t"pauGsiReVXH=9p),Dolr
SbIipfHp-G?!.(\NoPAm7=F1k/jY'L3BdD,htZ>:FQM/0CPq4u2IW(b=cOSo?@d9Q([,:NM4nV:/sE*p
qF6O?C&1l(UhSO8S#,C2AuVkIRc^fQBmU&tXm.smbH:,WY.L[uRm,H.m9=2A[r+9V[BaQ%DWeNH4#ZoA
msDe7^MmF!osa8aG5\W6)n+k4E1DD$_sr)nn&ji[BNu>ESC]pLo3BU-c1?>g4486,5<mG8]k:EtFBqsP
drc[,4k]QMIm_o_rO7..G.i*2g3,W'H/\N=IrjI\*N+&@FZp>$h0H[UTAt.PQ^?]WT"fd=qL43.meHe%
PMH(Ahjs?8s'Mo#qS,hfo5fIj=;Lo6n*U%&5I^([?`X3VmXb>P=:"q7)u>(]"pD^Xq#2Bu%tG3T#sfC$
ruc+jK.n&M^ka-8TVML=n2^Y<#YP8mX<rK0Fqhea=USWe%"rT>$,O\q"lVQuK+QlC_cV6g@>$OoE;C]p
pd#L#$os'i&g]j-R0qp68;XQZqZ=!&$R2rZM\0hY7>S,_?h@?VnTFk#BY>9.'PE<.E\bWod2A]9@>iO5
3CaA8(ZO4aN"Le+7k!OAj5b*;ET0,O(u$%jXFcQhdQBtNm2P(*IZa1n77c)B+=&M&NfjT97`c#`,Xe/d
&q3-eR/\>*b_q^+Sh3NJ8LU?%XHQNL=%auN/E8E4"TYQ.bGfjrV?FPu;Z^:Kl$"gn/AISD-=P+IGqc)m
aI0@iA'@N<0]lWlR<&"<9GsN]VDQhko7go'3K5a?jQ)b.Ap$iTcT<L:cC0rCB[8]$2eRg:SMS9-:RR\6
VH!VbF7*_fg''I6SGo"!RY&f\)*d>4gnHU!M9`[C4X\2bSl9fj;-GV>V>qtH^mGad?r'@.2'o(aSrloC
;b6.9/u5koP>^[O9du&RVKAQ"d^jQol$Y%['T/,R\m\:s*CctaP*T(9LJY!N7&e\qUf2Sb<%;`cW:\6+
dqYXXCAfog227f'MS2sQX]h]3QEf"ub>0WO<38$@VGm?Q>Npi]WqFZH='DM.lbt`[[A(98$N4/-m>.rG
DSjr8I:)>`MQh6E&ct<kAaH?AZF3r]frHc</EN;*eq2.M4$RFr/YTNEMUkqR:MXe>UpDtNe61O=D/G!(
[hcR.>H<*cXo56-2[7`7b@tk]7DuQ6^<kWXEH1Bj`OWGbh-6@ME%Y_O\lWY0>`6(.m_.>e2VR9L43M^4
V9us-:?p]Zc#bUMhn%FBiS84tFMS5,^K9RqJfmF1n)aP`=:5&c$k%Ti7L-`=!s.=!rIZeI"M]1;$"07s
JoIS%^t;]t@8%\mnEp7l\76+Z*']4_[MH](M[SOW"+P;#$GuS=$0'0=LG:tD_t_Otis^9p0d\Zp3<'cS
>[N<WG"'Jt#:*hrJWb!'4NX!A%H;3%Nq&tW"<`(&JcJ*'EopfS=beYB%*+]Tra3m;V_mO`\X@M>DU!Hr
1$8taS25&#cIpB$k8`r^F+.rNRFa]:bkIef*dH%Ws$c+Q$_MNQLX@":3GC&gT6,OKc^COtl-0+#[&0;=
g1O2q*D*5PhPekKRni7N8#LHpTZl>=%dRD:#IUG=f%S_ZCV=kn[FcMP)[B\bSVO?@2Sn"W,@PE%RB\Y&
c.UiAA*be4Z?Et/g7)/UmG33!G37T5RcA,Lh5dpUroMp>DfooVDn%`Dg>(G<GAGI^Yr?"\hE.?Vm@CYr
GM_Q@])-O94mBGbIg"^L5A4qr3X7O@*9%r&M=E2M`H]E8i]Lk/n\.0+\>LG.r(E/l?;&@"-R%RkF-6%=
:!1"B0%Sh$MK+)@a*EFnjucG0F1sTX\^)ee>i2.DmX`]q014qd$_6j<=j?c?8a3llW-)F5e@FI3l!5O4
o1iN?]&u!S5\LUX^;nq(-YVm1QaM".ak=:-D!de6ZhHZ2gcM]XmCgELG@&POHQRM%*P8uZ55F%spNl8!
#K1j.l/B9fHggqm_KcX[ik3$nnNL1%Gjd<I]Jl&CIOE,0?Rat3Q_!]]T?$fS<SY93YP#VjfD7-nk<*s]
o`!UgJT*:HrWg:756'L@O,`YC8&Y3F0BRWMSb%:X`q]R$k5AY@n,?D3qEIX<rL^4`50)LS+%u'NJ%tZk
&(LBh:[ig_`VFs)j85ILpO06;qgVuBr.!>ls0&$lO2V'ZP5aq:s"FNT:ZDE#[f)9q!>!0O^afI?+Tan\
!amM[cm8`I0*8@8!q8&LO?E_#2ZaOB"L(/p:br070a,j%"OK^Bn37'F0a(<'"`RrTY[[k+;Zq&J"0c&9
cu0%@Ifuus#I'0lY^lk;E<T0Q#dALXE01Fq-OOgN#`tG\n7`$pZO(Sr$IF&+&:Y$`\Hrh\$8><b0Pq+m
KaP&\$dbRT:g"6HQi^YD!c[N:OQln/oa]@7%e/otE:jaGrspg^&9..NOUVjUq%0e+%l!_gd/ai@nIY3S
&eQ,pYltcf.2,Q7&MYLDd4l82!>4i8'N$LrYsAtA)&.'P'CcGFO\l^q2\WH-&Q(P&d4#_`@2:RX'Tm/I
&JZ*Z:D]-l(@bH?nV%`uJJZ]](6P($d@V+-NtZM+)K>f[5U6DNYn#0j)\KOuOgQ,__]1D;)tD/mZ,IZe
]c;%4)puVD;:used2S4s*c]pTER,Veh]C2,*\lt&dIeUoh%&uN*>/`$Op)p>ruc<t+#4QS&apkU#9hLH
+gMn);B[7smit]k+*&#;nfoB"%j@(o,*G5:Opr[W.jVDR,k=q]&d'?+,pj6l*C(_K+<gk"FXM3P-PC\O
np`$-E@3Mo.$BE8Z>V/^Ij`Zi.8lWaP*[Q%K.9cm.<:t.dY00VKdouu-Si([18?A*^F0`:.2'ZM1;bNG
a!fB6-kaiV;R%UTf.3$//i(g'ZJ-dJ].T8A/b6(u1?U3oq_$=U0G<CtP4pWXdjifW09Vb)o-#kF,r0Nj
1:&Pfo.`$W2)B;61UB5#o0G2h75T'W1p]n5o2.A$<Aei#27"P/J/A<[)`A@>2D\u(P@Z[/EAl9S2H+fY
;ggU2GrN'J2RA#qPBAi`K/iI83"q31Z_'8LLH-$93-2,\dsjD7ZSn"a3AZXQo<1+%_`&7*3:jaEF/M&4
Tf[=P4d2j-Zb\g=f/Zd;5*NN91XS<@k<&:W4k%_@'AG^7pHWg$4HmHBF7h[Pdm17s4d6UB?krcN'EM/Z
6Bioc1bV2&-UP0d68UPePV#9[5ss-V6rYs1oI!&V4[h1t6ZcU#e4E%B@7(`17?h(IZrKQe7mrSa7.bIf
<(f_<9h'5?7s$g`1kA$dDb%0k7'qqB'RN=a>=`js8@3;)P`\Q0UIg]N8^sq9Zr9OQD+55M6SuJIPbCcM
[n;n07T@2ooX.4hh*W:s::0C`o]uT$'2K><:UL'ro`7iFpJ<^R:pgC$<=Me_'i7mH;7-d/'cg1/rDF@V
;RIB?eM0se0iD"/;fs*Z[67JH79"D$<4,G"ohe^H<E40E<OH+45S$m<%o0NC!>T*FeR_dhEE74'<crUf
[=))`Gun""=ESskQ#BdtIp#d*=7q\XFdH/%G?K'\=;@H/eX]ldP?QME=#I$]Q'5E0Mcquj>BPd)'r>'@
]j%nd>4o^;(#<+p[p?DR>kR&[<TRC!mo[!b>F!`FeT"o\q->l*>d\ia2?R</c!ZhP=Omjgp*!m'-";$H
@^[jtp+^&82.LeiA%"O1p-E4I7:^R5A@>#/ekp!:<Fp>VA[YlUp0hPkAS-+"B!uPgp2O_'F_>lCB=<5$
p46m8KkPXdBXUk?[ZP8^Q"bE0BssRHp7Z4ZV.t1QC::6Zp9ABk[;0rrCUUolp;(Q'`GB_>CpqT)p<d_8
eSTK_D788;p>KmIj_=c%B`JHWTF5Z2mr(,WD\i(cQM5:*s)1s6E45je<pahW$#d9fEAmu=f,&C-'lisk
E]4;F[i]R5"*.H`E>L?M="eVr1NI[IFB:VIf+2l1%rXB]FLNW>pKr&%'6CWcFB;akQW7t5ATRT]FI+q1
(M@l7)0e)_F-coNpP!jY/TY!EG1V4h2gKXlUNO&<GdeQ:pT]'([<m,.Hag\8pVD59`I)mOI(.@JpX+CJ
eU;YpICJ$\pYgQ[jaMF<I^e]np[N_lom_2]J%*KA+9~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/198795660.0 /Pattern get_res
[.9375 0 0 -.9375 72 322.078 ]make_pattern set_pattern
f
2 vmreclaim
false sop
0 0 0 0 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
77.625 309.266 mo
(\001\002\003\004\002\005\003\006\007\010\011\012\010\013\003)
[6.64947 4.28204 4.74345 2.84605 4.28204 1.90601 4.75207 17.4185 5.69222 4.75206 4.28204 4.28204 
4.74345 4.75206 0 ]xsh
169.344 298.953 mo
201.985 298.953 li
201.985 315.828 li
169.344 315.828 li
cp
gsave
grestore
/198795856.0 
<<
/ID /198795856.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 36 21 ] 
/XStep 1555 
/YStep 1555 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
36 0 li
36 21 li
0 21 li
cp
false sop
gsave
/4 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 792 ]ct
[36 0 0 -21 0 792 ]ct
snap_to_device
<<
/T 1
/W 36 
/H 21 
/M[36 0 0 -21 0 21 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J-$ii3$]7K#D>EP:q1$o*<QIs_,2&>8gtR77UiX4^aL$."io[Z#o&[s-]uP^^p&3p>q_R=AlCC>6m4FW
c)25ceFmrJScf+Z3[GQ$8#0$r@9Qqn.86YgWYIR[/2LA/<bk^Hj`ELiYZP^B4!g+UB=(iZ<kDqM6m<2s
mPbN=f'.ChhJU1B2>6uu^gM+`0hrMoLW!YA=Ku0k*KS9PE`k,7="Tc_Aoh+[Lr<_mcf_YR4VjAOVpYtX
R_<=B?*Dms7f,?Gf58"PDKf<uk2$.~>
/LZWDecode filter
<~J/Vfl3$]7K#D>EP:q1$o*<e;cU*c7t<[AQ>7O$5I;5i(eO2n%/3>@cH-^#CmP.>,3>q_R=9uc4@c>,8+
:1k6N]_6Gc3)F9f3[GQ$8"cBO1p_lcRnT_ZC(ul"biMj*eZ0FreTS9+XrNJBA#54/A@#HV(:u`<e9!h.
DHAorf'RZET$LK-h<Ofc^L1ui49=[CLW!YA=M/6&r-gljni7,E="0KXk&SN7#'W5&ctIN)1_uEPVpoI(
>-oIc#HcVD[MqAqf42;DCf&jAg(ShJhJd\o/dD+\a5h8d>eXi0S^6M?i#i~>
/LZWDecode filter
<~J2gq53$]7K#D>EP:q1$o*<U>m>]CUN8gtR77UiX4_i;t)El[5r#o&[s-]uP^d2?K'>q_R=@PRU6dVS*8
c6i.NjR-q.TMT<$3[GBc8#0$s<4ZWudncoAC/m<k<S(<R<bk^Hj`T<bYZP^B4!g0ImWR:N2N(SDfl+:R
D9gaef'R[o?>ioSPKE!9^Yc744;J_8LVc11\@cE4*KS9P?Oqq+:Fh[QAoej&^3;F.ID4TB*?L,1VpfC&
]"LJqrNFjiG$@,,ec3,6DKf<uk4a;=i,7Hq~>
/LZWDecode filter
<~J,g]g3$]7K#D>EP:q1$o*=mro@So+\<[n-/7Uo<*jE<[.O@Wn[3@&,=-^757;Rp>H>q_R;^gJi1c>,8+
:1k6N]_6J,RF#VH3[GQ!"Jeq0<4ZX!S-GokC/m<k<icP-<bk^Hj`\9CYZP^B4!g3:$aa)S<kDqOg^L\t
DHAorf'R[o?>bi9~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/198795856.0 /Pattern get_res
[.9375 0 0 -.9375 168.406 316.766 ]make_pattern set_pattern
f
2 vmreclaim
168.094 297.703 mo
201.985 297.703 li
201.985 298.953 li
168.094 298.953 li
cp
false sop
.230381 .296971 .881865 .00735485 cmyk
f
201.984 297.703 mo
203.234 297.703 li
203.234 315.828 li
201.984 315.828 li
cp
f
169.344 315.828 mo
203.235 315.828 li
203.235 317.078 li
169.344 317.078 li
cp
f
168.094 298.953 mo
169.344 298.953 li
169.344 317.078 li
168.094 317.078 li
cp
f
0 0 0 0 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
174.969 310.516 mo
(\014\015\010\016\016)
[6.17084 1.90602 4.74345 4.28204 0 ]xsh
213.547 309.266 mo
(\017\016\003\020\004\003\003\021\003\022\004\003\011\010\023\003\024\025\026\024\003\027\030\003\015\022)
[6.17084 4.28206 15.9997 4.89734 2.84605 4.74344 15.9997 6.17087 4.75204 4.74344 2.84607 4.75204 
4.28207 4.74344 2.3674 4.75208 15.9997 2.36743 4.74347 4.75204 4.75204 15.5297 6.17087 4.74344 
1.90601 0 ]xsh
ZQVJYM+LiberationSans-BoldItalic*1 [6.84375 0 0 -6.84375 0 0 ]msf
468.641 297.391 mo
(\001\002\003\002\004\005\006\007\002\010\011\012\013\014)
[3.79822 3.79144 3.79825 3.79822 6.84375 1.89569 4.55792 1.90256 3.79144 2.28583 2.2789 4.16782 
2.6554 0 ]xsh
468.641 306.141 mo
(\015\010\002\016\017\002\013\017\005\020\017\021\005\022)
[4.55795 2.2789 3.79825 4.16101 4.16779 3.79825 2.65536 4.16101 1.90256 4.55795 4.16779 1.89566 
1.90259 0 ]xsh
72 321.641 mo
539.5 321.641 li
539.5 357.891 li
72 357.891 li
cp
.117006 .069337 .0465095 0 cmyk
f
72 357.891 mo
540 357.891 li
540 359.141 li
72 359.141 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
.765347 .534203 .317052 .0844739 cmyk
ZQVJYN+LiberationSans-Bold*1 [8.54688 0 0 -8.54688 0 0 ]msf
77.625 333.203 mo
(\001\002\003\004\005\006\007\010\011\011\012\003\013\014\005\006\007\010\011\011)
[5.69222 3.3334 4.74345 4.75206 2.36742 6.17085 2.36742 4.74345 4.75206 15.9997 6.17085 4.74344 
4.75208 2.84604 2.36743 6.17084 2.36743 4.74344 4.75208 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
210.896 333.203 mo
(\031\004\010\032\003\016\033\034\035\031\004\010\032\003\016\036\015\015\035\014\015\010\016\016\003\016)
[5.21359 2.84605 4.74345 7.12808 4.74345 15.5382 6.17084 4.74347 2.3674 5.21362 2.84604 4.74344 
7.12811 4.75204 38.9652 5.69223 1.90604 1.90601 2.36743 6.17084 1.90601 4.74347 4.28204 4.28204 
4.75204 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
77.625 350.703 mo
(\037 \032\032\010\004!"\035\033\003\016\023\003\024\035#\035\031\005\003\015\024\035#\035\014\034\026\016\023\004\035#\035)
[5.11988 4.27425 6.41137 6.40363 4.28199 2.55988 3.84375 2.13713 2.12938 5.56574 4.28199 3.84375 
2.12938 4.282 4.28198 2.12938 1.99884 2.12936 4.69713 1.70662 4.27426 1.70662 4.282 2.12938 
1.99883 2.12938 5.56575 4.27423 4.282 3.84375 2.13713 2.55988 2.13712 1.99109 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
197.391 350.703 mo
($\003\023%\034\024)
[6.40363 4.282 2.13712 4.27425 4.282 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
246.5 350.703 mo
(\021\003\023\010\005\015"\035\031\005\003\015\024\035#\035\014\034\026\016\023\004\035#\035)
[5.55812 4.282 2.13712 4.28198 1.69888 1.69888 2.13715 2.13712 4.68936 1.70663 4.28198 1.69888 
4.28201 2.12936 1.99884 2.12936 5.56577 4.28198 4.27423 3.84375 2.13715 2.55988 2.13712 1.99109 
0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [7.6875 0 0 -7.6875 0 0 ]msf
322.359 350.703 mo
($\003\023%\034\024)
[6.40363 4.28198 2.13715 4.27423 4.28198 0 ]xsh
ZQVJYL+LiberationSans*1 [9.375 0 0 -9.375 0 0 ]msf
76.2813 367.891 mo
(\037 *\032\005\023\035\010\035* \013\035\034\004\035\(\003\010\023 \004\003)
[6.24375 5.2125 5.22194 7.8093 2.08125 2.59681 2.60625 5.21249 2.60625 5.2125 5.22194 5.2125 
2.60625 5.21249 3.12181 2.60625 2.5968 5.22194 5.21249 2.60626 5.21249 3.13124 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [9.375 0 0 -9.375 0 0 ]msf
76.2813 379.141 mo
(\031\034\004\035\( \004\023%\003\004\035\036\007\025\035\004\003\(\003\004\003\026\011\003\035\010\026\024\035\024\003\002\003\015\034\022\003\004\035\024\034\011 \032\003\026\023\010\023\005\034\026+\035\016\003\003\035)
[5.7282 5.2125 3.13125 2.5968 2.60625 5.2125 3.13125 2.5968 5.22194 5.2125 3.1218 2.60625 
6.24376 6.23431 2.60625 2.5968 3.13124 5.21251 2.60625 5.21249 3.12181 5.22194 5.21249 4.6875 
5.22194 2.59682 5.22192 5.21251 5.22194 2.5968 5.22194 5.22194 4.6875 5.21249 2.08125 5.21251 
5.22192 5.21251 3.1218 2.60625 5.21251 5.22194 4.6875 5.21249 7.81873 5.21252 5.22192 2.5968 
5.22195 2.5968 2.08127 5.21249 5.22192 2.59683 2.60623 4.6875 5.21249 5.22192 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g54 <1C60D8A8C9B7A73DB9ECA67DC3DB3DF40BF78C530156D56E132D973B96
9947E9BDFCE790A6D8C83200A2F551D374BC20A4D1CE8F08D638D37064BE4647
CF7418C33B355B8F1554D48F8C375D8C48B552D25459A900E41BDA7277E1FB0A
753762D39720746C86449018A2B64744ED8C5252C777> |-
/g55 <1C60D8A8C9B64EDFFAA81D1DCAEAED88BDCBF912704CA5EB4D54809C12
16D08F479339BC539DEA06899706> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 54 /g54 put
dup 55 /g55 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/g48 /g49 /g50 /g51 /g52 /g53 /g54 /g55 
200{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [9.375 0 0 -9.375 0 0 ]msf
329.25 379.141 mo
(6\010\002\010\035\0377\035\021\034\011 \032\003\026\023\010\023\005\034\026)
[4.6875 5.22192 4.6875 5.21252 2.60623 6.23431 6.24374 2.59683 6.76874 5.21249 4.6875 5.22195 
7.8093 5.22192 5.21252 2.60623 5.21249 2.60626 2.07181 5.22195 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [9.375 0 0 -9.375 0 0 ]msf
429.875 379.141 mo
('\035\020%\010\023\035\024\034\011 \032\003\026\023\010\023\005\034\026)
[2.60626 2.5968 5.72818 5.21249 5.22195 2.5968 2.60626 5.21249 5.22192 4.6875 5.21252 7.81873 
5.21249 5.22195 2.5968 5.22192 2.5968 2.08127 5.21249 0 ]xsh
76.2812 390.391 mo
(\011\034\026\023\010\005\026\016\035\032\034\004\003\035\024\003\023\010\005\015\003\024+\035\024\003\002\003\015\034\022\003\0040\023\010\004\013\003\023\003\024\035\024\003\016\011\004\005\022\023\005\034\026\016+\035\006\005\023%\035\011\034\026\011\003\022\023 \010\015\035\034\002\003\004\002\005\003\006\016+\035\024\003\(\005\026\005\023\005\034\026\016\035\034\(\035\023\003\004\032\016+)
[4.6875 5.22194 5.2125 2.60625 5.21249 2.08125 5.21249 4.6875 2.60625 7.8093 5.21249 3.13124 
5.21251 2.60625 5.21249 5.22195 2.5968 5.22192 2.07181 2.08127 5.21249 5.22194 2.59682 2.60623 
5.21249 5.22195 4.6875 5.21249 2.08124 5.21251 5.22194 5.21249 3.13126 3.1218 2.60626 5.21249 
3.1218 5.22195 5.21249 2.60623 5.21249 5.22195 2.5968 5.22195 5.21249 4.6875 4.6875 3.13123 
2.07184 5.22192 2.5968 2.08127 5.21249 5.22192 4.6875 2.5968 2.60626 6.75931 2.08127 2.5968 
5.22192 2.5968 4.68753 5.22192 5.21249 4.6875 5.22195 5.21249 2.60623 5.21252 5.22192 2.07181 
2.60626 5.21249 4.6875 5.22192 3.12183 4.6875 2.08124 5.21249 6.76877 4.6875 2.5968 2.60623 
5.21249 5.22195 2.5968 2.08127 5.21249 2.08124 2.5968 2.08127 5.21249 5.22192 4.6875 2.59683 
5.22192 2.5968 2.60626 2.5968 5.22195 3.1218 7.81876 4.6875 0 ]xsh
76.2812 401.641 mo
(\006\034\004\012\010\004\034 \026\024\016+\035\010\026\024\035\006\034\004\012\005\026\013\035\011\034\024\003\035\003\027\010\032\022\015\003\016')
[6.75931 5.22194 3.1218 4.6875 5.22194 3.12181 5.22194 5.21249 5.22194 5.2125 4.68751 2.60623 
2.59682 5.22194 5.21249 5.22194 2.59682 6.76874 5.21249 3.13126 4.6875 2.07181 5.22194 5.21251 
2.60623 4.6875 5.21249 5.22195 5.21249 2.60626 5.21249 4.6875 5.22192 7.80933 5.22192 2.07181 
5.22195 4.6875 0 ]xsh
.765347 .534203 .317052 .0844739 cmyk
ZQVJYL+LiberationSans*1 [9.375 0 0 -9.375 0 0 ]msf
76.2813 412.891 mo
(\014\034\022!\004\005\013%\023)
[6.75931 5.22194 5.22194 4.6875 3.12181 2.07181 5.22194 5.21249 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: IDTBAA+LiberationSans AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYL+LiberationSans dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g56 <1C60D8A8C9B61400CEA7FF99BE0838131C8CAF2CDBC8598C950D7A6FC1
DB2A63F2CDDFC38320EABD6F109E30894F4F6A8B75CEC8FBC98A2B0538CBFDEF
0AB5C13AFD2B2D9301135B5440DED402BE3CF612056326CA49DE9A29EAA6C5E0
98D1B5D727B7708B7091AE186374E17AE581A68D168350DD78B535E13ABBD3F3
D4348D48F16A21304D78BAA546B4A9812B469790ACCBFF4401A65CF0830F6764
A3B6C8E6DA0B50F2E788034BA44025706D3B996CD6E993A1C58BCEE665D3FF5C
DD6454B1A7E0710A39C3DDE4CA8BD740A9FEBAE9890E00483632DE376BA9A860
3D11EDF68261F6DF00BCFAE28512F7FD4E4BCB34DA2B004A54F0AB17071E6E26
898BD81F9D53F4FF5ED5FCB2FEE6A9927335BFDEA44E7C88549467A1B66E7435
041622A79D326B5150CC06304040B6643E50C3B36AB406286954E081B1E8C9AA
E587788997634D6A1F95EB3781E8903BB285A694698B45D563956E2F92AF8584
E554CE1CBEB587EF1792D1CABB9052C832630D4326A9AF70EBBB95B7E26C72F7
8D6140C5068C2BCFC0DD8B424E1AA9071A340EB892A72E916EFA1E48C1CB9CA3
B7ED1D3DF52FAB3E6320C2F6961EEC97F4C4558E78C7C5B076142C55B516E699
9E84E45B7BF14515A0E0AE2B6B51AC89868B2D46F18840F47F92E4DB0DBD5848
E65C74FF8278A4663B6F9CD883F628F72A8B152AEB458BF59BE4C9D51863376F
C64C0D37DC0AF95AD43B25918F04B6A50A45F1676793B6B6206D2CF8D4949906
235464D70D835874B9> |-
/g57 <1C60D8A8C9B7EF32242637F9BF280D03B2279C8D43E96DE57B9A2890FA
6648D0AC959F8B02EDD3D806514D7678136CB32FC14C5817729B1E583A647FA0
D6E8C8334620D8DEAC60E11E70CFC6CE4936EB31428AF5CED604EFDFF6558A1B
08E4E8D4ED7282AB01F23995B022EF490787336E142FA30693EED4B527732373
6C3DB4F188C2DFA78F760BFA638B9FDB8DA9B25A19236F26783624576BC2077D
8E55F94AB8DBADC72B7E5209E4B294E5BA1A787115CDA5C78C53191BBA4F4EE5
9966E6DA31FA0A196D8D002C58BAFFD02E174CDD7758AE881A586BE0E9FCF8D5
4AE58ECBD2CE7B40E4A824DEC518BE04CCDFBF721049FFD93D5E870E8B1E97F1
BB8A65F8CDBFDA0A9AFB7AB64F7B17406E8A12AD45DC88B22D3932290A386566
31C5F70921F65B7CC197495C282B5850DEA82227F9F6732ABE44253445CCDC64
3D12B5D7870012568AB72506724F01> |-
/g58 <1C60D8A8C9B7EF3224FA35C9121D9A5336D7DF36ADD15CF00F8D7FCE6B
F5D7799CB0EC0E5A08BA813F8B05497074B62F9C7B3263AB6CE68E98AF8525EB
901F5BB541A34D98CAA3569F7FFAD8D80B08CA09B9C89A1215B3569260A17A81
ABFC8DB97AA54F9EC8B8C15222688A29621820839282531B5A3353F9526E9C65
10626AE49FC8A79012F71D828AD5C77820CCA1C49897986E60B7D4B1B47800EC
CFC222BA23ADEA233A88DE5EC0A587E1C19D10A8E20C1B3AFBC44C14C06CBD1D
BCEE9AA360905953E008143C9089EC65BF41536A8BAFD62A82AD13872D0FB2C4
07D01FAA26215FB1B3DE6DBB7F6ECC51DF00819A0BB373D81235B0090F4743F5
A37F2F4A24179B82DA35270EF95443F443A38A889EFB4DE280984D1855C59148
1D0EA31306FE1B992D0DE52124A07247788B05191EE4B0C13CC35A8342C4C619
1370DC1407B1> |-
/g59 <1C60D8A8C9B7EF3224FEEDDC403EADA82B02CBAEFF3E1D255097B173F1
50485579F7ACE89431B15532DF487B0BAEB936A5C564B5E080098668E0B1F523
A308ABE71D621EC46DF30EE5E77E39D87E024ADE2152FEEC63BA841FEEECC060
CC1B95B9CE7BAD39149575BA2874AF0EE9F25ACF8F43FD0AE3DDCD198889614D
E562C674EB886A7A9A9AA4FB9ED43A1DBC9940357468DAE9E69624DA61B561CD
9A365B8704B64BDB206022023C3D2D60A434A0A1543EF8C168AFBC5C28A58E12
6338F8BF9FFFC2B3D970EF05881710147144C15064F8840C1A4123CFEED6F17A
BD875E5A12189308F6A9AE95> |-
/g60 <1C60D8A8C9B7EF3224F670F39D7A4E4D4FD2D8B13FB1F7002522620A7D
3BB6CC20AAFD8A6D751A2E19C54B7FC34E4ED95ED970DF989EBDA09194DEEE83
B9A955E259454DE078B5C2519A95EA6182B9D4953A1F66A8ED6D991CA70800CA
AFC27BBBA312EF11294348BC74700AA678491CA407A914CD177E8968901C7212
545CB33606D9CEBE6DB78A25D3C03B3AEA24BB8849AD554042B0E6F44884D11A
E633EDB16A8FD8BBF1E47302B88211E7A403243EAD439999FD84A3979E740A98
94DE02F5B1B183669A4EA02DB58CE036CE3B00DE8F028661AD6926BD6FF320D1
5DFD767C4A7E89F593EF6E6A5C788807F58EA1F373BE75> |-
/g61 <1C60D8A8C9B854D0D9EF7559E9E3A8E51AC0F4ED264E142CA6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYL+LiberationSans /Encoding get
dup 56 /g56 put
dup 57 /g57 put
dup 58 /g58 put
dup 59 /g59 put
dup 60 /g60 put
dup 61 /g61 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYL+LiberationSans*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 /g37 /g38 /g39 
/g40 /g41 /g42 /g43 /g44 /g45 /g46 /g47 
/g48 /g49 /g50 /g51 /g52 /g53 /g54 /g55 
/g56 /g57 /g58 /g59 /g60 /g61 194{/.notdef}rp]
ZQVJYL+LiberationSans nf
ZQVJYL+LiberationSans*1 [9.375 0 0 -9.375 0 0 ]msf
116.422 412.891 mo
(\0358\035,99:+\035;<,:+\035\001\004\010\011\015\003\035\010\026\024=\034\004\035\005\023\016\035\010\(\(\005\015\005\010\023\003\016'\035\036\015\015\035\004\005\013%\023\016\035\004\003\016\003\004\002\003\024')
[2.60625 6.89049 2.60625 5.21251 5.22192 5.21251 5.22194 2.5968 2.60625 5.21251 5.22192 5.21251 
5.22194 2.5968 2.60625 7.28432 3.13124 5.21249 4.6875 2.08125 5.21249 2.60626 5.21249 5.22194 
5.21249 2.60625 5.21249 3.13126 2.5968 2.08125 2.5968 4.6875 2.60625 5.21252 2.42798 2.58737 
2.08127 2.07178 2.08127 5.21249 2.60626 5.21249 4.6875 2.60623 2.5968 6.24377 2.07181 2.08127 
2.5968 3.13123 2.07184 5.22192 5.21249 2.60623 4.6875 2.59683 3.13126 5.21246 4.6875 5.22195 
3.1218 4.6875 5.21252 5.22192 0 ]xsh
92 72 mo
520 72 li
520 244.891 li
92 244.891 li
cp
.0162966 .0119936 .0119936 0 cmyk
f
520 72 mo
521.25 72 li
521.25 244.891 li
520 244.891 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
92 244.891 mo
521.25 244.891 li
521.25 246.141 li
92 246.141 li
cp
f
90.75 72 mo
92 72 li
92 246.141 li
90.75 246.141 li
cp
f
102.625 72 mo
500 72 li
500 215.516 li
102.625 215.516 li
cp
0 0 0 0 cmyk
f
500 72 mo
501.25 72 li
501.25 216.766 li
500 216.766 li
cp
.388403 .251469 .155673 .000122072 cmyk
f
gsave
102.625 215.516 mo
500 215.516 li
500 216.766 li
102.625 216.766 li
cp
clp
101.375 215.516 mo
501.25 215.516 li
501.25 216.766 li
101.375 216.766 li
cp
f
grestore
101.375 72 mo
102.625 72 li
102.625 216.766 li
101.375 216.766 li
cp
f
gsave
72 72 mo
540 72 li
540 720 li
72 720 li
cp
clp
.691432 .59588 .662409 .56408 cmyk
true set_gvm
%ADOBeginSubsetFont: JBTAAA+DejaVuLGCSansMono AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZQVJYO+DejaVuLGCSansMono dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g36 <1C60D8A8C9B7C12A526CB24F310FE0A7ACAA73D964415F6A2F64A5A913
A8632542A00D479258D216B49E2774BCB21887DB10F3533CDCFA474CCE0020DA
0480CEA730A30DF1F95912E7C48FA0132F0945DE93FC501FD1BC4D5269DF43BE
86AEFD22FE1633967B8DD60102D27190F3DB4CFFE266AEF390FF2D0B5FA76817
496737BEF994> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZQVJYO+DejaVuLGCSansMono /Encoding get
dup 36 /g36 put
pop
%ADOEndSubsetFont
reset_gvm
/ZQVJYO+DejaVuLGCSansMono*1 
[/g0 /g1 /g2 /g3 /g4 /g5 /g6 /g7 
/g8 /g9 /g10 /g11 /g12 /g13 /g14 /g15 
/g16 /g17 /g18 /g19 /g20 /g21 /g22 /g23 
/g24 /g25 /g26 /g27 /g28 /g29 /g30 /g31 
/g32 /g33 /g34 /g35 /g36 219{/.notdef}rp]
ZQVJYO+DejaVuLGCSansMono nf
ZQVJYO+DejaVuLGCSansMono*1 [11.1094 0 0 -11.1094 0 0 ]msf
110.125 83.25 mo
(\005\010\011\007\024\013\025\002\001$\025\002\010\011\022\023)
[6.6879 6.6879 6.68789 6.68791 6.6879 6.6879 6.67671 6.6879 6.6879 6.6879 6.6879 6.68791 
6.6879 6.6879 6.68791 0 ]xsh
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
110.125 106.859 mo
(.\003\023 \004\026\016\035\023%\003\035\026 \032*\003\004\035\034\(\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\016\035\005\026\035\023%\005\016\035\032\010\023\011%\035\004\003\016 \015\023/\016\035\022\010\023\023\003\004\026')
[6.17085 4.75206 2.36742 4.74345 2.84604 4.75206 4.27344 2.36743 2.37602 4.74345 4.75206 2.36743 
4.74344 4.75208 7.12808 4.74345 4.75206 2.84604 2.36743 4.74345 2.36742 2.36743 4.28204 4.75206 
4.74345 2.36743 4.75204 2.84605 1.90602 4.74344 4.75208 2.36742 4.75206 2.83743 4.75206 4.74345 
4.75204 4.28204 2.36743 1.90601 4.75208 2.36743 2.36743 4.74344 1.90604 4.28204 2.3674 7.12808 
4.74347 2.36743 4.28204 4.75204 2.36743 2.84604 4.74347 4.28204 4.75204 1.90604 2.3674 1.63254 
4.28204 2.36743 4.74344 4.75204 2.36743 2.36743 4.75208 2.83743 4.75204 0 ]xsh
110.125 126.656 mo
(1\004\034 \022\0352\003\004\034\035\024\003\026\034\023\003\016\035\023%\003\035\003\026\023\005\004\003\035\022\010\023\023\003\004\026\035*!\035\011\034\026\002\003\026\023\005\034\026'\035\025\023\035\005\016\035\026\034\023\035\005\026\011\015 \024\003\024\035\005\026\035\023%\005\016\035\011\034 \026\023')
[6.64947 2.84605 4.74345 4.75206 4.74345 2.37602 4.27344 4.75208 2.84604 4.74345 2.36742 4.75206 
4.75206 4.74345 4.75206 2.36743 4.75204 4.27344 2.36743 2.37604 4.74344 4.75208 2.36742 4.74345 
4.75206 2.36742 1.90602 2.84605 4.74344 2.36743 4.75206 4.74345 2.37604 2.36742 4.74345 2.84604 
4.75206 2.36743 4.74345 4.28204 2.36743 4.28204 4.75204 4.74344 4.28204 4.75208 4.74347 2.36743 
1.90601 4.75204 4.75204 2.36743 2.36743 2.36743 2.36743 2.3674 1.90604 4.28204 2.3674 4.74344 
4.75208 2.36743 2.36743 1.90601 4.74347 4.28204 1.90601 4.75204 4.74344 4.75208 4.75208 2.3674 
1.89743 4.75204 2.36743 2.36743 4.75204 1.90601 4.28204 2.36743 4.28204 4.74347 4.75204 4.74347 
2.3674 0 ]xsh
110.125 146.453 mo
(\036\026!\035\026\034\0260\026\003\013\010\023\005\002\003\035\005\026\023\003\013\003\004\035\016\032\010\015\015\003\004\035\023%\010\026\035\034\004\035\003\) \010\015\035\023\034\035\023%\003\035\002\010\015 \003\035\004\003\023 \004\026\003\024\035*!\035\023%\005\016\035\032\003\023%\034\024\035\005\016\035\013 \010\004\010\026\023\003\003\024\035\023\034)
[5.69222 4.75206 4.28204 2.36742 4.74345 4.75206 4.75206 2.83743 4.75206 4.75208 4.74344 4.75208 
2.36742 1.90602 4.28204 4.74344 2.36743 1.90601 4.75208 2.36742 4.74345 4.75206 4.75206 2.83743 
2.36743 4.28204 7.12808 4.75208 1.8974 1.90601 4.75208 2.84604 2.36743 2.36742 4.74345 4.75206 
4.75206 2.36743 4.74344 2.84604 2.36743 4.75208 4.74344 4.75204 4.74347 1.90601 2.36743 2.36743 
4.75204 2.36743 2.3674 4.75208 4.74347 2.36743 4.28204 4.75204 1.90601 4.74344 4.75208 2.36743 
2.84604 4.74344 2.36743 4.75208 2.84604 4.74344 4.75208 4.74344 2.36743 4.75208 4.28204 2.3674 
2.36743 4.75208 1.90601 4.27344 2.37604 7.11948 4.75204 2.36743 4.74347 4.75204 4.75208 2.3674 
1.90604 4.27344 2.37601 4.74347 4.75204 4.74347 2.84604 4.75208 4.74344 2.36743 4.75204 4.75208 
4.74344 2.36743 2.36743 0 ]xsh
110.125 157.703 mo
(*\003\035\010\035\002\010\015\005\024\035\013\004\034 \022\035\005\026\024\003\027\035\(\034\004\035\023%\005\016\035\032\010\023\011%\003\004')
[4.75206 4.74345 2.36742 4.75206 2.36742 4.28204 4.74345 1.90602 1.90601 4.75206 2.36742 4.74347 
2.84604 4.75206 4.74345 4.75206 2.36742 1.90602 4.74345 4.75206 4.75206 4.28204 2.36743 2.36742 
4.74345 2.84604 2.36743 2.36742 4.75206 1.90601 4.28206 2.36742 7.11948 4.75208 2.36742 4.28204 
4.74345 4.75206 2.37604 0 ]xsh
.65185 .579553 .566949 .366949 cmyk
ZQVJYN+LiberationSans-Bold*1 [9.40625 0 0 -9.40625 0 0 ]msf
110.125 178.328 mo
(\023\003\014\024\002\016\011\035)
[6.79131 5.23934 3.14169 5.73782 3.6591 5.73782 5.22987 0 ]xsh
.691432 .59588 .662409 .56408 cmyk
ZQVJYL+LiberationSans*1 [8.54688 0 0 -8.54688 0 0 ]msf
128.875 198.953 mo
(\020%\003\035\026 \032*\003\004\035\034\(\035\011\010\022\023 \004\005\026\013\035\013\004\034 \022\016\035\005\026\035\023%\005\016\035\032\010\023\011%\003\004/\016\035\022\010\023\023\003\004\026)
[5.21359 4.74345 4.75206 2.36743 4.75206 4.74345 7.12808 4.74345 4.75206 2.84605 2.36742 4.74345 
2.36742 2.37604 4.27344 4.75206 4.75206 2.36743 4.74344 2.84605 1.90602 4.75204 4.74347 2.36742 
4.75206 2.83743 4.75208 4.75204 4.74347 4.28204 2.36742 1.90602 4.75204 2.36743 2.36743 4.74344 
1.90604 4.28204 2.3674 7.12808 4.75208 2.36743 4.27344 4.75204 4.75204 2.83746 1.63251 4.28207 
2.3674 4.75208 4.75208 2.3674 2.36743 4.74344 2.84607 0 ]xsh
grestore
.750179 .679652 .670191 .901488 cmyk
ZQVJYQ+DejaVuLGCSerif*1 [10 0 0 -10 0 0 ]msf
36 46 mo
(\001\002\003\004\005\006\007\010\011\012\003\013\014\015\002\016\002\013\017\012\002\003\020\021\022\023\013\024\025\013\026\013\027)
[10.2299 5.95993 3.99994 5.59998 6.43997 7.50992 5.91003 5.14008 6.4299 3.19 4.01001 3.15994 
3.89999 4.01001 5.95993 5.63995 5.95993 3.15994 6.71997 3.19 5.95993 4.01001 3.69995 6.02005 
4.77997 9.47998 3.17001 6.84998 7.29004 3.15994 6.36002 3.17001 0 ]xsh
547.2 46 mo
(\031\013\021\020\013\031)
[6.36005 3.16998 6.02008 3.69995 3.16998 0 ]xsh
36 753 mo
(\005\003\003\032\033\034\034\035\021\004\010\036\021\022\002\004\012\007\036\004\021\023\034\037\002\016\002\010\007\034\026\034\035\021\004\010\034\002\032 \034\037\002\036\036\036)
[6.43997 3.99994 3.99994 6.39999 3.37006 3.37006 3.35999 6.39999 6.02005 5.59998 5.14008 3.17001 
6.02005 4.7699 5.97 5.5899 3.20007 5.89996 3.17001 5.59998 6.02005 9.49005 3.35999 3.09998 
5.95993 5.63995 5.95993 5.14008 5.89996 3.37006 6.36002 3.37006 6.38992 6.03012 5.59998 5.13 
3.37006 5.95993 6.39999 3.19 3.37006 3.09998 5.95993 3.15994 3.17001 0 ]xsh
466.213 753 mo
(!"\034#$\034#!\030$\013!\026\033"%\013\017\001)
[6.36002 6.36002 3.37006 6.36002 6.36002 3.35999 6.36002 6.36002 6.35999 6.36005 3.16998 6.36005 
6.36005 3.37 6.36005 6.36005 3.15991 6.71997 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/4 ]]
[/Pattern [/198795660.0 /198795856.0 ]]
] del_res
true set_gvm
/ZQVJYL+LiberationSans*1 uf
/ZQVJYL+LiberationSans uf
/IDTBAA+LiberationSans uf
reset_gvm
true set_gvm
/ZQVJYQ+DejaVuLGCSerif*1 uf
/ZQVJYQ+DejaVuLGCSerif uf
/GJMAAA+DejaVuLGCSerif uf
reset_gvm
true set_gvm
/ZQVJYN+LiberationSans-Bold*1 uf
/ZQVJYN+LiberationSans-Bold uf
/ZPCBAA+LiberationSans-Bold uf
reset_gvm
true set_gvm
/ZQVJYM+LiberationSans-BoldItalic*1 uf
/ZQVJYM+LiberationSans-BoldItalic uf
/KFXAAA+LiberationSans-BoldItalic uf
reset_gvm
true set_gvm
/ZQVJYO+DejaVuLGCSansMono*1 uf
/ZQVJYO+DejaVuLGCSansMono uf
/JBTAAA+DejaVuLGCSansMono uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 5
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
